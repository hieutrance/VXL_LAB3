
LAB3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002b34  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000024  08002c40  08002c40  00003c40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002c64  08002c64  00004058  2**0
                  CONTENTS
  4 .ARM          00000000  08002c64  08002c64  00004058  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002c64  08002c64  00004058  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002c64  08002c64  00003c64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08002c68  08002c68  00003c68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000058  20000000  08002c6c  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000c4  20000058  08002cc4  00004058  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000011c  08002cc4  0000411c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00004058  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000875e  00000000  00000000  00004081  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001d29  00000000  00000000  0000c7df  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000a40  00000000  00000000  0000e508  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000007be  00000000  00000000  0000ef48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00016f0c  00000000  00000000  0000f706  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000c968  00000000  00000000  00026612  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000824eb  00000000  00000000  00032f7a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b5465  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000283c  00000000  00000000  000b54a8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005b  00000000  00000000  000b7ce4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000058 	.word	0x20000058
 8000128:	00000000 	.word	0x00000000
 800012c:	08002c28 	.word	0x08002c28

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	2000005c 	.word	0x2000005c
 8000148:	08002c28 	.word	0x08002c28

0800014c <isButtonPressed>:
int TimerForKeyPress[NUM_OF_BUTTONS] = {200, 200, 200};

int Pressed_flag[NUM_OF_BUTTONS] = {0};
int LongPressed_flag[NUM_OF_BUTTONS] = {0};

int isButtonPressed(int num){
 800014c:	b480      	push	{r7}
 800014e:	b083      	sub	sp, #12
 8000150:	af00      	add	r7, sp, #0
 8000152:	6078      	str	r0, [r7, #4]
	if(Pressed_flag[num] == 1){
 8000154:	4a09      	ldr	r2, [pc, #36]	@ (800017c <isButtonPressed+0x30>)
 8000156:	687b      	ldr	r3, [r7, #4]
 8000158:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800015c:	2b01      	cmp	r3, #1
 800015e:	d106      	bne.n	800016e <isButtonPressed+0x22>
		Pressed_flag[num] = 0;
 8000160:	4a06      	ldr	r2, [pc, #24]	@ (800017c <isButtonPressed+0x30>)
 8000162:	687b      	ldr	r3, [r7, #4]
 8000164:	2100      	movs	r1, #0
 8000166:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		return 1;
 800016a:	2301      	movs	r3, #1
 800016c:	e000      	b.n	8000170 <isButtonPressed+0x24>
	}
	return 0;
 800016e:	2300      	movs	r3, #0
}
 8000170:	4618      	mov	r0, r3
 8000172:	370c      	adds	r7, #12
 8000174:	46bd      	mov	sp, r7
 8000176:	bc80      	pop	{r7}
 8000178:	4770      	bx	lr
 800017a:	bf00      	nop
 800017c:	20000074 	.word	0x20000074

08000180 <isButtonLongPressed>:

int isButtonLongPressed(int num){
 8000180:	b480      	push	{r7}
 8000182:	b083      	sub	sp, #12
 8000184:	af00      	add	r7, sp, #0
 8000186:	6078      	str	r0, [r7, #4]
	if(LongPressed_flag[num] == 1){
 8000188:	4a09      	ldr	r2, [pc, #36]	@ (80001b0 <isButtonLongPressed+0x30>)
 800018a:	687b      	ldr	r3, [r7, #4]
 800018c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000190:	2b01      	cmp	r3, #1
 8000192:	d106      	bne.n	80001a2 <isButtonLongPressed+0x22>
		LongPressed_flag[num] = 0;
 8000194:	4a06      	ldr	r2, [pc, #24]	@ (80001b0 <isButtonLongPressed+0x30>)
 8000196:	687b      	ldr	r3, [r7, #4]
 8000198:	2100      	movs	r1, #0
 800019a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		return 1;
 800019e:	2301      	movs	r3, #1
 80001a0:	e000      	b.n	80001a4 <isButtonLongPressed+0x24>
	}
	return 0;
 80001a2:	2300      	movs	r3, #0
}
 80001a4:	4618      	mov	r0, r3
 80001a6:	370c      	adds	r7, #12
 80001a8:	46bd      	mov	sp, r7
 80001aa:	bc80      	pop	{r7}
 80001ac:	4770      	bx	lr
 80001ae:	bf00      	nop
 80001b0:	20000080 	.word	0x20000080

080001b4 <getKeyInput>:

void getKeyInput() {
 80001b4:	b580      	push	{r7, lr}
 80001b6:	b082      	sub	sp, #8
 80001b8:	af00      	add	r7, sp, #0
    for (int i = 0; i < NUM_OF_BUTTONS; i++) {
 80001ba:	2300      	movs	r3, #0
 80001bc:	607b      	str	r3, [r7, #4]
 80001be:	e08f      	b.n	80002e0 <getKeyInput+0x12c>
        KeyReg0[i] = KeyReg1[i];
 80001c0:	4a4c      	ldr	r2, [pc, #304]	@ (80002f4 <getKeyInput+0x140>)
 80001c2:	687b      	ldr	r3, [r7, #4]
 80001c4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001c8:	494b      	ldr	r1, [pc, #300]	@ (80002f8 <getKeyInput+0x144>)
 80001ca:	687b      	ldr	r3, [r7, #4]
 80001cc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        KeyReg1[i] = KeyReg2[i];
 80001d0:	4a4a      	ldr	r2, [pc, #296]	@ (80002fc <getKeyInput+0x148>)
 80001d2:	687b      	ldr	r3, [r7, #4]
 80001d4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001d8:	4946      	ldr	r1, [pc, #280]	@ (80002f4 <getKeyInput+0x140>)
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        if (i == MODE_BUTTON) {
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	2b00      	cmp	r3, #0
 80001e4:	d10a      	bne.n	80001fc <getKeyInput+0x48>
            KeyReg2[i] = HAL_GPIO_ReadPin(MODE_BUTTON_GPIO_Port, MODE_BUTTON_Pin);
 80001e6:	2104      	movs	r1, #4
 80001e8:	4845      	ldr	r0, [pc, #276]	@ (8000300 <getKeyInput+0x14c>)
 80001ea:	f001 fcef 	bl	8001bcc <HAL_GPIO_ReadPin>
 80001ee:	4603      	mov	r3, r0
 80001f0:	4619      	mov	r1, r3
 80001f2:	4a42      	ldr	r2, [pc, #264]	@ (80002fc <getKeyInput+0x148>)
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80001fa:	e01a      	b.n	8000232 <getKeyInput+0x7e>
        } else if (i == MODIFY_BUTTON) {
 80001fc:	687b      	ldr	r3, [r7, #4]
 80001fe:	2b01      	cmp	r3, #1
 8000200:	d10a      	bne.n	8000218 <getKeyInput+0x64>
            KeyReg2[i] = HAL_GPIO_ReadPin(MODIFY_BUTTON_GPIO_Port, MODIFY_BUTTON_Pin);
 8000202:	2108      	movs	r1, #8
 8000204:	483e      	ldr	r0, [pc, #248]	@ (8000300 <getKeyInput+0x14c>)
 8000206:	f001 fce1 	bl	8001bcc <HAL_GPIO_ReadPin>
 800020a:	4603      	mov	r3, r0
 800020c:	4619      	mov	r1, r3
 800020e:	4a3b      	ldr	r2, [pc, #236]	@ (80002fc <getKeyInput+0x148>)
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000216:	e00c      	b.n	8000232 <getKeyInput+0x7e>
        } else if (i == SET_BUTTON) {
 8000218:	687b      	ldr	r3, [r7, #4]
 800021a:	2b02      	cmp	r3, #2
 800021c:	d109      	bne.n	8000232 <getKeyInput+0x7e>
            KeyReg2[i] = HAL_GPIO_ReadPin(SET_BUTTON_GPIO_Port, SET_BUTTON_Pin);
 800021e:	2110      	movs	r1, #16
 8000220:	4837      	ldr	r0, [pc, #220]	@ (8000300 <getKeyInput+0x14c>)
 8000222:	f001 fcd3 	bl	8001bcc <HAL_GPIO_ReadPin>
 8000226:	4603      	mov	r3, r0
 8000228:	4619      	mov	r1, r3
 800022a:	4a34      	ldr	r2, [pc, #208]	@ (80002fc <getKeyInput+0x148>)
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        }

        if ((KeyReg0[i] == KeyReg1[i]) && (KeyReg1[i] == KeyReg2[i])) {
 8000232:	4a31      	ldr	r2, [pc, #196]	@ (80002f8 <getKeyInput+0x144>)
 8000234:	687b      	ldr	r3, [r7, #4]
 8000236:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800023a:	492e      	ldr	r1, [pc, #184]	@ (80002f4 <getKeyInput+0x140>)
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000242:	429a      	cmp	r2, r3
 8000244:	d149      	bne.n	80002da <getKeyInput+0x126>
 8000246:	4a2b      	ldr	r2, [pc, #172]	@ (80002f4 <getKeyInput+0x140>)
 8000248:	687b      	ldr	r3, [r7, #4]
 800024a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800024e:	492b      	ldr	r1, [pc, #172]	@ (80002fc <getKeyInput+0x148>)
 8000250:	687b      	ldr	r3, [r7, #4]
 8000252:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000256:	429a      	cmp	r2, r3
 8000258:	d13f      	bne.n	80002da <getKeyInput+0x126>
            if (KeyReg2[i] == PRESSED_STATE) {
 800025a:	4a28      	ldr	r2, [pc, #160]	@ (80002fc <getKeyInput+0x148>)
 800025c:	687b      	ldr	r3, [r7, #4]
 800025e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000262:	2b00      	cmp	r3, #0
 8000264:	d12f      	bne.n	80002c6 <getKeyInput+0x112>
                if (KeyReg3[i] != PRESSED_STATE) { // Phát hiện nhấn ngắn
 8000266:	4a27      	ldr	r2, [pc, #156]	@ (8000304 <getKeyInput+0x150>)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800026e:	2b00      	cmp	r3, #0
 8000270:	d00f      	beq.n	8000292 <getKeyInput+0xde>
                    Pressed_flag[i] = 1;
 8000272:	4a25      	ldr	r2, [pc, #148]	@ (8000308 <getKeyInput+0x154>)
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	2101      	movs	r1, #1
 8000278:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    KeyReg3[i] = PRESSED_STATE;
 800027c:	4a21      	ldr	r2, [pc, #132]	@ (8000304 <getKeyInput+0x150>)
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	2100      	movs	r1, #0
 8000282:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    TimerForKeyPress[i] = 200;
 8000286:	4a21      	ldr	r2, [pc, #132]	@ (800030c <getKeyInput+0x158>)
 8000288:	687b      	ldr	r3, [r7, #4]
 800028a:	21c8      	movs	r1, #200	@ 0xc8
 800028c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000290:	e023      	b.n	80002da <getKeyInput+0x126>
                } else { // Xử lý nhấn giữ
                    TimerForKeyPress[i]--;
 8000292:	4a1e      	ldr	r2, [pc, #120]	@ (800030c <getKeyInput+0x158>)
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800029a:	1e5a      	subs	r2, r3, #1
 800029c:	491b      	ldr	r1, [pc, #108]	@ (800030c <getKeyInput+0x158>)
 800029e:	687b      	ldr	r3, [r7, #4]
 80002a0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
                    if (TimerForKeyPress[i] == 0) {
 80002a4:	4a19      	ldr	r2, [pc, #100]	@ (800030c <getKeyInput+0x158>)
 80002a6:	687b      	ldr	r3, [r7, #4]
 80002a8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80002ac:	2b00      	cmp	r3, #0
 80002ae:	d114      	bne.n	80002da <getKeyInput+0x126>
                        LongPressed_flag[i] = 1;
 80002b0:	4a17      	ldr	r2, [pc, #92]	@ (8000310 <getKeyInput+0x15c>)
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	2101      	movs	r1, #1
 80002b6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                        TimerForKeyPress[i] = 200;
 80002ba:	4a14      	ldr	r2, [pc, #80]	@ (800030c <getKeyInput+0x158>)
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	21c8      	movs	r1, #200	@ 0xc8
 80002c0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80002c4:	e009      	b.n	80002da <getKeyInput+0x126>
                    }
                }
            } else { // Nút không được nhấn
                KeyReg3[i] = NORMAL_STATE;
 80002c6:	4a0f      	ldr	r2, [pc, #60]	@ (8000304 <getKeyInput+0x150>)
 80002c8:	687b      	ldr	r3, [r7, #4]
 80002ca:	2101      	movs	r1, #1
 80002cc:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                TimerForKeyPress[i] = 200; // Reset bộ đếm
 80002d0:	4a0e      	ldr	r2, [pc, #56]	@ (800030c <getKeyInput+0x158>)
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	21c8      	movs	r1, #200	@ 0xc8
 80002d6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    for (int i = 0; i < NUM_OF_BUTTONS; i++) {
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	3301      	adds	r3, #1
 80002de:	607b      	str	r3, [r7, #4]
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	2b02      	cmp	r3, #2
 80002e4:	f77f af6c 	ble.w	80001c0 <getKeyInput+0xc>
            }
        }
    }
}
 80002e8:	bf00      	nop
 80002ea:	bf00      	nop
 80002ec:	3708      	adds	r7, #8
 80002ee:	46bd      	mov	sp, r7
 80002f0:	bd80      	pop	{r7, pc}
 80002f2:	bf00      	nop
 80002f4:	2000000c 	.word	0x2000000c
 80002f8:	20000000 	.word	0x20000000
 80002fc:	20000018 	.word	0x20000018
 8000300:	40010800 	.word	0x40010800
 8000304:	20000024 	.word	0x20000024
 8000308:	20000074 	.word	0x20000074
 800030c:	20000030 	.word	0x20000030
 8000310:	20000080 	.word	0x20000080

08000314 <display7SegLed>:

#include "display7SegLed.h"

int led_buffer[4] = {0};

void display7SegLed(int num){
 8000314:	b580      	push	{r7, lr}
 8000316:	b082      	sub	sp, #8
 8000318:	af00      	add	r7, sp, #0
 800031a:	6078      	str	r0, [r7, #4]
	switch(num){
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	2b09      	cmp	r3, #9
 8000320:	f200 8180 	bhi.w	8000624 <display7SegLed+0x310>
 8000324:	a201      	add	r2, pc, #4	@ (adr r2, 800032c <display7SegLed+0x18>)
 8000326:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800032a:	bf00      	nop
 800032c:	08000355 	.word	0x08000355
 8000330:	0800039d 	.word	0x0800039d
 8000334:	080003e5 	.word	0x080003e5
 8000338:	0800042d 	.word	0x0800042d
 800033c:	08000475 	.word	0x08000475
 8000340:	080004bd 	.word	0x080004bd
 8000344:	08000505 	.word	0x08000505
 8000348:	0800054d 	.word	0x0800054d
 800034c:	08000595 	.word	0x08000595
 8000350:	080005dd 	.word	0x080005dd
	case 0:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 8000354:	2200      	movs	r2, #0
 8000356:	2101      	movs	r1, #1
 8000358:	48b5      	ldr	r0, [pc, #724]	@ (8000630 <display7SegLed+0x31c>)
 800035a:	f001 fc4e 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 800035e:	2200      	movs	r2, #0
 8000360:	2102      	movs	r1, #2
 8000362:	48b3      	ldr	r0, [pc, #716]	@ (8000630 <display7SegLed+0x31c>)
 8000364:	f001 fc49 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 8000368:	2200      	movs	r2, #0
 800036a:	2104      	movs	r1, #4
 800036c:	48b0      	ldr	r0, [pc, #704]	@ (8000630 <display7SegLed+0x31c>)
 800036e:	f001 fc44 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , RESET);
 8000372:	2200      	movs	r2, #0
 8000374:	2108      	movs	r1, #8
 8000376:	48ae      	ldr	r0, [pc, #696]	@ (8000630 <display7SegLed+0x31c>)
 8000378:	f001 fc3f 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , RESET);
 800037c:	2200      	movs	r2, #0
 800037e:	2110      	movs	r1, #16
 8000380:	48ab      	ldr	r0, [pc, #684]	@ (8000630 <display7SegLed+0x31c>)
 8000382:	f001 fc3a 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , RESET);
 8000386:	2200      	movs	r2, #0
 8000388:	2120      	movs	r1, #32
 800038a:	48a9      	ldr	r0, [pc, #676]	@ (8000630 <display7SegLed+0x31c>)
 800038c:	f001 fc35 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , SET);
 8000390:	2201      	movs	r2, #1
 8000392:	2140      	movs	r1, #64	@ 0x40
 8000394:	48a6      	ldr	r0, [pc, #664]	@ (8000630 <display7SegLed+0x31c>)
 8000396:	f001 fc30 	bl	8001bfa <HAL_GPIO_WritePin>
		break;
 800039a:	e144      	b.n	8000626 <display7SegLed+0x312>
	case 1:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , SET);
 800039c:	2201      	movs	r2, #1
 800039e:	2101      	movs	r1, #1
 80003a0:	48a3      	ldr	r0, [pc, #652]	@ (8000630 <display7SegLed+0x31c>)
 80003a2:	f001 fc2a 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 80003a6:	2200      	movs	r2, #0
 80003a8:	2102      	movs	r1, #2
 80003aa:	48a1      	ldr	r0, [pc, #644]	@ (8000630 <display7SegLed+0x31c>)
 80003ac:	f001 fc25 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 80003b0:	2200      	movs	r2, #0
 80003b2:	2104      	movs	r1, #4
 80003b4:	489e      	ldr	r0, [pc, #632]	@ (8000630 <display7SegLed+0x31c>)
 80003b6:	f001 fc20 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , SET);
 80003ba:	2201      	movs	r2, #1
 80003bc:	2108      	movs	r1, #8
 80003be:	489c      	ldr	r0, [pc, #624]	@ (8000630 <display7SegLed+0x31c>)
 80003c0:	f001 fc1b 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , SET);
 80003c4:	2201      	movs	r2, #1
 80003c6:	2110      	movs	r1, #16
 80003c8:	4899      	ldr	r0, [pc, #612]	@ (8000630 <display7SegLed+0x31c>)
 80003ca:	f001 fc16 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , SET);
 80003ce:	2201      	movs	r2, #1
 80003d0:	2120      	movs	r1, #32
 80003d2:	4897      	ldr	r0, [pc, #604]	@ (8000630 <display7SegLed+0x31c>)
 80003d4:	f001 fc11 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , SET);
 80003d8:	2201      	movs	r2, #1
 80003da:	2140      	movs	r1, #64	@ 0x40
 80003dc:	4894      	ldr	r0, [pc, #592]	@ (8000630 <display7SegLed+0x31c>)
 80003de:	f001 fc0c 	bl	8001bfa <HAL_GPIO_WritePin>
		break;
 80003e2:	e120      	b.n	8000626 <display7SegLed+0x312>
	case 2:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 80003e4:	2200      	movs	r2, #0
 80003e6:	2101      	movs	r1, #1
 80003e8:	4891      	ldr	r0, [pc, #580]	@ (8000630 <display7SegLed+0x31c>)
 80003ea:	f001 fc06 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 80003ee:	2200      	movs	r2, #0
 80003f0:	2102      	movs	r1, #2
 80003f2:	488f      	ldr	r0, [pc, #572]	@ (8000630 <display7SegLed+0x31c>)
 80003f4:	f001 fc01 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , SET);
 80003f8:	2201      	movs	r2, #1
 80003fa:	2104      	movs	r1, #4
 80003fc:	488c      	ldr	r0, [pc, #560]	@ (8000630 <display7SegLed+0x31c>)
 80003fe:	f001 fbfc 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , RESET);
 8000402:	2200      	movs	r2, #0
 8000404:	2108      	movs	r1, #8
 8000406:	488a      	ldr	r0, [pc, #552]	@ (8000630 <display7SegLed+0x31c>)
 8000408:	f001 fbf7 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , RESET);
 800040c:	2200      	movs	r2, #0
 800040e:	2110      	movs	r1, #16
 8000410:	4887      	ldr	r0, [pc, #540]	@ (8000630 <display7SegLed+0x31c>)
 8000412:	f001 fbf2 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , SET);
 8000416:	2201      	movs	r2, #1
 8000418:	2120      	movs	r1, #32
 800041a:	4885      	ldr	r0, [pc, #532]	@ (8000630 <display7SegLed+0x31c>)
 800041c:	f001 fbed 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , RESET);
 8000420:	2200      	movs	r2, #0
 8000422:	2140      	movs	r1, #64	@ 0x40
 8000424:	4882      	ldr	r0, [pc, #520]	@ (8000630 <display7SegLed+0x31c>)
 8000426:	f001 fbe8 	bl	8001bfa <HAL_GPIO_WritePin>
		break;
 800042a:	e0fc      	b.n	8000626 <display7SegLed+0x312>
	case 3:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 800042c:	2200      	movs	r2, #0
 800042e:	2101      	movs	r1, #1
 8000430:	487f      	ldr	r0, [pc, #508]	@ (8000630 <display7SegLed+0x31c>)
 8000432:	f001 fbe2 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 8000436:	2200      	movs	r2, #0
 8000438:	2102      	movs	r1, #2
 800043a:	487d      	ldr	r0, [pc, #500]	@ (8000630 <display7SegLed+0x31c>)
 800043c:	f001 fbdd 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 8000440:	2200      	movs	r2, #0
 8000442:	2104      	movs	r1, #4
 8000444:	487a      	ldr	r0, [pc, #488]	@ (8000630 <display7SegLed+0x31c>)
 8000446:	f001 fbd8 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , RESET);
 800044a:	2200      	movs	r2, #0
 800044c:	2108      	movs	r1, #8
 800044e:	4878      	ldr	r0, [pc, #480]	@ (8000630 <display7SegLed+0x31c>)
 8000450:	f001 fbd3 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , SET);
 8000454:	2201      	movs	r2, #1
 8000456:	2110      	movs	r1, #16
 8000458:	4875      	ldr	r0, [pc, #468]	@ (8000630 <display7SegLed+0x31c>)
 800045a:	f001 fbce 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , SET);
 800045e:	2201      	movs	r2, #1
 8000460:	2120      	movs	r1, #32
 8000462:	4873      	ldr	r0, [pc, #460]	@ (8000630 <display7SegLed+0x31c>)
 8000464:	f001 fbc9 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , RESET);
 8000468:	2200      	movs	r2, #0
 800046a:	2140      	movs	r1, #64	@ 0x40
 800046c:	4870      	ldr	r0, [pc, #448]	@ (8000630 <display7SegLed+0x31c>)
 800046e:	f001 fbc4 	bl	8001bfa <HAL_GPIO_WritePin>
		break;
 8000472:	e0d8      	b.n	8000626 <display7SegLed+0x312>
	case 4:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , SET);
 8000474:	2201      	movs	r2, #1
 8000476:	2101      	movs	r1, #1
 8000478:	486d      	ldr	r0, [pc, #436]	@ (8000630 <display7SegLed+0x31c>)
 800047a:	f001 fbbe 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 800047e:	2200      	movs	r2, #0
 8000480:	2102      	movs	r1, #2
 8000482:	486b      	ldr	r0, [pc, #428]	@ (8000630 <display7SegLed+0x31c>)
 8000484:	f001 fbb9 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 8000488:	2200      	movs	r2, #0
 800048a:	2104      	movs	r1, #4
 800048c:	4868      	ldr	r0, [pc, #416]	@ (8000630 <display7SegLed+0x31c>)
 800048e:	f001 fbb4 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , SET);
 8000492:	2201      	movs	r2, #1
 8000494:	2108      	movs	r1, #8
 8000496:	4866      	ldr	r0, [pc, #408]	@ (8000630 <display7SegLed+0x31c>)
 8000498:	f001 fbaf 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , SET);
 800049c:	2201      	movs	r2, #1
 800049e:	2110      	movs	r1, #16
 80004a0:	4863      	ldr	r0, [pc, #396]	@ (8000630 <display7SegLed+0x31c>)
 80004a2:	f001 fbaa 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , RESET);
 80004a6:	2200      	movs	r2, #0
 80004a8:	2120      	movs	r1, #32
 80004aa:	4861      	ldr	r0, [pc, #388]	@ (8000630 <display7SegLed+0x31c>)
 80004ac:	f001 fba5 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , RESET);
 80004b0:	2200      	movs	r2, #0
 80004b2:	2140      	movs	r1, #64	@ 0x40
 80004b4:	485e      	ldr	r0, [pc, #376]	@ (8000630 <display7SegLed+0x31c>)
 80004b6:	f001 fba0 	bl	8001bfa <HAL_GPIO_WritePin>
		break;
 80004ba:	e0b4      	b.n	8000626 <display7SegLed+0x312>
	case 5:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 80004bc:	2200      	movs	r2, #0
 80004be:	2101      	movs	r1, #1
 80004c0:	485b      	ldr	r0, [pc, #364]	@ (8000630 <display7SegLed+0x31c>)
 80004c2:	f001 fb9a 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , SET);
 80004c6:	2201      	movs	r2, #1
 80004c8:	2102      	movs	r1, #2
 80004ca:	4859      	ldr	r0, [pc, #356]	@ (8000630 <display7SegLed+0x31c>)
 80004cc:	f001 fb95 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 80004d0:	2200      	movs	r2, #0
 80004d2:	2104      	movs	r1, #4
 80004d4:	4856      	ldr	r0, [pc, #344]	@ (8000630 <display7SegLed+0x31c>)
 80004d6:	f001 fb90 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , RESET);
 80004da:	2200      	movs	r2, #0
 80004dc:	2108      	movs	r1, #8
 80004de:	4854      	ldr	r0, [pc, #336]	@ (8000630 <display7SegLed+0x31c>)
 80004e0:	f001 fb8b 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , SET);
 80004e4:	2201      	movs	r2, #1
 80004e6:	2110      	movs	r1, #16
 80004e8:	4851      	ldr	r0, [pc, #324]	@ (8000630 <display7SegLed+0x31c>)
 80004ea:	f001 fb86 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , RESET);
 80004ee:	2200      	movs	r2, #0
 80004f0:	2120      	movs	r1, #32
 80004f2:	484f      	ldr	r0, [pc, #316]	@ (8000630 <display7SegLed+0x31c>)
 80004f4:	f001 fb81 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , RESET);
 80004f8:	2200      	movs	r2, #0
 80004fa:	2140      	movs	r1, #64	@ 0x40
 80004fc:	484c      	ldr	r0, [pc, #304]	@ (8000630 <display7SegLed+0x31c>)
 80004fe:	f001 fb7c 	bl	8001bfa <HAL_GPIO_WritePin>
		break;
 8000502:	e090      	b.n	8000626 <display7SegLed+0x312>
	case 6:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 8000504:	2200      	movs	r2, #0
 8000506:	2101      	movs	r1, #1
 8000508:	4849      	ldr	r0, [pc, #292]	@ (8000630 <display7SegLed+0x31c>)
 800050a:	f001 fb76 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , SET);
 800050e:	2201      	movs	r2, #1
 8000510:	2102      	movs	r1, #2
 8000512:	4847      	ldr	r0, [pc, #284]	@ (8000630 <display7SegLed+0x31c>)
 8000514:	f001 fb71 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 8000518:	2200      	movs	r2, #0
 800051a:	2104      	movs	r1, #4
 800051c:	4844      	ldr	r0, [pc, #272]	@ (8000630 <display7SegLed+0x31c>)
 800051e:	f001 fb6c 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , RESET);
 8000522:	2200      	movs	r2, #0
 8000524:	2108      	movs	r1, #8
 8000526:	4842      	ldr	r0, [pc, #264]	@ (8000630 <display7SegLed+0x31c>)
 8000528:	f001 fb67 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , RESET);
 800052c:	2200      	movs	r2, #0
 800052e:	2110      	movs	r1, #16
 8000530:	483f      	ldr	r0, [pc, #252]	@ (8000630 <display7SegLed+0x31c>)
 8000532:	f001 fb62 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , RESET);
 8000536:	2200      	movs	r2, #0
 8000538:	2120      	movs	r1, #32
 800053a:	483d      	ldr	r0, [pc, #244]	@ (8000630 <display7SegLed+0x31c>)
 800053c:	f001 fb5d 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , RESET);
 8000540:	2200      	movs	r2, #0
 8000542:	2140      	movs	r1, #64	@ 0x40
 8000544:	483a      	ldr	r0, [pc, #232]	@ (8000630 <display7SegLed+0x31c>)
 8000546:	f001 fb58 	bl	8001bfa <HAL_GPIO_WritePin>
		break;
 800054a:	e06c      	b.n	8000626 <display7SegLed+0x312>
	case 7:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 800054c:	2200      	movs	r2, #0
 800054e:	2101      	movs	r1, #1
 8000550:	4837      	ldr	r0, [pc, #220]	@ (8000630 <display7SegLed+0x31c>)
 8000552:	f001 fb52 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 8000556:	2200      	movs	r2, #0
 8000558:	2102      	movs	r1, #2
 800055a:	4835      	ldr	r0, [pc, #212]	@ (8000630 <display7SegLed+0x31c>)
 800055c:	f001 fb4d 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 8000560:	2200      	movs	r2, #0
 8000562:	2104      	movs	r1, #4
 8000564:	4832      	ldr	r0, [pc, #200]	@ (8000630 <display7SegLed+0x31c>)
 8000566:	f001 fb48 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , SET);
 800056a:	2201      	movs	r2, #1
 800056c:	2108      	movs	r1, #8
 800056e:	4830      	ldr	r0, [pc, #192]	@ (8000630 <display7SegLed+0x31c>)
 8000570:	f001 fb43 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , SET);
 8000574:	2201      	movs	r2, #1
 8000576:	2110      	movs	r1, #16
 8000578:	482d      	ldr	r0, [pc, #180]	@ (8000630 <display7SegLed+0x31c>)
 800057a:	f001 fb3e 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , SET);
 800057e:	2201      	movs	r2, #1
 8000580:	2120      	movs	r1, #32
 8000582:	482b      	ldr	r0, [pc, #172]	@ (8000630 <display7SegLed+0x31c>)
 8000584:	f001 fb39 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , SET);
 8000588:	2201      	movs	r2, #1
 800058a:	2140      	movs	r1, #64	@ 0x40
 800058c:	4828      	ldr	r0, [pc, #160]	@ (8000630 <display7SegLed+0x31c>)
 800058e:	f001 fb34 	bl	8001bfa <HAL_GPIO_WritePin>
		break;
 8000592:	e048      	b.n	8000626 <display7SegLed+0x312>
	case 8:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 8000594:	2200      	movs	r2, #0
 8000596:	2101      	movs	r1, #1
 8000598:	4825      	ldr	r0, [pc, #148]	@ (8000630 <display7SegLed+0x31c>)
 800059a:	f001 fb2e 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 800059e:	2200      	movs	r2, #0
 80005a0:	2102      	movs	r1, #2
 80005a2:	4823      	ldr	r0, [pc, #140]	@ (8000630 <display7SegLed+0x31c>)
 80005a4:	f001 fb29 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 80005a8:	2200      	movs	r2, #0
 80005aa:	2104      	movs	r1, #4
 80005ac:	4820      	ldr	r0, [pc, #128]	@ (8000630 <display7SegLed+0x31c>)
 80005ae:	f001 fb24 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , RESET);
 80005b2:	2200      	movs	r2, #0
 80005b4:	2108      	movs	r1, #8
 80005b6:	481e      	ldr	r0, [pc, #120]	@ (8000630 <display7SegLed+0x31c>)
 80005b8:	f001 fb1f 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , RESET);
 80005bc:	2200      	movs	r2, #0
 80005be:	2110      	movs	r1, #16
 80005c0:	481b      	ldr	r0, [pc, #108]	@ (8000630 <display7SegLed+0x31c>)
 80005c2:	f001 fb1a 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , RESET);
 80005c6:	2200      	movs	r2, #0
 80005c8:	2120      	movs	r1, #32
 80005ca:	4819      	ldr	r0, [pc, #100]	@ (8000630 <display7SegLed+0x31c>)
 80005cc:	f001 fb15 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , RESET);
 80005d0:	2200      	movs	r2, #0
 80005d2:	2140      	movs	r1, #64	@ 0x40
 80005d4:	4816      	ldr	r0, [pc, #88]	@ (8000630 <display7SegLed+0x31c>)
 80005d6:	f001 fb10 	bl	8001bfa <HAL_GPIO_WritePin>
		break;
 80005da:	e024      	b.n	8000626 <display7SegLed+0x312>
	case 9:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 80005dc:	2200      	movs	r2, #0
 80005de:	2101      	movs	r1, #1
 80005e0:	4813      	ldr	r0, [pc, #76]	@ (8000630 <display7SegLed+0x31c>)
 80005e2:	f001 fb0a 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 80005e6:	2200      	movs	r2, #0
 80005e8:	2102      	movs	r1, #2
 80005ea:	4811      	ldr	r0, [pc, #68]	@ (8000630 <display7SegLed+0x31c>)
 80005ec:	f001 fb05 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 80005f0:	2200      	movs	r2, #0
 80005f2:	2104      	movs	r1, #4
 80005f4:	480e      	ldr	r0, [pc, #56]	@ (8000630 <display7SegLed+0x31c>)
 80005f6:	f001 fb00 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , RESET);
 80005fa:	2200      	movs	r2, #0
 80005fc:	2108      	movs	r1, #8
 80005fe:	480c      	ldr	r0, [pc, #48]	@ (8000630 <display7SegLed+0x31c>)
 8000600:	f001 fafb 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , SET);
 8000604:	2201      	movs	r2, #1
 8000606:	2110      	movs	r1, #16
 8000608:	4809      	ldr	r0, [pc, #36]	@ (8000630 <display7SegLed+0x31c>)
 800060a:	f001 faf6 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , RESET);
 800060e:	2200      	movs	r2, #0
 8000610:	2120      	movs	r1, #32
 8000612:	4807      	ldr	r0, [pc, #28]	@ (8000630 <display7SegLed+0x31c>)
 8000614:	f001 faf1 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , RESET);
 8000618:	2200      	movs	r2, #0
 800061a:	2140      	movs	r1, #64	@ 0x40
 800061c:	4804      	ldr	r0, [pc, #16]	@ (8000630 <display7SegLed+0x31c>)
 800061e:	f001 faec 	bl	8001bfa <HAL_GPIO_WritePin>
		break;
 8000622:	e000      	b.n	8000626 <display7SegLed+0x312>
	default:
		break;
 8000624:	bf00      	nop
	}
}
 8000626:	bf00      	nop
 8000628:	3708      	adds	r7, #8
 800062a:	46bd      	mov	sp, r7
 800062c:	bd80      	pop	{r7, pc}
 800062e:	bf00      	nop
 8000630:	40010c00 	.word	0x40010c00

08000634 <updateBufer>:

void updateBufer(){
 8000634:	b480      	push	{r7}
 8000636:	af00      	add	r7, sp, #0
    led_buffer[0] = (time13 > 99) ? 9 : (time13 / 10);
 8000638:	4b26      	ldr	r3, [pc, #152]	@ (80006d4 <updateBufer+0xa0>)
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	2b63      	cmp	r3, #99	@ 0x63
 800063e:	dc08      	bgt.n	8000652 <updateBufer+0x1e>
 8000640:	4b24      	ldr	r3, [pc, #144]	@ (80006d4 <updateBufer+0xa0>)
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	4a24      	ldr	r2, [pc, #144]	@ (80006d8 <updateBufer+0xa4>)
 8000646:	fb82 1203 	smull	r1, r2, r2, r3
 800064a:	1092      	asrs	r2, r2, #2
 800064c:	17db      	asrs	r3, r3, #31
 800064e:	1ad3      	subs	r3, r2, r3
 8000650:	e000      	b.n	8000654 <updateBufer+0x20>
 8000652:	2309      	movs	r3, #9
 8000654:	4a21      	ldr	r2, [pc, #132]	@ (80006dc <updateBufer+0xa8>)
 8000656:	6013      	str	r3, [r2, #0]
    led_buffer[1] = (time13 > 99) ? 9 : (time13 % 10);
 8000658:	4b1e      	ldr	r3, [pc, #120]	@ (80006d4 <updateBufer+0xa0>)
 800065a:	681b      	ldr	r3, [r3, #0]
 800065c:	2b63      	cmp	r3, #99	@ 0x63
 800065e:	dc0d      	bgt.n	800067c <updateBufer+0x48>
 8000660:	4b1c      	ldr	r3, [pc, #112]	@ (80006d4 <updateBufer+0xa0>)
 8000662:	6819      	ldr	r1, [r3, #0]
 8000664:	4b1c      	ldr	r3, [pc, #112]	@ (80006d8 <updateBufer+0xa4>)
 8000666:	fb83 2301 	smull	r2, r3, r3, r1
 800066a:	109a      	asrs	r2, r3, #2
 800066c:	17cb      	asrs	r3, r1, #31
 800066e:	1ad2      	subs	r2, r2, r3
 8000670:	4613      	mov	r3, r2
 8000672:	009b      	lsls	r3, r3, #2
 8000674:	4413      	add	r3, r2
 8000676:	005b      	lsls	r3, r3, #1
 8000678:	1aca      	subs	r2, r1, r3
 800067a:	e000      	b.n	800067e <updateBufer+0x4a>
 800067c:	2209      	movs	r2, #9
 800067e:	4b17      	ldr	r3, [pc, #92]	@ (80006dc <updateBufer+0xa8>)
 8000680:	605a      	str	r2, [r3, #4]

    led_buffer[2] = (time24 > 99) ? 9 : (time24 / 10);
 8000682:	4b17      	ldr	r3, [pc, #92]	@ (80006e0 <updateBufer+0xac>)
 8000684:	681b      	ldr	r3, [r3, #0]
 8000686:	2b63      	cmp	r3, #99	@ 0x63
 8000688:	dc08      	bgt.n	800069c <updateBufer+0x68>
 800068a:	4b15      	ldr	r3, [pc, #84]	@ (80006e0 <updateBufer+0xac>)
 800068c:	681b      	ldr	r3, [r3, #0]
 800068e:	4a12      	ldr	r2, [pc, #72]	@ (80006d8 <updateBufer+0xa4>)
 8000690:	fb82 1203 	smull	r1, r2, r2, r3
 8000694:	1092      	asrs	r2, r2, #2
 8000696:	17db      	asrs	r3, r3, #31
 8000698:	1ad3      	subs	r3, r2, r3
 800069a:	e000      	b.n	800069e <updateBufer+0x6a>
 800069c:	2309      	movs	r3, #9
 800069e:	4a0f      	ldr	r2, [pc, #60]	@ (80006dc <updateBufer+0xa8>)
 80006a0:	6093      	str	r3, [r2, #8]
    led_buffer[3] = (time24 > 99) ? 9 : (time24 % 10);
 80006a2:	4b0f      	ldr	r3, [pc, #60]	@ (80006e0 <updateBufer+0xac>)
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	2b63      	cmp	r3, #99	@ 0x63
 80006a8:	dc0d      	bgt.n	80006c6 <updateBufer+0x92>
 80006aa:	4b0d      	ldr	r3, [pc, #52]	@ (80006e0 <updateBufer+0xac>)
 80006ac:	6819      	ldr	r1, [r3, #0]
 80006ae:	4b0a      	ldr	r3, [pc, #40]	@ (80006d8 <updateBufer+0xa4>)
 80006b0:	fb83 2301 	smull	r2, r3, r3, r1
 80006b4:	109a      	asrs	r2, r3, #2
 80006b6:	17cb      	asrs	r3, r1, #31
 80006b8:	1ad2      	subs	r2, r2, r3
 80006ba:	4613      	mov	r3, r2
 80006bc:	009b      	lsls	r3, r3, #2
 80006be:	4413      	add	r3, r2
 80006c0:	005b      	lsls	r3, r3, #1
 80006c2:	1aca      	subs	r2, r1, r3
 80006c4:	e000      	b.n	80006c8 <updateBufer+0x94>
 80006c6:	2209      	movs	r2, #9
 80006c8:	4b04      	ldr	r3, [pc, #16]	@ (80006dc <updateBufer+0xa8>)
 80006ca:	60da      	str	r2, [r3, #12]
}
 80006cc:	bf00      	nop
 80006ce:	46bd      	mov	sp, r7
 80006d0:	bc80      	pop	{r7}
 80006d2:	4770      	bx	lr
 80006d4:	200000a8 	.word	0x200000a8
 80006d8:	66666667 	.word	0x66666667
 80006dc:	2000008c 	.word	0x2000008c
 80006e0:	200000ac 	.word	0x200000ac

080006e4 <update7SegLed>:

void update7SegLed(int index){
 80006e4:	b580      	push	{r7, lr}
 80006e6:	b082      	sub	sp, #8
 80006e8:	af00      	add	r7, sp, #0
 80006ea:	6078      	str	r0, [r7, #4]
    HAL_GPIO_WritePin(en1_GPIO_Port, en1_Pin, SET);
 80006ec:	2201      	movs	r2, #1
 80006ee:	2180      	movs	r1, #128	@ 0x80
 80006f0:	482b      	ldr	r0, [pc, #172]	@ (80007a0 <update7SegLed+0xbc>)
 80006f2:	f001 fa82 	bl	8001bfa <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(en2_GPIO_Port, en2_Pin, SET);
 80006f6:	2201      	movs	r2, #1
 80006f8:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80006fc:	4828      	ldr	r0, [pc, #160]	@ (80007a0 <update7SegLed+0xbc>)
 80006fe:	f001 fa7c 	bl	8001bfa <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(en3_GPIO_Port, en3_Pin, SET);
 8000702:	2201      	movs	r2, #1
 8000704:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000708:	4825      	ldr	r0, [pc, #148]	@ (80007a0 <update7SegLed+0xbc>)
 800070a:	f001 fa76 	bl	8001bfa <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(en4_GPIO_Port, en4_Pin, SET);
 800070e:	2201      	movs	r2, #1
 8000710:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000714:	4822      	ldr	r0, [pc, #136]	@ (80007a0 <update7SegLed+0xbc>)
 8000716:	f001 fa70 	bl	8001bfa <HAL_GPIO_WritePin>

    switch(index){
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	2b03      	cmp	r3, #3
 800071e:	d83a      	bhi.n	8000796 <update7SegLed+0xb2>
 8000720:	a201      	add	r2, pc, #4	@ (adr r2, 8000728 <update7SegLed+0x44>)
 8000722:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000726:	bf00      	nop
 8000728:	08000739 	.word	0x08000739
 800072c:	0800074f 	.word	0x0800074f
 8000730:	08000767 	.word	0x08000767
 8000734:	0800077f 	.word	0x0800077f
    case 0:
    	HAL_GPIO_WritePin(en1_GPIO_Port , en1_Pin , RESET);
 8000738:	2200      	movs	r2, #0
 800073a:	2180      	movs	r1, #128	@ 0x80
 800073c:	4818      	ldr	r0, [pc, #96]	@ (80007a0 <update7SegLed+0xbc>)
 800073e:	f001 fa5c 	bl	8001bfa <HAL_GPIO_WritePin>
    	display7SegLed(led_buffer[0]);
 8000742:	4b18      	ldr	r3, [pc, #96]	@ (80007a4 <update7SegLed+0xc0>)
 8000744:	681b      	ldr	r3, [r3, #0]
 8000746:	4618      	mov	r0, r3
 8000748:	f7ff fde4 	bl	8000314 <display7SegLed>
    	break;
 800074c:	e024      	b.n	8000798 <update7SegLed+0xb4>
    case 1:
    	HAL_GPIO_WritePin(en2_GPIO_Port , en2_Pin , RESET);
 800074e:	2200      	movs	r2, #0
 8000750:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000754:	4812      	ldr	r0, [pc, #72]	@ (80007a0 <update7SegLed+0xbc>)
 8000756:	f001 fa50 	bl	8001bfa <HAL_GPIO_WritePin>
    	display7SegLed(led_buffer[1]);
 800075a:	4b12      	ldr	r3, [pc, #72]	@ (80007a4 <update7SegLed+0xc0>)
 800075c:	685b      	ldr	r3, [r3, #4]
 800075e:	4618      	mov	r0, r3
 8000760:	f7ff fdd8 	bl	8000314 <display7SegLed>
    	break;
 8000764:	e018      	b.n	8000798 <update7SegLed+0xb4>
    case 2:
    	HAL_GPIO_WritePin(en3_GPIO_Port , en3_Pin , RESET);
 8000766:	2200      	movs	r2, #0
 8000768:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800076c:	480c      	ldr	r0, [pc, #48]	@ (80007a0 <update7SegLed+0xbc>)
 800076e:	f001 fa44 	bl	8001bfa <HAL_GPIO_WritePin>
    	display7SegLed(led_buffer[2]);
 8000772:	4b0c      	ldr	r3, [pc, #48]	@ (80007a4 <update7SegLed+0xc0>)
 8000774:	689b      	ldr	r3, [r3, #8]
 8000776:	4618      	mov	r0, r3
 8000778:	f7ff fdcc 	bl	8000314 <display7SegLed>
    	break;
 800077c:	e00c      	b.n	8000798 <update7SegLed+0xb4>
    case 3:
    	HAL_GPIO_WritePin(en4_GPIO_Port , en4_Pin , RESET);
 800077e:	2200      	movs	r2, #0
 8000780:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000784:	4806      	ldr	r0, [pc, #24]	@ (80007a0 <update7SegLed+0xbc>)
 8000786:	f001 fa38 	bl	8001bfa <HAL_GPIO_WritePin>
    	display7SegLed(led_buffer[3]);
 800078a:	4b06      	ldr	r3, [pc, #24]	@ (80007a4 <update7SegLed+0xc0>)
 800078c:	68db      	ldr	r3, [r3, #12]
 800078e:	4618      	mov	r0, r3
 8000790:	f7ff fdc0 	bl	8000314 <display7SegLed>
    	break;
 8000794:	e000      	b.n	8000798 <update7SegLed+0xb4>
    default:
    	break;
 8000796:	bf00      	nop
    }
}
 8000798:	bf00      	nop
 800079a:	3708      	adds	r7, #8
 800079c:	46bd      	mov	sp, r7
 800079e:	bd80      	pop	{r7, pc}
 80007a0:	40010c00 	.word	0x40010c00
 80007a4:	2000008c 	.word	0x2000008c

080007a8 <updateTimeForState>:

void updateTimeForState(int status){
 80007a8:	b480      	push	{r7}
 80007aa:	b083      	sub	sp, #12
 80007ac:	af00      	add	r7, sp, #0
 80007ae:	6078      	str	r0, [r7, #4]
	switch(status){
 80007b0:	687b      	ldr	r3, [r7, #4]
 80007b2:	3b02      	subs	r3, #2
 80007b4:	2b03      	cmp	r3, #3
 80007b6:	d82f      	bhi.n	8000818 <updateTimeForState+0x70>
 80007b8:	a201      	add	r2, pc, #4	@ (adr r2, 80007c0 <updateTimeForState+0x18>)
 80007ba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80007be:	bf00      	nop
 80007c0:	080007d1 	.word	0x080007d1
 80007c4:	080007e3 	.word	0x080007e3
 80007c8:	080007f5 	.word	0x080007f5
 80007cc:	08000807 	.word	0x08000807
	case RED13_GREEN24:
		time13 = timeRed;
 80007d0:	4b14      	ldr	r3, [pc, #80]	@ (8000824 <updateTimeForState+0x7c>)
 80007d2:	681b      	ldr	r3, [r3, #0]
 80007d4:	4a14      	ldr	r2, [pc, #80]	@ (8000828 <updateTimeForState+0x80>)
 80007d6:	6013      	str	r3, [r2, #0]
		time24 = timeGreen;
 80007d8:	4b14      	ldr	r3, [pc, #80]	@ (800082c <updateTimeForState+0x84>)
 80007da:	681b      	ldr	r3, [r3, #0]
 80007dc:	4a14      	ldr	r2, [pc, #80]	@ (8000830 <updateTimeForState+0x88>)
 80007de:	6013      	str	r3, [r2, #0]
		break;
 80007e0:	e01b      	b.n	800081a <updateTimeForState+0x72>
	case RED13_YELLOW24:
		time13 = time13remain;
 80007e2:	4b14      	ldr	r3, [pc, #80]	@ (8000834 <updateTimeForState+0x8c>)
 80007e4:	681b      	ldr	r3, [r3, #0]
 80007e6:	4a10      	ldr	r2, [pc, #64]	@ (8000828 <updateTimeForState+0x80>)
 80007e8:	6013      	str	r3, [r2, #0]
		time24 = timeYellow;
 80007ea:	4b13      	ldr	r3, [pc, #76]	@ (8000838 <updateTimeForState+0x90>)
 80007ec:	681b      	ldr	r3, [r3, #0]
 80007ee:	4a10      	ldr	r2, [pc, #64]	@ (8000830 <updateTimeForState+0x88>)
 80007f0:	6013      	str	r3, [r2, #0]
		break;
 80007f2:	e012      	b.n	800081a <updateTimeForState+0x72>
	case GREEN13_RED24:
		time13 = timeGreen;
 80007f4:	4b0d      	ldr	r3, [pc, #52]	@ (800082c <updateTimeForState+0x84>)
 80007f6:	681b      	ldr	r3, [r3, #0]
 80007f8:	4a0b      	ldr	r2, [pc, #44]	@ (8000828 <updateTimeForState+0x80>)
 80007fa:	6013      	str	r3, [r2, #0]
		time24 = timeRed;
 80007fc:	4b09      	ldr	r3, [pc, #36]	@ (8000824 <updateTimeForState+0x7c>)
 80007fe:	681b      	ldr	r3, [r3, #0]
 8000800:	4a0b      	ldr	r2, [pc, #44]	@ (8000830 <updateTimeForState+0x88>)
 8000802:	6013      	str	r3, [r2, #0]
		break;
 8000804:	e009      	b.n	800081a <updateTimeForState+0x72>
	case YELLOW13_RED24:
		time13 = timeYellow;
 8000806:	4b0c      	ldr	r3, [pc, #48]	@ (8000838 <updateTimeForState+0x90>)
 8000808:	681b      	ldr	r3, [r3, #0]
 800080a:	4a07      	ldr	r2, [pc, #28]	@ (8000828 <updateTimeForState+0x80>)
 800080c:	6013      	str	r3, [r2, #0]
		time24 = time24remain;
 800080e:	4b0b      	ldr	r3, [pc, #44]	@ (800083c <updateTimeForState+0x94>)
 8000810:	681b      	ldr	r3, [r3, #0]
 8000812:	4a07      	ldr	r2, [pc, #28]	@ (8000830 <updateTimeForState+0x88>)
 8000814:	6013      	str	r3, [r2, #0]
		break;
 8000816:	e000      	b.n	800081a <updateTimeForState+0x72>
	default:
		break;
 8000818:	bf00      	nop
	}
}
 800081a:	bf00      	nop
 800081c:	370c      	adds	r7, #12
 800081e:	46bd      	mov	sp, r7
 8000820:	bc80      	pop	{r7}
 8000822:	4770      	bx	lr
 8000824:	20000040 	.word	0x20000040
 8000828:	200000a8 	.word	0x200000a8
 800082c:	20000044 	.word	0x20000044
 8000830:	200000ac 	.word	0x200000ac
 8000834:	200000b0 	.word	0x200000b0
 8000838:	20000048 	.word	0x20000048
 800083c:	200000b4 	.word	0x200000b4

08000840 <turnOffAll7Seg>:

void turnOffAll7Seg(){
 8000840:	b580      	push	{r7, lr}
 8000842:	af00      	add	r7, sp, #0
    HAL_GPIO_WritePin(en1_GPIO_Port, en1_Pin, SET);
 8000844:	2201      	movs	r2, #1
 8000846:	2180      	movs	r1, #128	@ 0x80
 8000848:	480b      	ldr	r0, [pc, #44]	@ (8000878 <turnOffAll7Seg+0x38>)
 800084a:	f001 f9d6 	bl	8001bfa <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(en2_GPIO_Port, en2_Pin, SET);
 800084e:	2201      	movs	r2, #1
 8000850:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000854:	4808      	ldr	r0, [pc, #32]	@ (8000878 <turnOffAll7Seg+0x38>)
 8000856:	f001 f9d0 	bl	8001bfa <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(en3_GPIO_Port, en3_Pin, SET);
 800085a:	2201      	movs	r2, #1
 800085c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000860:	4805      	ldr	r0, [pc, #20]	@ (8000878 <turnOffAll7Seg+0x38>)
 8000862:	f001 f9ca 	bl	8001bfa <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(en4_GPIO_Port, en4_Pin, SET);
 8000866:	2201      	movs	r2, #1
 8000868:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800086c:	4802      	ldr	r0, [pc, #8]	@ (8000878 <turnOffAll7Seg+0x38>)
 800086e:	f001 f9c4 	bl	8001bfa <HAL_GPIO_WritePin>
}
 8000872:	bf00      	nop
 8000874:	bd80      	pop	{r7, pc}
 8000876:	bf00      	nop
 8000878:	40010c00 	.word	0x40010c00

0800087c <fsm_automatic>:

#include "fsm_automatic.h"
#include "software_timer.h"
int led_index;

void fsm_automatic(){
 800087c:	b580      	push	{r7, lr}
 800087e:	af00      	add	r7, sp, #0
	switch(status){
 8000880:	4ba3      	ldr	r3, [pc, #652]	@ (8000b10 <fsm_automatic+0x294>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	3b01      	subs	r3, #1
 8000886:	2b04      	cmp	r3, #4
 8000888:	f200 8267 	bhi.w	8000d5a <fsm_automatic+0x4de>
 800088c:	a201      	add	r2, pc, #4	@ (adr r2, 8000894 <fsm_automatic+0x18>)
 800088e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000892:	bf00      	nop
 8000894:	080008a9 	.word	0x080008a9
 8000898:	080008db 	.word	0x080008db
 800089c:	080009ff 	.word	0x080009ff
 80008a0:	08000b35 	.word	0x08000b35
 80008a4:	08000c4d 	.word	0x08000c4d
	case INIT:
		status = RED13_GREEN24;
 80008a8:	4b99      	ldr	r3, [pc, #612]	@ (8000b10 <fsm_automatic+0x294>)
 80008aa:	2202      	movs	r2, #2
 80008ac:	601a      	str	r2, [r3, #0]
		led_index = 0;
 80008ae:	4b99      	ldr	r3, [pc, #612]	@ (8000b14 <fsm_automatic+0x298>)
 80008b0:	2200      	movs	r2, #0
 80008b2:	601a      	str	r2, [r3, #0]
		setTimer(1 , timeGreen*1000);
 80008b4:	4b98      	ldr	r3, [pc, #608]	@ (8000b18 <fsm_automatic+0x29c>)
 80008b6:	681b      	ldr	r3, [r3, #0]
 80008b8:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80008bc:	fb02 f303 	mul.w	r3, r2, r3
 80008c0:	4619      	mov	r1, r3
 80008c2:	2001      	movs	r0, #1
 80008c4:	f000 fd68 	bl	8001398 <setTimer>
		timer_flag[2] = 1;
 80008c8:	4b94      	ldr	r3, [pc, #592]	@ (8000b1c <fsm_automatic+0x2a0>)
 80008ca:	2201      	movs	r2, #1
 80008cc:	609a      	str	r2, [r3, #8]
		timer_flag[3] = 1;
 80008ce:	4b93      	ldr	r3, [pc, #588]	@ (8000b1c <fsm_automatic+0x2a0>)
 80008d0:	2201      	movs	r2, #1
 80008d2:	60da      	str	r2, [r3, #12]
		updateBufer();
 80008d4:	f7ff feae 	bl	8000634 <updateBufer>
		break;
 80008d8:	e248      	b.n	8000d6c <fsm_automatic+0x4f0>
////////////////////////////////////////////////
	case RED13_GREEN24:
		updateTimeForState(status);
 80008da:	4b8d      	ldr	r3, [pc, #564]	@ (8000b10 <fsm_automatic+0x294>)
 80008dc:	681b      	ldr	r3, [r3, #0]
 80008de:	4618      	mov	r0, r3
 80008e0:	f7ff ff62 	bl	80007a8 <updateTimeForState>
		//set cho lane 13
		HAL_GPIO_WritePin(RED_13_GPIO_Port , RED_13_Pin , GPIO_PIN_RESET);
 80008e4:	2200      	movs	r2, #0
 80008e6:	2120      	movs	r1, #32
 80008e8:	488d      	ldr	r0, [pc, #564]	@ (8000b20 <fsm_automatic+0x2a4>)
 80008ea:	f001 f986 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_13_GPIO_Port , YELLOW_13_Pin , GPIO_PIN_SET);
 80008ee:	2201      	movs	r2, #1
 80008f0:	2140      	movs	r1, #64	@ 0x40
 80008f2:	488b      	ldr	r0, [pc, #556]	@ (8000b20 <fsm_automatic+0x2a4>)
 80008f4:	f001 f981 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_13_GPIO_Port , GREEN_13_Pin , GPIO_PIN_SET);
 80008f8:	2201      	movs	r2, #1
 80008fa:	2180      	movs	r1, #128	@ 0x80
 80008fc:	4888      	ldr	r0, [pc, #544]	@ (8000b20 <fsm_automatic+0x2a4>)
 80008fe:	f001 f97c 	bl	8001bfa <HAL_GPIO_WritePin>
		//set cho lane 24
		HAL_GPIO_WritePin(RED_24_GPIO_Port , RED_24_Pin , GPIO_PIN_SET);
 8000902:	2201      	movs	r2, #1
 8000904:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000908:	4885      	ldr	r0, [pc, #532]	@ (8000b20 <fsm_automatic+0x2a4>)
 800090a:	f001 f976 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_24_GPIO_Port , YELLOW_24_Pin , GPIO_PIN_SET);
 800090e:	2201      	movs	r2, #1
 8000910:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000914:	4882      	ldr	r0, [pc, #520]	@ (8000b20 <fsm_automatic+0x2a4>)
 8000916:	f001 f970 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_24_GPIO_Port , GREEN_24_Pin , GPIO_PIN_RESET);
 800091a:	2200      	movs	r2, #0
 800091c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000920:	487f      	ldr	r0, [pc, #508]	@ (8000b20 <fsm_automatic+0x2a4>)
 8000922:	f001 f96a 	bl	8001bfa <HAL_GPIO_WritePin>

		if(isTimerFlagSet(1)){
 8000926:	2001      	movs	r0, #1
 8000928:	f000 fd5c 	bl	80013e4 <isTimerFlagSet>
 800092c:	4603      	mov	r3, r0
 800092e:	2b00      	cmp	r3, #0
 8000930:	d010      	beq.n	8000954 <fsm_automatic+0xd8>
			time13remain = time13;
 8000932:	4b7c      	ldr	r3, [pc, #496]	@ (8000b24 <fsm_automatic+0x2a8>)
 8000934:	681b      	ldr	r3, [r3, #0]
 8000936:	4a7c      	ldr	r2, [pc, #496]	@ (8000b28 <fsm_automatic+0x2ac>)
 8000938:	6013      	str	r3, [r2, #0]
			status = RED13_YELLOW24;
 800093a:	4b75      	ldr	r3, [pc, #468]	@ (8000b10 <fsm_automatic+0x294>)
 800093c:	2203      	movs	r2, #3
 800093e:	601a      	str	r2, [r3, #0]
			setTimer(1 , timeYellow*1000);
 8000940:	4b7a      	ldr	r3, [pc, #488]	@ (8000b2c <fsm_automatic+0x2b0>)
 8000942:	681b      	ldr	r3, [r3, #0]
 8000944:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000948:	fb02 f303 	mul.w	r3, r2, r3
 800094c:	4619      	mov	r1, r3
 800094e:	2001      	movs	r0, #1
 8000950:	f000 fd22 	bl	8001398 <setTimer>
		}
		if(isTimerFlagSet(2)){
 8000954:	2002      	movs	r0, #2
 8000956:	f000 fd45 	bl	80013e4 <isTimerFlagSet>
 800095a:	4603      	mov	r3, r0
 800095c:	2b00      	cmp	r3, #0
 800095e:	d014      	beq.n	800098a <fsm_automatic+0x10e>
			update7SegLed(led_index);
 8000960:	4b6c      	ldr	r3, [pc, #432]	@ (8000b14 <fsm_automatic+0x298>)
 8000962:	681b      	ldr	r3, [r3, #0]
 8000964:	4618      	mov	r0, r3
 8000966:	f7ff febd 	bl	80006e4 <update7SegLed>
			setTimer(2 , 250);
 800096a:	21fa      	movs	r1, #250	@ 0xfa
 800096c:	2002      	movs	r0, #2
 800096e:	f000 fd13 	bl	8001398 <setTimer>
			led_index++;
 8000972:	4b68      	ldr	r3, [pc, #416]	@ (8000b14 <fsm_automatic+0x298>)
 8000974:	681b      	ldr	r3, [r3, #0]
 8000976:	3301      	adds	r3, #1
 8000978:	4a66      	ldr	r2, [pc, #408]	@ (8000b14 <fsm_automatic+0x298>)
 800097a:	6013      	str	r3, [r2, #0]
			if(led_index >= 4){
 800097c:	4b65      	ldr	r3, [pc, #404]	@ (8000b14 <fsm_automatic+0x298>)
 800097e:	681b      	ldr	r3, [r3, #0]
 8000980:	2b03      	cmp	r3, #3
 8000982:	dd02      	ble.n	800098a <fsm_automatic+0x10e>
				led_index = 0;
 8000984:	4b63      	ldr	r3, [pc, #396]	@ (8000b14 <fsm_automatic+0x298>)
 8000986:	2200      	movs	r2, #0
 8000988:	601a      	str	r2, [r3, #0]
			}
		}
		if(isTimerFlagSet(3)){
 800098a:	2003      	movs	r0, #3
 800098c:	f000 fd2a 	bl	80013e4 <isTimerFlagSet>
 8000990:	4603      	mov	r3, r0
 8000992:	2b00      	cmp	r3, #0
 8000994:	d015      	beq.n	80009c2 <fsm_automatic+0x146>
			time13--;
 8000996:	4b63      	ldr	r3, [pc, #396]	@ (8000b24 <fsm_automatic+0x2a8>)
 8000998:	681b      	ldr	r3, [r3, #0]
 800099a:	3b01      	subs	r3, #1
 800099c:	4a61      	ldr	r2, [pc, #388]	@ (8000b24 <fsm_automatic+0x2a8>)
 800099e:	6013      	str	r3, [r2, #0]
			time24--;
 80009a0:	4b63      	ldr	r3, [pc, #396]	@ (8000b30 <fsm_automatic+0x2b4>)
 80009a2:	681b      	ldr	r3, [r3, #0]
 80009a4:	3b01      	subs	r3, #1
 80009a6:	4a62      	ldr	r2, [pc, #392]	@ (8000b30 <fsm_automatic+0x2b4>)
 80009a8:	6013      	str	r3, [r2, #0]
			updateBufer();
 80009aa:	f7ff fe43 	bl	8000634 <updateBufer>
			updateTimeForState(status);
 80009ae:	4b58      	ldr	r3, [pc, #352]	@ (8000b10 <fsm_automatic+0x294>)
 80009b0:	681b      	ldr	r3, [r3, #0]
 80009b2:	4618      	mov	r0, r3
 80009b4:	f7ff fef8 	bl	80007a8 <updateTimeForState>
			setTimer(3 , 1000);
 80009b8:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80009bc:	2003      	movs	r0, #3
 80009be:	f000 fceb 	bl	8001398 <setTimer>
		}

		if(isButtonPressed(MODE_BUTTON)==1){
 80009c2:	2000      	movs	r0, #0
 80009c4:	f7ff fbc2 	bl	800014c <isButtonPressed>
 80009c8:	4603      	mov	r3, r0
 80009ca:	2b01      	cmp	r3, #1
 80009cc:	f040 81c7 	bne.w	8000d5e <fsm_automatic+0x4e2>
			status = MODIFY_RED;
 80009d0:	4b4f      	ldr	r3, [pc, #316]	@ (8000b10 <fsm_automatic+0x294>)
 80009d2:	220b      	movs	r2, #11
 80009d4:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 80009d6:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 80009da:	2001      	movs	r0, #1
 80009dc:	f000 fcdc 	bl	8001398 <setTimer>
			led_index = 0;
 80009e0:	4b4c      	ldr	r3, [pc, #304]	@ (8000b14 <fsm_automatic+0x298>)
 80009e2:	2200      	movs	r2, #0
 80009e4:	601a      	str	r2, [r3, #0]
			timer_flag[2] = 1;
 80009e6:	4b4d      	ldr	r3, [pc, #308]	@ (8000b1c <fsm_automatic+0x2a0>)
 80009e8:	2201      	movs	r2, #1
 80009ea:	609a      	str	r2, [r3, #8]

			turnOffAll7Seg();
 80009ec:	f7ff ff28 	bl	8000840 <turnOffAll7Seg>
			turnoff_red();
 80009f0:	f000 fb70 	bl	80010d4 <turnoff_red>
			turnoff_yellow();
 80009f4:	f000 fb80 	bl	80010f8 <turnoff_yellow>
			turnoff_green();
 80009f8:	f000 fb90 	bl	800111c <turnoff_green>
		}
		break;
 80009fc:	e1af      	b.n	8000d5e <fsm_automatic+0x4e2>
//////////////////////////////////////////////
	case RED13_YELLOW24:
		updateTimeForState(status);
 80009fe:	4b44      	ldr	r3, [pc, #272]	@ (8000b10 <fsm_automatic+0x294>)
 8000a00:	681b      	ldr	r3, [r3, #0]
 8000a02:	4618      	mov	r0, r3
 8000a04:	f7ff fed0 	bl	80007a8 <updateTimeForState>
		//set cho lane 13
		HAL_GPIO_WritePin(RED_13_GPIO_Port , RED_13_Pin , GPIO_PIN_RESET);
 8000a08:	2200      	movs	r2, #0
 8000a0a:	2120      	movs	r1, #32
 8000a0c:	4844      	ldr	r0, [pc, #272]	@ (8000b20 <fsm_automatic+0x2a4>)
 8000a0e:	f001 f8f4 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_13_GPIO_Port , YELLOW_13_Pin , GPIO_PIN_SET);
 8000a12:	2201      	movs	r2, #1
 8000a14:	2140      	movs	r1, #64	@ 0x40
 8000a16:	4842      	ldr	r0, [pc, #264]	@ (8000b20 <fsm_automatic+0x2a4>)
 8000a18:	f001 f8ef 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_13_GPIO_Port , GREEN_13_Pin , GPIO_PIN_SET);
 8000a1c:	2201      	movs	r2, #1
 8000a1e:	2180      	movs	r1, #128	@ 0x80
 8000a20:	483f      	ldr	r0, [pc, #252]	@ (8000b20 <fsm_automatic+0x2a4>)
 8000a22:	f001 f8ea 	bl	8001bfa <HAL_GPIO_WritePin>
		//set cho lane 24
		HAL_GPIO_WritePin(RED_24_GPIO_Port , RED_24_Pin , GPIO_PIN_SET);
 8000a26:	2201      	movs	r2, #1
 8000a28:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000a2c:	483c      	ldr	r0, [pc, #240]	@ (8000b20 <fsm_automatic+0x2a4>)
 8000a2e:	f001 f8e4 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_24_GPIO_Port , YELLOW_24_Pin , GPIO_PIN_RESET);
 8000a32:	2200      	movs	r2, #0
 8000a34:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000a38:	4839      	ldr	r0, [pc, #228]	@ (8000b20 <fsm_automatic+0x2a4>)
 8000a3a:	f001 f8de 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_24_GPIO_Port , GREEN_24_Pin , GPIO_PIN_SET);
 8000a3e:	2201      	movs	r2, #1
 8000a40:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000a44:	4836      	ldr	r0, [pc, #216]	@ (8000b20 <fsm_automatic+0x2a4>)
 8000a46:	f001 f8d8 	bl	8001bfa <HAL_GPIO_WritePin>

		if(isTimerFlagSet(1) == 1){
 8000a4a:	2001      	movs	r0, #1
 8000a4c:	f000 fcca 	bl	80013e4 <isTimerFlagSet>
 8000a50:	4603      	mov	r3, r0
 8000a52:	2b01      	cmp	r3, #1
 8000a54:	d10c      	bne.n	8000a70 <fsm_automatic+0x1f4>
			status = GREEN13_RED24;
 8000a56:	4b2e      	ldr	r3, [pc, #184]	@ (8000b10 <fsm_automatic+0x294>)
 8000a58:	2204      	movs	r2, #4
 8000a5a:	601a      	str	r2, [r3, #0]
			setTimer(1 , timeGreen*1000);
 8000a5c:	4b2e      	ldr	r3, [pc, #184]	@ (8000b18 <fsm_automatic+0x29c>)
 8000a5e:	681b      	ldr	r3, [r3, #0]
 8000a60:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000a64:	fb02 f303 	mul.w	r3, r2, r3
 8000a68:	4619      	mov	r1, r3
 8000a6a:	2001      	movs	r0, #1
 8000a6c:	f000 fc94 	bl	8001398 <setTimer>
		}
		if(isTimerFlagSet(2)){
 8000a70:	2002      	movs	r0, #2
 8000a72:	f000 fcb7 	bl	80013e4 <isTimerFlagSet>
 8000a76:	4603      	mov	r3, r0
 8000a78:	2b00      	cmp	r3, #0
 8000a7a:	d014      	beq.n	8000aa6 <fsm_automatic+0x22a>
			update7SegLed(led_index);
 8000a7c:	4b25      	ldr	r3, [pc, #148]	@ (8000b14 <fsm_automatic+0x298>)
 8000a7e:	681b      	ldr	r3, [r3, #0]
 8000a80:	4618      	mov	r0, r3
 8000a82:	f7ff fe2f 	bl	80006e4 <update7SegLed>
			setTimer(2 , 250);
 8000a86:	21fa      	movs	r1, #250	@ 0xfa
 8000a88:	2002      	movs	r0, #2
 8000a8a:	f000 fc85 	bl	8001398 <setTimer>
			led_index++;
 8000a8e:	4b21      	ldr	r3, [pc, #132]	@ (8000b14 <fsm_automatic+0x298>)
 8000a90:	681b      	ldr	r3, [r3, #0]
 8000a92:	3301      	adds	r3, #1
 8000a94:	4a1f      	ldr	r2, [pc, #124]	@ (8000b14 <fsm_automatic+0x298>)
 8000a96:	6013      	str	r3, [r2, #0]
			if(led_index >= 4){
 8000a98:	4b1e      	ldr	r3, [pc, #120]	@ (8000b14 <fsm_automatic+0x298>)
 8000a9a:	681b      	ldr	r3, [r3, #0]
 8000a9c:	2b03      	cmp	r3, #3
 8000a9e:	dd02      	ble.n	8000aa6 <fsm_automatic+0x22a>
				led_index = 0;
 8000aa0:	4b1c      	ldr	r3, [pc, #112]	@ (8000b14 <fsm_automatic+0x298>)
 8000aa2:	2200      	movs	r2, #0
 8000aa4:	601a      	str	r2, [r3, #0]
			}
		}
		if(isTimerFlagSet(3)){
 8000aa6:	2003      	movs	r0, #3
 8000aa8:	f000 fc9c 	bl	80013e4 <isTimerFlagSet>
 8000aac:	4603      	mov	r3, r0
 8000aae:	2b00      	cmp	r3, #0
 8000ab0:	d015      	beq.n	8000ade <fsm_automatic+0x262>
			time13--;
 8000ab2:	4b1c      	ldr	r3, [pc, #112]	@ (8000b24 <fsm_automatic+0x2a8>)
 8000ab4:	681b      	ldr	r3, [r3, #0]
 8000ab6:	3b01      	subs	r3, #1
 8000ab8:	4a1a      	ldr	r2, [pc, #104]	@ (8000b24 <fsm_automatic+0x2a8>)
 8000aba:	6013      	str	r3, [r2, #0]
			time24--;
 8000abc:	4b1c      	ldr	r3, [pc, #112]	@ (8000b30 <fsm_automatic+0x2b4>)
 8000abe:	681b      	ldr	r3, [r3, #0]
 8000ac0:	3b01      	subs	r3, #1
 8000ac2:	4a1b      	ldr	r2, [pc, #108]	@ (8000b30 <fsm_automatic+0x2b4>)
 8000ac4:	6013      	str	r3, [r2, #0]
			updateBufer();
 8000ac6:	f7ff fdb5 	bl	8000634 <updateBufer>
			updateTimeForState(status);
 8000aca:	4b11      	ldr	r3, [pc, #68]	@ (8000b10 <fsm_automatic+0x294>)
 8000acc:	681b      	ldr	r3, [r3, #0]
 8000ace:	4618      	mov	r0, r3
 8000ad0:	f7ff fe6a 	bl	80007a8 <updateTimeForState>
			setTimer(3 , 1000);
 8000ad4:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8000ad8:	2003      	movs	r0, #3
 8000ada:	f000 fc5d 	bl	8001398 <setTimer>
		}
		if(isButtonPressed(MODE_BUTTON)==1){
 8000ade:	2000      	movs	r0, #0
 8000ae0:	f7ff fb34 	bl	800014c <isButtonPressed>
 8000ae4:	4603      	mov	r3, r0
 8000ae6:	2b01      	cmp	r3, #1
 8000ae8:	f040 813b 	bne.w	8000d62 <fsm_automatic+0x4e6>
			status = MODIFY_RED;
 8000aec:	4b08      	ldr	r3, [pc, #32]	@ (8000b10 <fsm_automatic+0x294>)
 8000aee:	220b      	movs	r2, #11
 8000af0:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 8000af2:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000af6:	2001      	movs	r0, #1
 8000af8:	f000 fc4e 	bl	8001398 <setTimer>

			turnOffAll7Seg();
 8000afc:	f7ff fea0 	bl	8000840 <turnOffAll7Seg>
			turnoff_red();
 8000b00:	f000 fae8 	bl	80010d4 <turnoff_red>
			turnoff_yellow();
 8000b04:	f000 faf8 	bl	80010f8 <turnoff_yellow>
			turnoff_green();
 8000b08:	f000 fb08 	bl	800111c <turnoff_green>
		}
		break;
 8000b0c:	e129      	b.n	8000d62 <fsm_automatic+0x4e6>
 8000b0e:	bf00      	nop
 8000b10:	200000a4 	.word	0x200000a4
 8000b14:	2000009c 	.word	0x2000009c
 8000b18:	20000044 	.word	0x20000044
 8000b1c:	2000010c 	.word	0x2000010c
 8000b20:	40010800 	.word	0x40010800
 8000b24:	200000a8 	.word	0x200000a8
 8000b28:	200000b0 	.word	0x200000b0
 8000b2c:	20000048 	.word	0x20000048
 8000b30:	200000ac 	.word	0x200000ac
/////////////////////////////////////////////////
	case GREEN13_RED24:
		updateTimeForState(status);
 8000b34:	4b8e      	ldr	r3, [pc, #568]	@ (8000d70 <fsm_automatic+0x4f4>)
 8000b36:	681b      	ldr	r3, [r3, #0]
 8000b38:	4618      	mov	r0, r3
 8000b3a:	f7ff fe35 	bl	80007a8 <updateTimeForState>
		//set cho lane 13
		HAL_GPIO_WritePin(RED_13_GPIO_Port , RED_13_Pin , GPIO_PIN_SET);
 8000b3e:	2201      	movs	r2, #1
 8000b40:	2120      	movs	r1, #32
 8000b42:	488c      	ldr	r0, [pc, #560]	@ (8000d74 <fsm_automatic+0x4f8>)
 8000b44:	f001 f859 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_13_GPIO_Port , YELLOW_13_Pin , GPIO_PIN_SET);
 8000b48:	2201      	movs	r2, #1
 8000b4a:	2140      	movs	r1, #64	@ 0x40
 8000b4c:	4889      	ldr	r0, [pc, #548]	@ (8000d74 <fsm_automatic+0x4f8>)
 8000b4e:	f001 f854 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_13_GPIO_Port , GREEN_13_Pin , GPIO_PIN_RESET);
 8000b52:	2200      	movs	r2, #0
 8000b54:	2180      	movs	r1, #128	@ 0x80
 8000b56:	4887      	ldr	r0, [pc, #540]	@ (8000d74 <fsm_automatic+0x4f8>)
 8000b58:	f001 f84f 	bl	8001bfa <HAL_GPIO_WritePin>
		//set cho lane 24
		HAL_GPIO_WritePin(RED_24_GPIO_Port , RED_24_Pin , GPIO_PIN_RESET);
 8000b5c:	2200      	movs	r2, #0
 8000b5e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000b62:	4884      	ldr	r0, [pc, #528]	@ (8000d74 <fsm_automatic+0x4f8>)
 8000b64:	f001 f849 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_24_GPIO_Port , YELLOW_24_Pin , GPIO_PIN_SET);
 8000b68:	2201      	movs	r2, #1
 8000b6a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000b6e:	4881      	ldr	r0, [pc, #516]	@ (8000d74 <fsm_automatic+0x4f8>)
 8000b70:	f001 f843 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_24_GPIO_Port , GREEN_24_Pin , GPIO_PIN_SET);
 8000b74:	2201      	movs	r2, #1
 8000b76:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000b7a:	487e      	ldr	r0, [pc, #504]	@ (8000d74 <fsm_automatic+0x4f8>)
 8000b7c:	f001 f83d 	bl	8001bfa <HAL_GPIO_WritePin>

		if(isTimerFlagSet(1) == 1){
 8000b80:	2001      	movs	r0, #1
 8000b82:	f000 fc2f 	bl	80013e4 <isTimerFlagSet>
 8000b86:	4603      	mov	r3, r0
 8000b88:	2b01      	cmp	r3, #1
 8000b8a:	d110      	bne.n	8000bae <fsm_automatic+0x332>
			time24remain = time24;
 8000b8c:	4b7a      	ldr	r3, [pc, #488]	@ (8000d78 <fsm_automatic+0x4fc>)
 8000b8e:	681b      	ldr	r3, [r3, #0]
 8000b90:	4a7a      	ldr	r2, [pc, #488]	@ (8000d7c <fsm_automatic+0x500>)
 8000b92:	6013      	str	r3, [r2, #0]
			status = YELLOW13_RED24;
 8000b94:	4b76      	ldr	r3, [pc, #472]	@ (8000d70 <fsm_automatic+0x4f4>)
 8000b96:	2205      	movs	r2, #5
 8000b98:	601a      	str	r2, [r3, #0]
			setTimer(1 , timeYellow*1000);
 8000b9a:	4b79      	ldr	r3, [pc, #484]	@ (8000d80 <fsm_automatic+0x504>)
 8000b9c:	681b      	ldr	r3, [r3, #0]
 8000b9e:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000ba2:	fb02 f303 	mul.w	r3, r2, r3
 8000ba6:	4619      	mov	r1, r3
 8000ba8:	2001      	movs	r0, #1
 8000baa:	f000 fbf5 	bl	8001398 <setTimer>
		}
		if(isTimerFlagSet(2)){
 8000bae:	2002      	movs	r0, #2
 8000bb0:	f000 fc18 	bl	80013e4 <isTimerFlagSet>
 8000bb4:	4603      	mov	r3, r0
 8000bb6:	2b00      	cmp	r3, #0
 8000bb8:	d014      	beq.n	8000be4 <fsm_automatic+0x368>
			update7SegLed(led_index);
 8000bba:	4b72      	ldr	r3, [pc, #456]	@ (8000d84 <fsm_automatic+0x508>)
 8000bbc:	681b      	ldr	r3, [r3, #0]
 8000bbe:	4618      	mov	r0, r3
 8000bc0:	f7ff fd90 	bl	80006e4 <update7SegLed>
			setTimer(2 , 250);
 8000bc4:	21fa      	movs	r1, #250	@ 0xfa
 8000bc6:	2002      	movs	r0, #2
 8000bc8:	f000 fbe6 	bl	8001398 <setTimer>
			led_index++;
 8000bcc:	4b6d      	ldr	r3, [pc, #436]	@ (8000d84 <fsm_automatic+0x508>)
 8000bce:	681b      	ldr	r3, [r3, #0]
 8000bd0:	3301      	adds	r3, #1
 8000bd2:	4a6c      	ldr	r2, [pc, #432]	@ (8000d84 <fsm_automatic+0x508>)
 8000bd4:	6013      	str	r3, [r2, #0]
			if(led_index >= 4){
 8000bd6:	4b6b      	ldr	r3, [pc, #428]	@ (8000d84 <fsm_automatic+0x508>)
 8000bd8:	681b      	ldr	r3, [r3, #0]
 8000bda:	2b03      	cmp	r3, #3
 8000bdc:	dd02      	ble.n	8000be4 <fsm_automatic+0x368>
				led_index = 0;
 8000bde:	4b69      	ldr	r3, [pc, #420]	@ (8000d84 <fsm_automatic+0x508>)
 8000be0:	2200      	movs	r2, #0
 8000be2:	601a      	str	r2, [r3, #0]
			}
		}
		if(isTimerFlagSet(3)){
 8000be4:	2003      	movs	r0, #3
 8000be6:	f000 fbfd 	bl	80013e4 <isTimerFlagSet>
 8000bea:	4603      	mov	r3, r0
 8000bec:	2b00      	cmp	r3, #0
 8000bee:	d015      	beq.n	8000c1c <fsm_automatic+0x3a0>
			time13--;
 8000bf0:	4b65      	ldr	r3, [pc, #404]	@ (8000d88 <fsm_automatic+0x50c>)
 8000bf2:	681b      	ldr	r3, [r3, #0]
 8000bf4:	3b01      	subs	r3, #1
 8000bf6:	4a64      	ldr	r2, [pc, #400]	@ (8000d88 <fsm_automatic+0x50c>)
 8000bf8:	6013      	str	r3, [r2, #0]
			time24--;
 8000bfa:	4b5f      	ldr	r3, [pc, #380]	@ (8000d78 <fsm_automatic+0x4fc>)
 8000bfc:	681b      	ldr	r3, [r3, #0]
 8000bfe:	3b01      	subs	r3, #1
 8000c00:	4a5d      	ldr	r2, [pc, #372]	@ (8000d78 <fsm_automatic+0x4fc>)
 8000c02:	6013      	str	r3, [r2, #0]
			updateBufer();
 8000c04:	f7ff fd16 	bl	8000634 <updateBufer>
			updateTimeForState(status);
 8000c08:	4b59      	ldr	r3, [pc, #356]	@ (8000d70 <fsm_automatic+0x4f4>)
 8000c0a:	681b      	ldr	r3, [r3, #0]
 8000c0c:	4618      	mov	r0, r3
 8000c0e:	f7ff fdcb 	bl	80007a8 <updateTimeForState>
			setTimer(3 , 1000);
 8000c12:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8000c16:	2003      	movs	r0, #3
 8000c18:	f000 fbbe 	bl	8001398 <setTimer>
		}
		if(isButtonPressed(MODE_BUTTON)==1){
 8000c1c:	2000      	movs	r0, #0
 8000c1e:	f7ff fa95 	bl	800014c <isButtonPressed>
 8000c22:	4603      	mov	r3, r0
 8000c24:	2b01      	cmp	r3, #1
 8000c26:	f040 809e 	bne.w	8000d66 <fsm_automatic+0x4ea>
			status = MODIFY_RED;
 8000c2a:	4b51      	ldr	r3, [pc, #324]	@ (8000d70 <fsm_automatic+0x4f4>)
 8000c2c:	220b      	movs	r2, #11
 8000c2e:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 8000c30:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000c34:	2001      	movs	r0, #1
 8000c36:	f000 fbaf 	bl	8001398 <setTimer>
			turnOffAll7Seg();
 8000c3a:	f7ff fe01 	bl	8000840 <turnOffAll7Seg>
			turnoff_red();
 8000c3e:	f000 fa49 	bl	80010d4 <turnoff_red>
			turnoff_yellow();
 8000c42:	f000 fa59 	bl	80010f8 <turnoff_yellow>
			turnoff_green();
 8000c46:	f000 fa69 	bl	800111c <turnoff_green>
		}
		break;
 8000c4a:	e08c      	b.n	8000d66 <fsm_automatic+0x4ea>
///////////////////////////////////////////////////
	case YELLOW13_RED24:
		updateTimeForState(status);
 8000c4c:	4b48      	ldr	r3, [pc, #288]	@ (8000d70 <fsm_automatic+0x4f4>)
 8000c4e:	681b      	ldr	r3, [r3, #0]
 8000c50:	4618      	mov	r0, r3
 8000c52:	f7ff fda9 	bl	80007a8 <updateTimeForState>
		//set cho lane 13
		HAL_GPIO_WritePin(RED_13_GPIO_Port , RED_13_Pin , GPIO_PIN_SET);
 8000c56:	2201      	movs	r2, #1
 8000c58:	2120      	movs	r1, #32
 8000c5a:	4846      	ldr	r0, [pc, #280]	@ (8000d74 <fsm_automatic+0x4f8>)
 8000c5c:	f000 ffcd 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_13_GPIO_Port , YELLOW_13_Pin , GPIO_PIN_RESET);
 8000c60:	2200      	movs	r2, #0
 8000c62:	2140      	movs	r1, #64	@ 0x40
 8000c64:	4843      	ldr	r0, [pc, #268]	@ (8000d74 <fsm_automatic+0x4f8>)
 8000c66:	f000 ffc8 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_13_GPIO_Port , GREEN_13_Pin , GPIO_PIN_SET);
 8000c6a:	2201      	movs	r2, #1
 8000c6c:	2180      	movs	r1, #128	@ 0x80
 8000c6e:	4841      	ldr	r0, [pc, #260]	@ (8000d74 <fsm_automatic+0x4f8>)
 8000c70:	f000 ffc3 	bl	8001bfa <HAL_GPIO_WritePin>
		//set cho lane 24
		HAL_GPIO_WritePin(RED_24_GPIO_Port , RED_24_Pin , GPIO_PIN_RESET);
 8000c74:	2200      	movs	r2, #0
 8000c76:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000c7a:	483e      	ldr	r0, [pc, #248]	@ (8000d74 <fsm_automatic+0x4f8>)
 8000c7c:	f000 ffbd 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_24_GPIO_Port , YELLOW_24_Pin , GPIO_PIN_SET);
 8000c80:	2201      	movs	r2, #1
 8000c82:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000c86:	483b      	ldr	r0, [pc, #236]	@ (8000d74 <fsm_automatic+0x4f8>)
 8000c88:	f000 ffb7 	bl	8001bfa <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_24_GPIO_Port , GREEN_24_Pin , GPIO_PIN_SET);
 8000c8c:	2201      	movs	r2, #1
 8000c8e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000c92:	4838      	ldr	r0, [pc, #224]	@ (8000d74 <fsm_automatic+0x4f8>)
 8000c94:	f000 ffb1 	bl	8001bfa <HAL_GPIO_WritePin>

		if(isTimerFlagSet(1) == 1){
 8000c98:	2001      	movs	r0, #1
 8000c9a:	f000 fba3 	bl	80013e4 <isTimerFlagSet>
 8000c9e:	4603      	mov	r3, r0
 8000ca0:	2b01      	cmp	r3, #1
 8000ca2:	d10c      	bne.n	8000cbe <fsm_automatic+0x442>
			status = RED13_GREEN24;
 8000ca4:	4b32      	ldr	r3, [pc, #200]	@ (8000d70 <fsm_automatic+0x4f4>)
 8000ca6:	2202      	movs	r2, #2
 8000ca8:	601a      	str	r2, [r3, #0]
			setTimer(1 , timeGreen*1000);
 8000caa:	4b38      	ldr	r3, [pc, #224]	@ (8000d8c <fsm_automatic+0x510>)
 8000cac:	681b      	ldr	r3, [r3, #0]
 8000cae:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000cb2:	fb02 f303 	mul.w	r3, r2, r3
 8000cb6:	4619      	mov	r1, r3
 8000cb8:	2001      	movs	r0, #1
 8000cba:	f000 fb6d 	bl	8001398 <setTimer>
		}
		if(isTimerFlagSet(2)){
 8000cbe:	2002      	movs	r0, #2
 8000cc0:	f000 fb90 	bl	80013e4 <isTimerFlagSet>
 8000cc4:	4603      	mov	r3, r0
 8000cc6:	2b00      	cmp	r3, #0
 8000cc8:	d014      	beq.n	8000cf4 <fsm_automatic+0x478>
			update7SegLed(led_index);
 8000cca:	4b2e      	ldr	r3, [pc, #184]	@ (8000d84 <fsm_automatic+0x508>)
 8000ccc:	681b      	ldr	r3, [r3, #0]
 8000cce:	4618      	mov	r0, r3
 8000cd0:	f7ff fd08 	bl	80006e4 <update7SegLed>
			setTimer(2 , 250);
 8000cd4:	21fa      	movs	r1, #250	@ 0xfa
 8000cd6:	2002      	movs	r0, #2
 8000cd8:	f000 fb5e 	bl	8001398 <setTimer>
			led_index++;
 8000cdc:	4b29      	ldr	r3, [pc, #164]	@ (8000d84 <fsm_automatic+0x508>)
 8000cde:	681b      	ldr	r3, [r3, #0]
 8000ce0:	3301      	adds	r3, #1
 8000ce2:	4a28      	ldr	r2, [pc, #160]	@ (8000d84 <fsm_automatic+0x508>)
 8000ce4:	6013      	str	r3, [r2, #0]
			if(led_index >= 4){
 8000ce6:	4b27      	ldr	r3, [pc, #156]	@ (8000d84 <fsm_automatic+0x508>)
 8000ce8:	681b      	ldr	r3, [r3, #0]
 8000cea:	2b03      	cmp	r3, #3
 8000cec:	dd02      	ble.n	8000cf4 <fsm_automatic+0x478>
				led_index = 0;
 8000cee:	4b25      	ldr	r3, [pc, #148]	@ (8000d84 <fsm_automatic+0x508>)
 8000cf0:	2200      	movs	r2, #0
 8000cf2:	601a      	str	r2, [r3, #0]
			}
		}
		if(isTimerFlagSet(3)){
 8000cf4:	2003      	movs	r0, #3
 8000cf6:	f000 fb75 	bl	80013e4 <isTimerFlagSet>
 8000cfa:	4603      	mov	r3, r0
 8000cfc:	2b00      	cmp	r3, #0
 8000cfe:	d015      	beq.n	8000d2c <fsm_automatic+0x4b0>
			time13--;
 8000d00:	4b21      	ldr	r3, [pc, #132]	@ (8000d88 <fsm_automatic+0x50c>)
 8000d02:	681b      	ldr	r3, [r3, #0]
 8000d04:	3b01      	subs	r3, #1
 8000d06:	4a20      	ldr	r2, [pc, #128]	@ (8000d88 <fsm_automatic+0x50c>)
 8000d08:	6013      	str	r3, [r2, #0]
			time24--;
 8000d0a:	4b1b      	ldr	r3, [pc, #108]	@ (8000d78 <fsm_automatic+0x4fc>)
 8000d0c:	681b      	ldr	r3, [r3, #0]
 8000d0e:	3b01      	subs	r3, #1
 8000d10:	4a19      	ldr	r2, [pc, #100]	@ (8000d78 <fsm_automatic+0x4fc>)
 8000d12:	6013      	str	r3, [r2, #0]
			updateBufer();
 8000d14:	f7ff fc8e 	bl	8000634 <updateBufer>
			updateTimeForState(status);
 8000d18:	4b15      	ldr	r3, [pc, #84]	@ (8000d70 <fsm_automatic+0x4f4>)
 8000d1a:	681b      	ldr	r3, [r3, #0]
 8000d1c:	4618      	mov	r0, r3
 8000d1e:	f7ff fd43 	bl	80007a8 <updateTimeForState>
			setTimer(3 , 1000);
 8000d22:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8000d26:	2003      	movs	r0, #3
 8000d28:	f000 fb36 	bl	8001398 <setTimer>
		}
		if(isButtonPressed(MODE_BUTTON)==1){
 8000d2c:	2000      	movs	r0, #0
 8000d2e:	f7ff fa0d 	bl	800014c <isButtonPressed>
 8000d32:	4603      	mov	r3, r0
 8000d34:	2b01      	cmp	r3, #1
 8000d36:	d118      	bne.n	8000d6a <fsm_automatic+0x4ee>
			status = MODIFY_RED;
 8000d38:	4b0d      	ldr	r3, [pc, #52]	@ (8000d70 <fsm_automatic+0x4f4>)
 8000d3a:	220b      	movs	r2, #11
 8000d3c:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 8000d3e:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000d42:	2001      	movs	r0, #1
 8000d44:	f000 fb28 	bl	8001398 <setTimer>
			turnOffAll7Seg();
 8000d48:	f7ff fd7a 	bl	8000840 <turnOffAll7Seg>
			turnoff_red();
 8000d4c:	f000 f9c2 	bl	80010d4 <turnoff_red>
			turnoff_yellow();
 8000d50:	f000 f9d2 	bl	80010f8 <turnoff_yellow>
			turnoff_green();
 8000d54:	f000 f9e2 	bl	800111c <turnoff_green>
		}
		break;
 8000d58:	e007      	b.n	8000d6a <fsm_automatic+0x4ee>
	default:
		break;
 8000d5a:	bf00      	nop
 8000d5c:	e006      	b.n	8000d6c <fsm_automatic+0x4f0>
		break;
 8000d5e:	bf00      	nop
 8000d60:	e004      	b.n	8000d6c <fsm_automatic+0x4f0>
		break;
 8000d62:	bf00      	nop
 8000d64:	e002      	b.n	8000d6c <fsm_automatic+0x4f0>
		break;
 8000d66:	bf00      	nop
 8000d68:	e000      	b.n	8000d6c <fsm_automatic+0x4f0>
		break;
 8000d6a:	bf00      	nop
	}
}
 8000d6c:	bf00      	nop
 8000d6e:	bd80      	pop	{r7, pc}
 8000d70:	200000a4 	.word	0x200000a4
 8000d74:	40010800 	.word	0x40010800
 8000d78:	200000ac 	.word	0x200000ac
 8000d7c:	200000b4 	.word	0x200000b4
 8000d80:	20000048 	.word	0x20000048
 8000d84:	2000009c 	.word	0x2000009c
 8000d88:	200000a8 	.word	0x200000a8
 8000d8c:	20000044 	.word	0x20000044

08000d90 <fsm_manual>:
#include "fsm_manual.h"
#include "fsm_automatic.h"

int index = 0;
int temp_time = 1;
void fsm_manual(){
 8000d90:	b580      	push	{r7, lr}
 8000d92:	af00      	add	r7, sp, #0
	switch(status){
 8000d94:	4b80      	ldr	r3, [pc, #512]	@ (8000f98 <fsm_manual+0x208>)
 8000d96:	681b      	ldr	r3, [r3, #0]
 8000d98:	2b0d      	cmp	r3, #13
 8000d9a:	f000 810d 	beq.w	8000fb8 <fsm_manual+0x228>
 8000d9e:	2b0d      	cmp	r3, #13
 8000da0:	f300 817e 	bgt.w	80010a0 <fsm_manual+0x310>
 8000da4:	2b0b      	cmp	r3, #11
 8000da6:	d002      	beq.n	8000dae <fsm_manual+0x1e>
 8000da8:	2b0c      	cmp	r3, #12
 8000daa:	d07a      	beq.n	8000ea2 <fsm_manual+0x112>
			turnoff_green();
			status = INIT;
		}
		break;
	default:
		break;
 8000dac:	e178      	b.n	80010a0 <fsm_manual+0x310>
		time13 = temp_time;
 8000dae:	4b7b      	ldr	r3, [pc, #492]	@ (8000f9c <fsm_manual+0x20c>)
 8000db0:	681b      	ldr	r3, [r3, #0]
 8000db2:	4a7b      	ldr	r2, [pc, #492]	@ (8000fa0 <fsm_manual+0x210>)
 8000db4:	6013      	str	r3, [r2, #0]
		time24 = 2;
 8000db6:	4b7b      	ldr	r3, [pc, #492]	@ (8000fa4 <fsm_manual+0x214>)
 8000db8:	2202      	movs	r2, #2
 8000dba:	601a      	str	r2, [r3, #0]
		if(isTimerFlagSet(1)==1){
 8000dbc:	2001      	movs	r0, #1
 8000dbe:	f000 fb11 	bl	80013e4 <isTimerFlagSet>
 8000dc2:	4603      	mov	r3, r0
 8000dc4:	2b01      	cmp	r3, #1
 8000dc6:	d10d      	bne.n	8000de4 <fsm_manual+0x54>
			HAL_GPIO_TogglePin(RED_13_GPIO_Port , RED_13_Pin);
 8000dc8:	2120      	movs	r1, #32
 8000dca:	4877      	ldr	r0, [pc, #476]	@ (8000fa8 <fsm_manual+0x218>)
 8000dcc:	f000 ff2d 	bl	8001c2a <HAL_GPIO_TogglePin>
			HAL_GPIO_TogglePin(RED_24_GPIO_Port , RED_24_Pin);
 8000dd0:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000dd4:	4874      	ldr	r0, [pc, #464]	@ (8000fa8 <fsm_manual+0x218>)
 8000dd6:	f000 ff28 	bl	8001c2a <HAL_GPIO_TogglePin>
			setTimer(1 , 500);
 8000dda:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000dde:	2001      	movs	r0, #1
 8000de0:	f000 fada 	bl	8001398 <setTimer>
		if(isTimerFlagSet(2)){
 8000de4:	2002      	movs	r0, #2
 8000de6:	f000 fafd 	bl	80013e4 <isTimerFlagSet>
 8000dea:	4603      	mov	r3, r0
 8000dec:	2b00      	cmp	r3, #0
 8000dee:	d016      	beq.n	8000e1e <fsm_manual+0x8e>
			setTimer(2 , 250);
 8000df0:	21fa      	movs	r1, #250	@ 0xfa
 8000df2:	2002      	movs	r0, #2
 8000df4:	f000 fad0 	bl	8001398 <setTimer>
			updateBufer();
 8000df8:	f7ff fc1c 	bl	8000634 <updateBufer>
			update7SegLed(index);
 8000dfc:	4b6b      	ldr	r3, [pc, #428]	@ (8000fac <fsm_manual+0x21c>)
 8000dfe:	681b      	ldr	r3, [r3, #0]
 8000e00:	4618      	mov	r0, r3
 8000e02:	f7ff fc6f 	bl	80006e4 <update7SegLed>
			index++;
 8000e06:	4b69      	ldr	r3, [pc, #420]	@ (8000fac <fsm_manual+0x21c>)
 8000e08:	681b      	ldr	r3, [r3, #0]
 8000e0a:	3301      	adds	r3, #1
 8000e0c:	4a67      	ldr	r2, [pc, #412]	@ (8000fac <fsm_manual+0x21c>)
 8000e0e:	6013      	str	r3, [r2, #0]
			if(index >= 4){
 8000e10:	4b66      	ldr	r3, [pc, #408]	@ (8000fac <fsm_manual+0x21c>)
 8000e12:	681b      	ldr	r3, [r3, #0]
 8000e14:	2b03      	cmp	r3, #3
 8000e16:	dd02      	ble.n	8000e1e <fsm_manual+0x8e>
				index = 0;
 8000e18:	4b64      	ldr	r3, [pc, #400]	@ (8000fac <fsm_manual+0x21c>)
 8000e1a:	2200      	movs	r2, #0
 8000e1c:	601a      	str	r2, [r3, #0]
		if(isButtonPressed(MODIFY_BUTTON)){   // nhan tha --> +1
 8000e1e:	2001      	movs	r0, #1
 8000e20:	f7ff f994 	bl	800014c <isButtonPressed>
 8000e24:	4603      	mov	r3, r0
 8000e26:	2b00      	cmp	r3, #0
 8000e28:	d004      	beq.n	8000e34 <fsm_manual+0xa4>
			temp_time++;
 8000e2a:	4b5c      	ldr	r3, [pc, #368]	@ (8000f9c <fsm_manual+0x20c>)
 8000e2c:	681b      	ldr	r3, [r3, #0]
 8000e2e:	3301      	adds	r3, #1
 8000e30:	4a5a      	ldr	r2, [pc, #360]	@ (8000f9c <fsm_manual+0x20c>)
 8000e32:	6013      	str	r3, [r2, #0]
		if(isButtonLongPressed(MODIFY_BUTTON)){ // nhan de --> +5
 8000e34:	2001      	movs	r0, #1
 8000e36:	f7ff f9a3 	bl	8000180 <isButtonLongPressed>
 8000e3a:	4603      	mov	r3, r0
 8000e3c:	2b00      	cmp	r3, #0
 8000e3e:	d004      	beq.n	8000e4a <fsm_manual+0xba>
			temp_time += 5;
 8000e40:	4b56      	ldr	r3, [pc, #344]	@ (8000f9c <fsm_manual+0x20c>)
 8000e42:	681b      	ldr	r3, [r3, #0]
 8000e44:	3305      	adds	r3, #5
 8000e46:	4a55      	ldr	r2, [pc, #340]	@ (8000f9c <fsm_manual+0x20c>)
 8000e48:	6013      	str	r3, [r2, #0]
		if(isButtonPressed(SET_BUTTON)){
 8000e4a:	2002      	movs	r0, #2
 8000e4c:	f7ff f97e 	bl	800014c <isButtonPressed>
 8000e50:	4603      	mov	r3, r0
 8000e52:	2b00      	cmp	r3, #0
 8000e54:	d010      	beq.n	8000e78 <fsm_manual+0xe8>
			turnoff_red();
 8000e56:	f000 f93d 	bl	80010d4 <turnoff_red>
			status = MODIFY_YELLOW;
 8000e5a:	4b4f      	ldr	r3, [pc, #316]	@ (8000f98 <fsm_manual+0x208>)
 8000e5c:	220c      	movs	r2, #12
 8000e5e:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 8000e60:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000e64:	2001      	movs	r0, #1
 8000e66:	f000 fa97 	bl	8001398 <setTimer>
			timeRed = temp_time;
 8000e6a:	4b4c      	ldr	r3, [pc, #304]	@ (8000f9c <fsm_manual+0x20c>)
 8000e6c:	681b      	ldr	r3, [r3, #0]
 8000e6e:	4a50      	ldr	r2, [pc, #320]	@ (8000fb0 <fsm_manual+0x220>)
 8000e70:	6013      	str	r3, [r2, #0]
			temp_time = 1;
 8000e72:	4b4a      	ldr	r3, [pc, #296]	@ (8000f9c <fsm_manual+0x20c>)
 8000e74:	2201      	movs	r2, #1
 8000e76:	601a      	str	r2, [r3, #0]
		if(isButtonPressed(MODE_BUTTON)){
 8000e78:	2000      	movs	r0, #0
 8000e7a:	f7ff f967 	bl	800014c <isButtonPressed>
 8000e7e:	4603      	mov	r3, r0
 8000e80:	2b00      	cmp	r3, #0
 8000e82:	f000 810f 	beq.w	80010a4 <fsm_manual+0x314>
			turnoff_red();
 8000e86:	f000 f925 	bl	80010d4 <turnoff_red>
			status = MODIFY_YELLOW;
 8000e8a:	4b43      	ldr	r3, [pc, #268]	@ (8000f98 <fsm_manual+0x208>)
 8000e8c:	220c      	movs	r2, #12
 8000e8e:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 8000e90:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000e94:	2001      	movs	r0, #1
 8000e96:	f000 fa7f 	bl	8001398 <setTimer>
			temp_time = 1;
 8000e9a:	4b40      	ldr	r3, [pc, #256]	@ (8000f9c <fsm_manual+0x20c>)
 8000e9c:	2201      	movs	r2, #1
 8000e9e:	601a      	str	r2, [r3, #0]
		break;
 8000ea0:	e100      	b.n	80010a4 <fsm_manual+0x314>
		time13 = temp_time;
 8000ea2:	4b3e      	ldr	r3, [pc, #248]	@ (8000f9c <fsm_manual+0x20c>)
 8000ea4:	681b      	ldr	r3, [r3, #0]
 8000ea6:	4a3e      	ldr	r2, [pc, #248]	@ (8000fa0 <fsm_manual+0x210>)
 8000ea8:	6013      	str	r3, [r2, #0]
		time24 = 3;
 8000eaa:	4b3e      	ldr	r3, [pc, #248]	@ (8000fa4 <fsm_manual+0x214>)
 8000eac:	2203      	movs	r2, #3
 8000eae:	601a      	str	r2, [r3, #0]
		if(isTimerFlagSet(1)==1){
 8000eb0:	2001      	movs	r0, #1
 8000eb2:	f000 fa97 	bl	80013e4 <isTimerFlagSet>
 8000eb6:	4603      	mov	r3, r0
 8000eb8:	2b01      	cmp	r3, #1
 8000eba:	d10d      	bne.n	8000ed8 <fsm_manual+0x148>
			HAL_GPIO_TogglePin(YELLOW_13_GPIO_Port , YELLOW_13_Pin);
 8000ebc:	2140      	movs	r1, #64	@ 0x40
 8000ebe:	483a      	ldr	r0, [pc, #232]	@ (8000fa8 <fsm_manual+0x218>)
 8000ec0:	f000 feb3 	bl	8001c2a <HAL_GPIO_TogglePin>
			HAL_GPIO_TogglePin(YELLOW_24_GPIO_Port , YELLOW_24_Pin);
 8000ec4:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000ec8:	4837      	ldr	r0, [pc, #220]	@ (8000fa8 <fsm_manual+0x218>)
 8000eca:	f000 feae 	bl	8001c2a <HAL_GPIO_TogglePin>
			setTimer(1 , 500);
 8000ece:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000ed2:	2001      	movs	r0, #1
 8000ed4:	f000 fa60 	bl	8001398 <setTimer>
		if(isTimerFlagSet(2)){
 8000ed8:	2002      	movs	r0, #2
 8000eda:	f000 fa83 	bl	80013e4 <isTimerFlagSet>
 8000ede:	4603      	mov	r3, r0
 8000ee0:	2b00      	cmp	r3, #0
 8000ee2:	d016      	beq.n	8000f12 <fsm_manual+0x182>
			setTimer(2 , 250);
 8000ee4:	21fa      	movs	r1, #250	@ 0xfa
 8000ee6:	2002      	movs	r0, #2
 8000ee8:	f000 fa56 	bl	8001398 <setTimer>
			updateBufer();
 8000eec:	f7ff fba2 	bl	8000634 <updateBufer>
			update7SegLed(index);
 8000ef0:	4b2e      	ldr	r3, [pc, #184]	@ (8000fac <fsm_manual+0x21c>)
 8000ef2:	681b      	ldr	r3, [r3, #0]
 8000ef4:	4618      	mov	r0, r3
 8000ef6:	f7ff fbf5 	bl	80006e4 <update7SegLed>
			index++;
 8000efa:	4b2c      	ldr	r3, [pc, #176]	@ (8000fac <fsm_manual+0x21c>)
 8000efc:	681b      	ldr	r3, [r3, #0]
 8000efe:	3301      	adds	r3, #1
 8000f00:	4a2a      	ldr	r2, [pc, #168]	@ (8000fac <fsm_manual+0x21c>)
 8000f02:	6013      	str	r3, [r2, #0]
			if(index >= 4){
 8000f04:	4b29      	ldr	r3, [pc, #164]	@ (8000fac <fsm_manual+0x21c>)
 8000f06:	681b      	ldr	r3, [r3, #0]
 8000f08:	2b03      	cmp	r3, #3
 8000f0a:	dd02      	ble.n	8000f12 <fsm_manual+0x182>
				index = 0;
 8000f0c:	4b27      	ldr	r3, [pc, #156]	@ (8000fac <fsm_manual+0x21c>)
 8000f0e:	2200      	movs	r2, #0
 8000f10:	601a      	str	r2, [r3, #0]
		if(isButtonPressed(MODIFY_BUTTON)){   // nhan tha --> +1
 8000f12:	2001      	movs	r0, #1
 8000f14:	f7ff f91a 	bl	800014c <isButtonPressed>
 8000f18:	4603      	mov	r3, r0
 8000f1a:	2b00      	cmp	r3, #0
 8000f1c:	d004      	beq.n	8000f28 <fsm_manual+0x198>
			temp_time++;
 8000f1e:	4b1f      	ldr	r3, [pc, #124]	@ (8000f9c <fsm_manual+0x20c>)
 8000f20:	681b      	ldr	r3, [r3, #0]
 8000f22:	3301      	adds	r3, #1
 8000f24:	4a1d      	ldr	r2, [pc, #116]	@ (8000f9c <fsm_manual+0x20c>)
 8000f26:	6013      	str	r3, [r2, #0]
		if(isButtonLongPressed(MODIFY_BUTTON)){ // nhan de --> +5
 8000f28:	2001      	movs	r0, #1
 8000f2a:	f7ff f929 	bl	8000180 <isButtonLongPressed>
 8000f2e:	4603      	mov	r3, r0
 8000f30:	2b00      	cmp	r3, #0
 8000f32:	d004      	beq.n	8000f3e <fsm_manual+0x1ae>
			temp_time += 5;
 8000f34:	4b19      	ldr	r3, [pc, #100]	@ (8000f9c <fsm_manual+0x20c>)
 8000f36:	681b      	ldr	r3, [r3, #0]
 8000f38:	3305      	adds	r3, #5
 8000f3a:	4a18      	ldr	r2, [pc, #96]	@ (8000f9c <fsm_manual+0x20c>)
 8000f3c:	6013      	str	r3, [r2, #0]
		if(isButtonPressed(SET_BUTTON)){
 8000f3e:	2002      	movs	r0, #2
 8000f40:	f7ff f904 	bl	800014c <isButtonPressed>
 8000f44:	4603      	mov	r3, r0
 8000f46:	2b00      	cmp	r3, #0
 8000f48:	d013      	beq.n	8000f72 <fsm_manual+0x1e2>
			turnoff_yellow();
 8000f4a:	f000 f8d5 	bl	80010f8 <turnoff_yellow>
			status = MODIFY_GREEN;
 8000f4e:	4b12      	ldr	r3, [pc, #72]	@ (8000f98 <fsm_manual+0x208>)
 8000f50:	220d      	movs	r2, #13
 8000f52:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 8000f54:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000f58:	2001      	movs	r0, #1
 8000f5a:	f000 fa1d 	bl	8001398 <setTimer>
			timeYellow = temp_time;
 8000f5e:	4b0f      	ldr	r3, [pc, #60]	@ (8000f9c <fsm_manual+0x20c>)
 8000f60:	681b      	ldr	r3, [r3, #0]
 8000f62:	4a14      	ldr	r2, [pc, #80]	@ (8000fb4 <fsm_manual+0x224>)
 8000f64:	6013      	str	r3, [r2, #0]
			temp_time = 1;
 8000f66:	4b0d      	ldr	r3, [pc, #52]	@ (8000f9c <fsm_manual+0x20c>)
 8000f68:	2201      	movs	r2, #1
 8000f6a:	601a      	str	r2, [r3, #0]
			time13 = 1;
 8000f6c:	4b0c      	ldr	r3, [pc, #48]	@ (8000fa0 <fsm_manual+0x210>)
 8000f6e:	2201      	movs	r2, #1
 8000f70:	601a      	str	r2, [r3, #0]
		if(isButtonPressed(MODE_BUTTON)==1){
 8000f72:	2000      	movs	r0, #0
 8000f74:	f7ff f8ea 	bl	800014c <isButtonPressed>
 8000f78:	4603      	mov	r3, r0
 8000f7a:	2b01      	cmp	r3, #1
 8000f7c:	f040 8094 	bne.w	80010a8 <fsm_manual+0x318>
			turnoff_yellow();
 8000f80:	f000 f8ba 	bl	80010f8 <turnoff_yellow>
			status = MODIFY_GREEN;
 8000f84:	4b04      	ldr	r3, [pc, #16]	@ (8000f98 <fsm_manual+0x208>)
 8000f86:	220d      	movs	r2, #13
 8000f88:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 8000f8a:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000f8e:	2001      	movs	r0, #1
 8000f90:	f000 fa02 	bl	8001398 <setTimer>
		break;
 8000f94:	e088      	b.n	80010a8 <fsm_manual+0x318>
 8000f96:	bf00      	nop
 8000f98:	200000a4 	.word	0x200000a4
 8000f9c:	2000003c 	.word	0x2000003c
 8000fa0:	200000a8 	.word	0x200000a8
 8000fa4:	200000ac 	.word	0x200000ac
 8000fa8:	40010800 	.word	0x40010800
 8000fac:	200000a0 	.word	0x200000a0
 8000fb0:	20000040 	.word	0x20000040
 8000fb4:	20000048 	.word	0x20000048
		time13 = temp_time;
 8000fb8:	4b3e      	ldr	r3, [pc, #248]	@ (80010b4 <fsm_manual+0x324>)
 8000fba:	681b      	ldr	r3, [r3, #0]
 8000fbc:	4a3e      	ldr	r2, [pc, #248]	@ (80010b8 <fsm_manual+0x328>)
 8000fbe:	6013      	str	r3, [r2, #0]
		time24 = 4;
 8000fc0:	4b3e      	ldr	r3, [pc, #248]	@ (80010bc <fsm_manual+0x32c>)
 8000fc2:	2204      	movs	r2, #4
 8000fc4:	601a      	str	r2, [r3, #0]
		if(isTimerFlagSet(1)==1){
 8000fc6:	2001      	movs	r0, #1
 8000fc8:	f000 fa0c 	bl	80013e4 <isTimerFlagSet>
 8000fcc:	4603      	mov	r3, r0
 8000fce:	2b01      	cmp	r3, #1
 8000fd0:	d10d      	bne.n	8000fee <fsm_manual+0x25e>
			HAL_GPIO_TogglePin(GREEN_13_GPIO_Port , GREEN_13_Pin);
 8000fd2:	2180      	movs	r1, #128	@ 0x80
 8000fd4:	483a      	ldr	r0, [pc, #232]	@ (80010c0 <fsm_manual+0x330>)
 8000fd6:	f000 fe28 	bl	8001c2a <HAL_GPIO_TogglePin>
			HAL_GPIO_TogglePin(GREEN_24_GPIO_Port , GREEN_24_Pin);
 8000fda:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000fde:	4838      	ldr	r0, [pc, #224]	@ (80010c0 <fsm_manual+0x330>)
 8000fe0:	f000 fe23 	bl	8001c2a <HAL_GPIO_TogglePin>
			setTimer(1 , 500);
 8000fe4:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000fe8:	2001      	movs	r0, #1
 8000fea:	f000 f9d5 	bl	8001398 <setTimer>
		if(isTimerFlagSet(2)){
 8000fee:	2002      	movs	r0, #2
 8000ff0:	f000 f9f8 	bl	80013e4 <isTimerFlagSet>
 8000ff4:	4603      	mov	r3, r0
 8000ff6:	2b00      	cmp	r3, #0
 8000ff8:	d016      	beq.n	8001028 <fsm_manual+0x298>
			setTimer(2 , 250);
 8000ffa:	21fa      	movs	r1, #250	@ 0xfa
 8000ffc:	2002      	movs	r0, #2
 8000ffe:	f000 f9cb 	bl	8001398 <setTimer>
			updateBufer();
 8001002:	f7ff fb17 	bl	8000634 <updateBufer>
			update7SegLed(index);
 8001006:	4b2f      	ldr	r3, [pc, #188]	@ (80010c4 <fsm_manual+0x334>)
 8001008:	681b      	ldr	r3, [r3, #0]
 800100a:	4618      	mov	r0, r3
 800100c:	f7ff fb6a 	bl	80006e4 <update7SegLed>
			index++;
 8001010:	4b2c      	ldr	r3, [pc, #176]	@ (80010c4 <fsm_manual+0x334>)
 8001012:	681b      	ldr	r3, [r3, #0]
 8001014:	3301      	adds	r3, #1
 8001016:	4a2b      	ldr	r2, [pc, #172]	@ (80010c4 <fsm_manual+0x334>)
 8001018:	6013      	str	r3, [r2, #0]
			if(index >= 4){
 800101a:	4b2a      	ldr	r3, [pc, #168]	@ (80010c4 <fsm_manual+0x334>)
 800101c:	681b      	ldr	r3, [r3, #0]
 800101e:	2b03      	cmp	r3, #3
 8001020:	dd02      	ble.n	8001028 <fsm_manual+0x298>
				index = 0;
 8001022:	4b28      	ldr	r3, [pc, #160]	@ (80010c4 <fsm_manual+0x334>)
 8001024:	2200      	movs	r2, #0
 8001026:	601a      	str	r2, [r3, #0]
		if(isButtonPressed(MODIFY_BUTTON)){   // nhan tha --> +1
 8001028:	2001      	movs	r0, #1
 800102a:	f7ff f88f 	bl	800014c <isButtonPressed>
 800102e:	4603      	mov	r3, r0
 8001030:	2b00      	cmp	r3, #0
 8001032:	d004      	beq.n	800103e <fsm_manual+0x2ae>
			temp_time++;
 8001034:	4b1f      	ldr	r3, [pc, #124]	@ (80010b4 <fsm_manual+0x324>)
 8001036:	681b      	ldr	r3, [r3, #0]
 8001038:	3301      	adds	r3, #1
 800103a:	4a1e      	ldr	r2, [pc, #120]	@ (80010b4 <fsm_manual+0x324>)
 800103c:	6013      	str	r3, [r2, #0]
		if(isButtonLongPressed(MODIFY_BUTTON)){ // nhan de --> +5
 800103e:	2001      	movs	r0, #1
 8001040:	f7ff f89e 	bl	8000180 <isButtonLongPressed>
 8001044:	4603      	mov	r3, r0
 8001046:	2b00      	cmp	r3, #0
 8001048:	d004      	beq.n	8001054 <fsm_manual+0x2c4>
			temp_time += 5;
 800104a:	4b1a      	ldr	r3, [pc, #104]	@ (80010b4 <fsm_manual+0x324>)
 800104c:	681b      	ldr	r3, [r3, #0]
 800104e:	3305      	adds	r3, #5
 8001050:	4a18      	ldr	r2, [pc, #96]	@ (80010b4 <fsm_manual+0x324>)
 8001052:	6013      	str	r3, [r2, #0]
		if(isButtonPressed(SET_BUTTON)){
 8001054:	2002      	movs	r0, #2
 8001056:	f7ff f879 	bl	800014c <isButtonPressed>
 800105a:	4603      	mov	r3, r0
 800105c:	2b00      	cmp	r3, #0
 800105e:	d013      	beq.n	8001088 <fsm_manual+0x2f8>
			turnoff_green();
 8001060:	f000 f85c 	bl	800111c <turnoff_green>
			status = INIT;
 8001064:	4b18      	ldr	r3, [pc, #96]	@ (80010c8 <fsm_manual+0x338>)
 8001066:	2201      	movs	r2, #1
 8001068:	601a      	str	r2, [r3, #0]
			timeGreen = temp_time;
 800106a:	4b12      	ldr	r3, [pc, #72]	@ (80010b4 <fsm_manual+0x324>)
 800106c:	681b      	ldr	r3, [r3, #0]
 800106e:	4a17      	ldr	r2, [pc, #92]	@ (80010cc <fsm_manual+0x33c>)
 8001070:	6013      	str	r3, [r2, #0]
			temp_time = 1;
 8001072:	4b10      	ldr	r3, [pc, #64]	@ (80010b4 <fsm_manual+0x324>)
 8001074:	2201      	movs	r2, #1
 8001076:	601a      	str	r2, [r3, #0]
			time13 = timeRed;
 8001078:	4b15      	ldr	r3, [pc, #84]	@ (80010d0 <fsm_manual+0x340>)
 800107a:	681b      	ldr	r3, [r3, #0]
 800107c:	4a0e      	ldr	r2, [pc, #56]	@ (80010b8 <fsm_manual+0x328>)
 800107e:	6013      	str	r3, [r2, #0]
			time24 = timeGreen;
 8001080:	4b12      	ldr	r3, [pc, #72]	@ (80010cc <fsm_manual+0x33c>)
 8001082:	681b      	ldr	r3, [r3, #0]
 8001084:	4a0d      	ldr	r2, [pc, #52]	@ (80010bc <fsm_manual+0x32c>)
 8001086:	6013      	str	r3, [r2, #0]
		if(isButtonPressed(MODE_BUTTON)==1){
 8001088:	2000      	movs	r0, #0
 800108a:	f7ff f85f 	bl	800014c <isButtonPressed>
 800108e:	4603      	mov	r3, r0
 8001090:	2b01      	cmp	r3, #1
 8001092:	d10b      	bne.n	80010ac <fsm_manual+0x31c>
			turnoff_green();
 8001094:	f000 f842 	bl	800111c <turnoff_green>
			status = INIT;
 8001098:	4b0b      	ldr	r3, [pc, #44]	@ (80010c8 <fsm_manual+0x338>)
 800109a:	2201      	movs	r2, #1
 800109c:	601a      	str	r2, [r3, #0]
		break;
 800109e:	e005      	b.n	80010ac <fsm_manual+0x31c>
		break;
 80010a0:	bf00      	nop
 80010a2:	e004      	b.n	80010ae <fsm_manual+0x31e>
		break;
 80010a4:	bf00      	nop
 80010a6:	e002      	b.n	80010ae <fsm_manual+0x31e>
		break;
 80010a8:	bf00      	nop
 80010aa:	e000      	b.n	80010ae <fsm_manual+0x31e>
		break;
 80010ac:	bf00      	nop
	}
}
 80010ae:	bf00      	nop
 80010b0:	bd80      	pop	{r7, pc}
 80010b2:	bf00      	nop
 80010b4:	2000003c 	.word	0x2000003c
 80010b8:	200000a8 	.word	0x200000a8
 80010bc:	200000ac 	.word	0x200000ac
 80010c0:	40010800 	.word	0x40010800
 80010c4:	200000a0 	.word	0x200000a0
 80010c8:	200000a4 	.word	0x200000a4
 80010cc:	20000044 	.word	0x20000044
 80010d0:	20000040 	.word	0x20000040

080010d4 <turnoff_red>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void turnoff_red(){
 80010d4:	b580      	push	{r7, lr}
 80010d6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RED_13_GPIO_Port , RED_13_Pin , GPIO_PIN_SET);
 80010d8:	2201      	movs	r2, #1
 80010da:	2120      	movs	r1, #32
 80010dc:	4805      	ldr	r0, [pc, #20]	@ (80010f4 <turnoff_red+0x20>)
 80010de:	f000 fd8c 	bl	8001bfa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(RED_24_GPIO_Port , RED_24_Pin , GPIO_PIN_SET);
 80010e2:	2201      	movs	r2, #1
 80010e4:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80010e8:	4802      	ldr	r0, [pc, #8]	@ (80010f4 <turnoff_red+0x20>)
 80010ea:	f000 fd86 	bl	8001bfa <HAL_GPIO_WritePin>
}
 80010ee:	bf00      	nop
 80010f0:	bd80      	pop	{r7, pc}
 80010f2:	bf00      	nop
 80010f4:	40010800 	.word	0x40010800

080010f8 <turnoff_yellow>:
void turnoff_yellow(){
 80010f8:	b580      	push	{r7, lr}
 80010fa:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(YELLOW_13_GPIO_Port , YELLOW_13_Pin , GPIO_PIN_SET);
 80010fc:	2201      	movs	r2, #1
 80010fe:	2140      	movs	r1, #64	@ 0x40
 8001100:	4805      	ldr	r0, [pc, #20]	@ (8001118 <turnoff_yellow+0x20>)
 8001102:	f000 fd7a 	bl	8001bfa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(YELLOW_24_GPIO_Port , YELLOW_24_Pin , GPIO_PIN_SET);
 8001106:	2201      	movs	r2, #1
 8001108:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800110c:	4802      	ldr	r0, [pc, #8]	@ (8001118 <turnoff_yellow+0x20>)
 800110e:	f000 fd74 	bl	8001bfa <HAL_GPIO_WritePin>
}
 8001112:	bf00      	nop
 8001114:	bd80      	pop	{r7, pc}
 8001116:	bf00      	nop
 8001118:	40010800 	.word	0x40010800

0800111c <turnoff_green>:
void turnoff_green(){
 800111c:	b580      	push	{r7, lr}
 800111e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GREEN_13_GPIO_Port , GREEN_13_Pin , GPIO_PIN_SET);
 8001120:	2201      	movs	r2, #1
 8001122:	2180      	movs	r1, #128	@ 0x80
 8001124:	4805      	ldr	r0, [pc, #20]	@ (800113c <turnoff_green+0x20>)
 8001126:	f000 fd68 	bl	8001bfa <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GREEN_24_GPIO_Port , GREEN_24_Pin , GPIO_PIN_SET);
 800112a:	2201      	movs	r2, #1
 800112c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001130:	4802      	ldr	r0, [pc, #8]	@ (800113c <turnoff_green+0x20>)
 8001132:	f000 fd62 	bl	8001bfa <HAL_GPIO_WritePin>
}
 8001136:	bf00      	nop
 8001138:	bd80      	pop	{r7, pc}
 800113a:	bf00      	nop
 800113c:	40010800 	.word	0x40010800

08001140 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001140:	b580      	push	{r7, lr}
 8001142:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001144:	f000 fa56 	bl	80015f4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001148:	f000 f82a 	bl	80011a0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800114c:	f000 f8b0 	bl	80012b0 <MX_GPIO_Init>
  MX_TIM2_Init();
 8001150:	f000 f862 	bl	8001218 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8001154:	480f      	ldr	r0, [pc, #60]	@ (8001194 <main+0x54>)
 8001156:	f001 f9af 	bl	80024b8 <HAL_TIM_Base_Start_IT>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

  HAL_GPIO_WritePin(RED_13_GPIO_Port , RED_13_Pin , SET);
 800115a:	2201      	movs	r2, #1
 800115c:	2120      	movs	r1, #32
 800115e:	480e      	ldr	r0, [pc, #56]	@ (8001198 <main+0x58>)
 8001160:	f000 fd4b 	bl	8001bfa <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(YELLOW_13_GPIO_Port , YELLOW_13_Pin , SET);
 8001164:	2201      	movs	r2, #1
 8001166:	2140      	movs	r1, #64	@ 0x40
 8001168:	480b      	ldr	r0, [pc, #44]	@ (8001198 <main+0x58>)
 800116a:	f000 fd46 	bl	8001bfa <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GREEN_13_GPIO_Port , GREEN_13_Pin , SET);
 800116e:	2201      	movs	r2, #1
 8001170:	2180      	movs	r1, #128	@ 0x80
 8001172:	4809      	ldr	r0, [pc, #36]	@ (8001198 <main+0x58>)
 8001174:	f000 fd41 	bl	8001bfa <HAL_GPIO_WritePin>

  status = 1;
 8001178:	4b08      	ldr	r3, [pc, #32]	@ (800119c <main+0x5c>)
 800117a:	2201      	movs	r2, #1
 800117c:	601a      	str	r2, [r3, #0]
  setTimer(1 , 2000);
 800117e:	f44f 61fa 	mov.w	r1, #2000	@ 0x7d0
 8001182:	2001      	movs	r0, #1
 8001184:	f000 f908 	bl	8001398 <setTimer>
  while (1)
  {
	 fsm_automatic();
 8001188:	f7ff fb78 	bl	800087c <fsm_automatic>
	 fsm_manual();
 800118c:	f7ff fe00 	bl	8000d90 <fsm_manual>
  {
 8001190:	bf00      	nop
 8001192:	e7f9      	b.n	8001188 <main+0x48>
 8001194:	200000b8 	.word	0x200000b8
 8001198:	40010800 	.word	0x40010800
 800119c:	200000a4 	.word	0x200000a4

080011a0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80011a0:	b580      	push	{r7, lr}
 80011a2:	b090      	sub	sp, #64	@ 0x40
 80011a4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80011a6:	f107 0318 	add.w	r3, r7, #24
 80011aa:	2228      	movs	r2, #40	@ 0x28
 80011ac:	2100      	movs	r1, #0
 80011ae:	4618      	mov	r0, r3
 80011b0:	f001 fd0e 	bl	8002bd0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80011b4:	1d3b      	adds	r3, r7, #4
 80011b6:	2200      	movs	r2, #0
 80011b8:	601a      	str	r2, [r3, #0]
 80011ba:	605a      	str	r2, [r3, #4]
 80011bc:	609a      	str	r2, [r3, #8]
 80011be:	60da      	str	r2, [r3, #12]
 80011c0:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80011c2:	2302      	movs	r3, #2
 80011c4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80011c6:	2301      	movs	r3, #1
 80011c8:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80011ca:	2310      	movs	r3, #16
 80011cc:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80011ce:	2300      	movs	r3, #0
 80011d0:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011d2:	f107 0318 	add.w	r3, r7, #24
 80011d6:	4618      	mov	r0, r3
 80011d8:	f000 fd40 	bl	8001c5c <HAL_RCC_OscConfig>
 80011dc:	4603      	mov	r3, r0
 80011de:	2b00      	cmp	r3, #0
 80011e0:	d001      	beq.n	80011e6 <SystemClock_Config+0x46>
  {
    Error_Handler();
 80011e2:	f000 f8d3 	bl	800138c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80011e6:	230f      	movs	r3, #15
 80011e8:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80011ea:	2300      	movs	r3, #0
 80011ec:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80011ee:	2300      	movs	r3, #0
 80011f0:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80011f2:	2300      	movs	r3, #0
 80011f4:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80011f6:	2300      	movs	r3, #0
 80011f8:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80011fa:	1d3b      	adds	r3, r7, #4
 80011fc:	2100      	movs	r1, #0
 80011fe:	4618      	mov	r0, r3
 8001200:	f000 ffae 	bl	8002160 <HAL_RCC_ClockConfig>
 8001204:	4603      	mov	r3, r0
 8001206:	2b00      	cmp	r3, #0
 8001208:	d001      	beq.n	800120e <SystemClock_Config+0x6e>
  {
    Error_Handler();
 800120a:	f000 f8bf 	bl	800138c <Error_Handler>
  }
}
 800120e:	bf00      	nop
 8001210:	3740      	adds	r7, #64	@ 0x40
 8001212:	46bd      	mov	sp, r7
 8001214:	bd80      	pop	{r7, pc}
	...

08001218 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001218:	b580      	push	{r7, lr}
 800121a:	b086      	sub	sp, #24
 800121c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800121e:	f107 0308 	add.w	r3, r7, #8
 8001222:	2200      	movs	r2, #0
 8001224:	601a      	str	r2, [r3, #0]
 8001226:	605a      	str	r2, [r3, #4]
 8001228:	609a      	str	r2, [r3, #8]
 800122a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800122c:	463b      	mov	r3, r7
 800122e:	2200      	movs	r2, #0
 8001230:	601a      	str	r2, [r3, #0]
 8001232:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001234:	4b1d      	ldr	r3, [pc, #116]	@ (80012ac <MX_TIM2_Init+0x94>)
 8001236:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800123a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7999;
 800123c:	4b1b      	ldr	r3, [pc, #108]	@ (80012ac <MX_TIM2_Init+0x94>)
 800123e:	f641 723f 	movw	r2, #7999	@ 0x1f3f
 8001242:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001244:	4b19      	ldr	r3, [pc, #100]	@ (80012ac <MX_TIM2_Init+0x94>)
 8001246:	2200      	movs	r2, #0
 8001248:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9;
 800124a:	4b18      	ldr	r3, [pc, #96]	@ (80012ac <MX_TIM2_Init+0x94>)
 800124c:	2209      	movs	r2, #9
 800124e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001250:	4b16      	ldr	r3, [pc, #88]	@ (80012ac <MX_TIM2_Init+0x94>)
 8001252:	2200      	movs	r2, #0
 8001254:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001256:	4b15      	ldr	r3, [pc, #84]	@ (80012ac <MX_TIM2_Init+0x94>)
 8001258:	2200      	movs	r2, #0
 800125a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800125c:	4813      	ldr	r0, [pc, #76]	@ (80012ac <MX_TIM2_Init+0x94>)
 800125e:	f001 f8db 	bl	8002418 <HAL_TIM_Base_Init>
 8001262:	4603      	mov	r3, r0
 8001264:	2b00      	cmp	r3, #0
 8001266:	d001      	beq.n	800126c <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8001268:	f000 f890 	bl	800138c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800126c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001270:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001272:	f107 0308 	add.w	r3, r7, #8
 8001276:	4619      	mov	r1, r3
 8001278:	480c      	ldr	r0, [pc, #48]	@ (80012ac <MX_TIM2_Init+0x94>)
 800127a:	f001 fa59 	bl	8002730 <HAL_TIM_ConfigClockSource>
 800127e:	4603      	mov	r3, r0
 8001280:	2b00      	cmp	r3, #0
 8001282:	d001      	beq.n	8001288 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8001284:	f000 f882 	bl	800138c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001288:	2300      	movs	r3, #0
 800128a:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800128c:	2300      	movs	r3, #0
 800128e:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001290:	463b      	mov	r3, r7
 8001292:	4619      	mov	r1, r3
 8001294:	4805      	ldr	r0, [pc, #20]	@ (80012ac <MX_TIM2_Init+0x94>)
 8001296:	f001 fc31 	bl	8002afc <HAL_TIMEx_MasterConfigSynchronization>
 800129a:	4603      	mov	r3, r0
 800129c:	2b00      	cmp	r3, #0
 800129e:	d001      	beq.n	80012a4 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 80012a0:	f000 f874 	bl	800138c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80012a4:	bf00      	nop
 80012a6:	3718      	adds	r7, #24
 80012a8:	46bd      	mov	sp, r7
 80012aa:	bd80      	pop	{r7, pc}
 80012ac:	200000b8 	.word	0x200000b8

080012b0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80012b0:	b580      	push	{r7, lr}
 80012b2:	b086      	sub	sp, #24
 80012b4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012b6:	f107 0308 	add.w	r3, r7, #8
 80012ba:	2200      	movs	r2, #0
 80012bc:	601a      	str	r2, [r3, #0]
 80012be:	605a      	str	r2, [r3, #4]
 80012c0:	609a      	str	r2, [r3, #8]
 80012c2:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80012c4:	4b28      	ldr	r3, [pc, #160]	@ (8001368 <MX_GPIO_Init+0xb8>)
 80012c6:	699b      	ldr	r3, [r3, #24]
 80012c8:	4a27      	ldr	r2, [pc, #156]	@ (8001368 <MX_GPIO_Init+0xb8>)
 80012ca:	f043 0304 	orr.w	r3, r3, #4
 80012ce:	6193      	str	r3, [r2, #24]
 80012d0:	4b25      	ldr	r3, [pc, #148]	@ (8001368 <MX_GPIO_Init+0xb8>)
 80012d2:	699b      	ldr	r3, [r3, #24]
 80012d4:	f003 0304 	and.w	r3, r3, #4
 80012d8:	607b      	str	r3, [r7, #4]
 80012da:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80012dc:	4b22      	ldr	r3, [pc, #136]	@ (8001368 <MX_GPIO_Init+0xb8>)
 80012de:	699b      	ldr	r3, [r3, #24]
 80012e0:	4a21      	ldr	r2, [pc, #132]	@ (8001368 <MX_GPIO_Init+0xb8>)
 80012e2:	f043 0308 	orr.w	r3, r3, #8
 80012e6:	6193      	str	r3, [r2, #24]
 80012e8:	4b1f      	ldr	r3, [pc, #124]	@ (8001368 <MX_GPIO_Init+0xb8>)
 80012ea:	699b      	ldr	r3, [r3, #24]
 80012ec:	f003 0308 	and.w	r3, r3, #8
 80012f0:	603b      	str	r3, [r7, #0]
 80012f2:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, RED_13_Pin|YELLOW_13_Pin|GREEN_13_Pin|RED_24_Pin
 80012f4:	2200      	movs	r2, #0
 80012f6:	f44f 61fc 	mov.w	r1, #2016	@ 0x7e0
 80012fa:	481c      	ldr	r0, [pc, #112]	@ (800136c <MX_GPIO_Init+0xbc>)
 80012fc:	f000 fc7d 	bl	8001bfa <HAL_GPIO_WritePin>
                          |YELLOW_24_Pin|GREEN_24_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, a_Pin|b_Pin|c_Pin|en4_Pin
 8001300:	2200      	movs	r2, #0
 8001302:	f240 71ff 	movw	r1, #2047	@ 0x7ff
 8001306:	481a      	ldr	r0, [pc, #104]	@ (8001370 <MX_GPIO_Init+0xc0>)
 8001308:	f000 fc77 	bl	8001bfa <HAL_GPIO_WritePin>
                          |d_Pin|e_Pin|f_Pin|g_Pin
                          |en1_Pin|en2_Pin|en3_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : MODE_BUTTON_Pin MODIFY_BUTTON_Pin SET_BUTTON_Pin */
  GPIO_InitStruct.Pin = MODE_BUTTON_Pin|MODIFY_BUTTON_Pin|SET_BUTTON_Pin;
 800130c:	231c      	movs	r3, #28
 800130e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001310:	2300      	movs	r3, #0
 8001312:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001314:	2301      	movs	r3, #1
 8001316:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001318:	f107 0308 	add.w	r3, r7, #8
 800131c:	4619      	mov	r1, r3
 800131e:	4813      	ldr	r0, [pc, #76]	@ (800136c <MX_GPIO_Init+0xbc>)
 8001320:	f000 fad8 	bl	80018d4 <HAL_GPIO_Init>

  /*Configure GPIO pins : RED_13_Pin YELLOW_13_Pin GREEN_13_Pin RED_24_Pin
                           YELLOW_24_Pin GREEN_24_Pin */
  GPIO_InitStruct.Pin = RED_13_Pin|YELLOW_13_Pin|GREEN_13_Pin|RED_24_Pin
 8001324:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 8001328:	60bb      	str	r3, [r7, #8]
                          |YELLOW_24_Pin|GREEN_24_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800132a:	2301      	movs	r3, #1
 800132c:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800132e:	2300      	movs	r3, #0
 8001330:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001332:	2302      	movs	r3, #2
 8001334:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001336:	f107 0308 	add.w	r3, r7, #8
 800133a:	4619      	mov	r1, r3
 800133c:	480b      	ldr	r0, [pc, #44]	@ (800136c <MX_GPIO_Init+0xbc>)
 800133e:	f000 fac9 	bl	80018d4 <HAL_GPIO_Init>

  /*Configure GPIO pins : a_Pin b_Pin c_Pin en4_Pin
                           d_Pin e_Pin f_Pin g_Pin
                           en1_Pin en2_Pin en3_Pin */
  GPIO_InitStruct.Pin = a_Pin|b_Pin|c_Pin|en4_Pin
 8001342:	f240 73ff 	movw	r3, #2047	@ 0x7ff
 8001346:	60bb      	str	r3, [r7, #8]
                          |d_Pin|e_Pin|f_Pin|g_Pin
                          |en1_Pin|en2_Pin|en3_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001348:	2301      	movs	r3, #1
 800134a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800134c:	2300      	movs	r3, #0
 800134e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001350:	2302      	movs	r3, #2
 8001352:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001354:	f107 0308 	add.w	r3, r7, #8
 8001358:	4619      	mov	r1, r3
 800135a:	4805      	ldr	r0, [pc, #20]	@ (8001370 <MX_GPIO_Init+0xc0>)
 800135c:	f000 faba 	bl	80018d4 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001360:	bf00      	nop
 8001362:	3718      	adds	r7, #24
 8001364:	46bd      	mov	sp, r7
 8001366:	bd80      	pop	{r7, pc}
 8001368:	40021000 	.word	0x40021000
 800136c:	40010800 	.word	0x40010800
 8001370:	40010c00 	.word	0x40010c00

08001374 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 8001374:	b580      	push	{r7, lr}
 8001376:	b082      	sub	sp, #8
 8001378:	af00      	add	r7, sp, #0
 800137a:	6078      	str	r0, [r7, #4]
	timerRun();
 800137c:	f000 f852 	bl	8001424 <timerRun>
	getKeyInput();
 8001380:	f7fe ff18 	bl	80001b4 <getKeyInput>
}
 8001384:	bf00      	nop
 8001386:	3708      	adds	r7, #8
 8001388:	46bd      	mov	sp, r7
 800138a:	bd80      	pop	{r7, pc}

0800138c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800138c:	b480      	push	{r7}
 800138e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001390:	b672      	cpsid	i
}
 8001392:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001394:	bf00      	nop
 8001396:	e7fd      	b.n	8001394 <Error_Handler+0x8>

08001398 <setTimer>:

int timer_counter[NUM_OF_TIMERS] = {0};
int timer_flag[NUM_OF_TIMERS] = {0};


void setTimer(int index, int duration) {
 8001398:	b480      	push	{r7}
 800139a:	b083      	sub	sp, #12
 800139c:	af00      	add	r7, sp, #0
 800139e:	6078      	str	r0, [r7, #4]
 80013a0:	6039      	str	r1, [r7, #0]
	if (index >= 0 && index < NUM_OF_TIMERS) {
 80013a2:	687b      	ldr	r3, [r7, #4]
 80013a4:	2b00      	cmp	r3, #0
 80013a6:	db12      	blt.n	80013ce <setTimer+0x36>
 80013a8:	687b      	ldr	r3, [r7, #4]
 80013aa:	2b02      	cmp	r3, #2
 80013ac:	dc0f      	bgt.n	80013ce <setTimer+0x36>
		timer_counter[index] = duration / TIMER_CYCLE;
 80013ae:	683b      	ldr	r3, [r7, #0]
 80013b0:	4a09      	ldr	r2, [pc, #36]	@ (80013d8 <setTimer+0x40>)
 80013b2:	fb82 1203 	smull	r1, r2, r2, r3
 80013b6:	1092      	asrs	r2, r2, #2
 80013b8:	17db      	asrs	r3, r3, #31
 80013ba:	1ad2      	subs	r2, r2, r3
 80013bc:	4907      	ldr	r1, [pc, #28]	@ (80013dc <setTimer+0x44>)
 80013be:	687b      	ldr	r3, [r7, #4]
 80013c0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		timer_flag[index] = 0;
 80013c4:	4a06      	ldr	r2, [pc, #24]	@ (80013e0 <setTimer+0x48>)
 80013c6:	687b      	ldr	r3, [r7, #4]
 80013c8:	2100      	movs	r1, #0
 80013ca:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	}
}
 80013ce:	bf00      	nop
 80013d0:	370c      	adds	r7, #12
 80013d2:	46bd      	mov	sp, r7
 80013d4:	bc80      	pop	{r7}
 80013d6:	4770      	bx	lr
 80013d8:	66666667 	.word	0x66666667
 80013dc:	20000100 	.word	0x20000100
 80013e0:	2000010c 	.word	0x2000010c

080013e4 <isTimerFlagSet>:


int isTimerFlagSet(int index) {
 80013e4:	b480      	push	{r7}
 80013e6:	b083      	sub	sp, #12
 80013e8:	af00      	add	r7, sp, #0
 80013ea:	6078      	str	r0, [r7, #4]
	if (index >= 0 && index < NUM_OF_TIMERS) {
 80013ec:	687b      	ldr	r3, [r7, #4]
 80013ee:	2b00      	cmp	r3, #0
 80013f0:	db0f      	blt.n	8001412 <isTimerFlagSet+0x2e>
 80013f2:	687b      	ldr	r3, [r7, #4]
 80013f4:	2b02      	cmp	r3, #2
 80013f6:	dc0c      	bgt.n	8001412 <isTimerFlagSet+0x2e>
		if (timer_flag[index] == 1) {
 80013f8:	4a09      	ldr	r2, [pc, #36]	@ (8001420 <isTimerFlagSet+0x3c>)
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001400:	2b01      	cmp	r3, #1
 8001402:	d106      	bne.n	8001412 <isTimerFlagSet+0x2e>
			timer_flag[index] = 0;
 8001404:	4a06      	ldr	r2, [pc, #24]	@ (8001420 <isTimerFlagSet+0x3c>)
 8001406:	687b      	ldr	r3, [r7, #4]
 8001408:	2100      	movs	r1, #0
 800140a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			return 1;
 800140e:	2301      	movs	r3, #1
 8001410:	e000      	b.n	8001414 <isTimerFlagSet+0x30>
		}
	}
	return 0;
 8001412:	2300      	movs	r3, #0
}
 8001414:	4618      	mov	r0, r3
 8001416:	370c      	adds	r7, #12
 8001418:	46bd      	mov	sp, r7
 800141a:	bc80      	pop	{r7}
 800141c:	4770      	bx	lr
 800141e:	bf00      	nop
 8001420:	2000010c 	.word	0x2000010c

08001424 <timerRun>:


void timerRun() {
 8001424:	b480      	push	{r7}
 8001426:	b083      	sub	sp, #12
 8001428:	af00      	add	r7, sp, #0
	for (int i = 0; i < NUM_OF_TIMERS; i++) {
 800142a:	2300      	movs	r3, #0
 800142c:	607b      	str	r3, [r7, #4]
 800142e:	e01c      	b.n	800146a <timerRun+0x46>
		if (timer_counter[i] > 0) {
 8001430:	4a12      	ldr	r2, [pc, #72]	@ (800147c <timerRun+0x58>)
 8001432:	687b      	ldr	r3, [r7, #4]
 8001434:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001438:	2b00      	cmp	r3, #0
 800143a:	dd13      	ble.n	8001464 <timerRun+0x40>
			timer_counter[i]--;
 800143c:	4a0f      	ldr	r2, [pc, #60]	@ (800147c <timerRun+0x58>)
 800143e:	687b      	ldr	r3, [r7, #4]
 8001440:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001444:	1e5a      	subs	r2, r3, #1
 8001446:	490d      	ldr	r1, [pc, #52]	@ (800147c <timerRun+0x58>)
 8001448:	687b      	ldr	r3, [r7, #4]
 800144a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			if (timer_counter[i] <= 0) {
 800144e:	4a0b      	ldr	r2, [pc, #44]	@ (800147c <timerRun+0x58>)
 8001450:	687b      	ldr	r3, [r7, #4]
 8001452:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001456:	2b00      	cmp	r3, #0
 8001458:	dc04      	bgt.n	8001464 <timerRun+0x40>
				timer_flag[i] = 1;
 800145a:	4a09      	ldr	r2, [pc, #36]	@ (8001480 <timerRun+0x5c>)
 800145c:	687b      	ldr	r3, [r7, #4]
 800145e:	2101      	movs	r1, #1
 8001460:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for (int i = 0; i < NUM_OF_TIMERS; i++) {
 8001464:	687b      	ldr	r3, [r7, #4]
 8001466:	3301      	adds	r3, #1
 8001468:	607b      	str	r3, [r7, #4]
 800146a:	687b      	ldr	r3, [r7, #4]
 800146c:	2b02      	cmp	r3, #2
 800146e:	dddf      	ble.n	8001430 <timerRun+0xc>
			}
		}
	}
}
 8001470:	bf00      	nop
 8001472:	bf00      	nop
 8001474:	370c      	adds	r7, #12
 8001476:	46bd      	mov	sp, r7
 8001478:	bc80      	pop	{r7}
 800147a:	4770      	bx	lr
 800147c:	20000100 	.word	0x20000100
 8001480:	2000010c 	.word	0x2000010c

08001484 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001484:	b480      	push	{r7}
 8001486:	b085      	sub	sp, #20
 8001488:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 800148a:	4b15      	ldr	r3, [pc, #84]	@ (80014e0 <HAL_MspInit+0x5c>)
 800148c:	699b      	ldr	r3, [r3, #24]
 800148e:	4a14      	ldr	r2, [pc, #80]	@ (80014e0 <HAL_MspInit+0x5c>)
 8001490:	f043 0301 	orr.w	r3, r3, #1
 8001494:	6193      	str	r3, [r2, #24]
 8001496:	4b12      	ldr	r3, [pc, #72]	@ (80014e0 <HAL_MspInit+0x5c>)
 8001498:	699b      	ldr	r3, [r3, #24]
 800149a:	f003 0301 	and.w	r3, r3, #1
 800149e:	60bb      	str	r3, [r7, #8]
 80014a0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 80014a2:	4b0f      	ldr	r3, [pc, #60]	@ (80014e0 <HAL_MspInit+0x5c>)
 80014a4:	69db      	ldr	r3, [r3, #28]
 80014a6:	4a0e      	ldr	r2, [pc, #56]	@ (80014e0 <HAL_MspInit+0x5c>)
 80014a8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80014ac:	61d3      	str	r3, [r2, #28]
 80014ae:	4b0c      	ldr	r3, [pc, #48]	@ (80014e0 <HAL_MspInit+0x5c>)
 80014b0:	69db      	ldr	r3, [r3, #28]
 80014b2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80014b6:	607b      	str	r3, [r7, #4]
 80014b8:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** DISABLE: JTAG-DP Disabled and SW-DP Disabled
  */
  __HAL_AFIO_REMAP_SWJ_DISABLE();
 80014ba:	4b0a      	ldr	r3, [pc, #40]	@ (80014e4 <HAL_MspInit+0x60>)
 80014bc:	685b      	ldr	r3, [r3, #4]
 80014be:	60fb      	str	r3, [r7, #12]
 80014c0:	68fb      	ldr	r3, [r7, #12]
 80014c2:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 80014c6:	60fb      	str	r3, [r7, #12]
 80014c8:	68fb      	ldr	r3, [r7, #12]
 80014ca:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80014ce:	60fb      	str	r3, [r7, #12]
 80014d0:	4a04      	ldr	r2, [pc, #16]	@ (80014e4 <HAL_MspInit+0x60>)
 80014d2:	68fb      	ldr	r3, [r7, #12]
 80014d4:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80014d6:	bf00      	nop
 80014d8:	3714      	adds	r7, #20
 80014da:	46bd      	mov	sp, r7
 80014dc:	bc80      	pop	{r7}
 80014de:	4770      	bx	lr
 80014e0:	40021000 	.word	0x40021000
 80014e4:	40010000 	.word	0x40010000

080014e8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80014e8:	b580      	push	{r7, lr}
 80014ea:	b084      	sub	sp, #16
 80014ec:	af00      	add	r7, sp, #0
 80014ee:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 80014f0:	687b      	ldr	r3, [r7, #4]
 80014f2:	681b      	ldr	r3, [r3, #0]
 80014f4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80014f8:	d113      	bne.n	8001522 <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80014fa:	4b0c      	ldr	r3, [pc, #48]	@ (800152c <HAL_TIM_Base_MspInit+0x44>)
 80014fc:	69db      	ldr	r3, [r3, #28]
 80014fe:	4a0b      	ldr	r2, [pc, #44]	@ (800152c <HAL_TIM_Base_MspInit+0x44>)
 8001500:	f043 0301 	orr.w	r3, r3, #1
 8001504:	61d3      	str	r3, [r2, #28]
 8001506:	4b09      	ldr	r3, [pc, #36]	@ (800152c <HAL_TIM_Base_MspInit+0x44>)
 8001508:	69db      	ldr	r3, [r3, #28]
 800150a:	f003 0301 	and.w	r3, r3, #1
 800150e:	60fb      	str	r3, [r7, #12]
 8001510:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8001512:	2200      	movs	r2, #0
 8001514:	2100      	movs	r1, #0
 8001516:	201c      	movs	r0, #28
 8001518:	f000 f9a5 	bl	8001866 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800151c:	201c      	movs	r0, #28
 800151e:	f000 f9be 	bl	800189e <HAL_NVIC_EnableIRQ>

  /* USER CODE END TIM2_MspInit 1 */

  }

}
 8001522:	bf00      	nop
 8001524:	3710      	adds	r7, #16
 8001526:	46bd      	mov	sp, r7
 8001528:	bd80      	pop	{r7, pc}
 800152a:	bf00      	nop
 800152c:	40021000 	.word	0x40021000

08001530 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001530:	b480      	push	{r7}
 8001532:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001534:	bf00      	nop
 8001536:	e7fd      	b.n	8001534 <NMI_Handler+0x4>

08001538 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001538:	b480      	push	{r7}
 800153a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800153c:	bf00      	nop
 800153e:	e7fd      	b.n	800153c <HardFault_Handler+0x4>

08001540 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001540:	b480      	push	{r7}
 8001542:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001544:	bf00      	nop
 8001546:	e7fd      	b.n	8001544 <MemManage_Handler+0x4>

08001548 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001548:	b480      	push	{r7}
 800154a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800154c:	bf00      	nop
 800154e:	e7fd      	b.n	800154c <BusFault_Handler+0x4>

08001550 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001550:	b480      	push	{r7}
 8001552:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001554:	bf00      	nop
 8001556:	e7fd      	b.n	8001554 <UsageFault_Handler+0x4>

08001558 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001558:	b480      	push	{r7}
 800155a:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800155c:	bf00      	nop
 800155e:	46bd      	mov	sp, r7
 8001560:	bc80      	pop	{r7}
 8001562:	4770      	bx	lr

08001564 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001564:	b480      	push	{r7}
 8001566:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001568:	bf00      	nop
 800156a:	46bd      	mov	sp, r7
 800156c:	bc80      	pop	{r7}
 800156e:	4770      	bx	lr

08001570 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001570:	b480      	push	{r7}
 8001572:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001574:	bf00      	nop
 8001576:	46bd      	mov	sp, r7
 8001578:	bc80      	pop	{r7}
 800157a:	4770      	bx	lr

0800157c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800157c:	b580      	push	{r7, lr}
 800157e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001580:	f000 f87e 	bl	8001680 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001584:	bf00      	nop
 8001586:	bd80      	pop	{r7, pc}

08001588 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001588:	b580      	push	{r7, lr}
 800158a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 800158c:	4802      	ldr	r0, [pc, #8]	@ (8001598 <TIM2_IRQHandler+0x10>)
 800158e:	f000 ffdf 	bl	8002550 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8001592:	bf00      	nop
 8001594:	bd80      	pop	{r7, pc}
 8001596:	bf00      	nop
 8001598:	200000b8 	.word	0x200000b8

0800159c <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 800159c:	b480      	push	{r7}
 800159e:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80015a0:	bf00      	nop
 80015a2:	46bd      	mov	sp, r7
 80015a4:	bc80      	pop	{r7}
 80015a6:	4770      	bx	lr

080015a8 <Reset_Handler>:
 80015a8:	f7ff fff8 	bl	800159c <SystemInit>
 80015ac:	480b      	ldr	r0, [pc, #44]	@ (80015dc <LoopFillZerobss+0xe>)
 80015ae:	490c      	ldr	r1, [pc, #48]	@ (80015e0 <LoopFillZerobss+0x12>)
 80015b0:	4a0c      	ldr	r2, [pc, #48]	@ (80015e4 <LoopFillZerobss+0x16>)
 80015b2:	2300      	movs	r3, #0
 80015b4:	e002      	b.n	80015bc <LoopCopyDataInit>

080015b6 <CopyDataInit>:
 80015b6:	58d4      	ldr	r4, [r2, r3]
 80015b8:	50c4      	str	r4, [r0, r3]
 80015ba:	3304      	adds	r3, #4

080015bc <LoopCopyDataInit>:
 80015bc:	18c4      	adds	r4, r0, r3
 80015be:	428c      	cmp	r4, r1
 80015c0:	d3f9      	bcc.n	80015b6 <CopyDataInit>
 80015c2:	4a09      	ldr	r2, [pc, #36]	@ (80015e8 <LoopFillZerobss+0x1a>)
 80015c4:	4c09      	ldr	r4, [pc, #36]	@ (80015ec <LoopFillZerobss+0x1e>)
 80015c6:	2300      	movs	r3, #0
 80015c8:	e001      	b.n	80015ce <LoopFillZerobss>

080015ca <FillZerobss>:
 80015ca:	6013      	str	r3, [r2, #0]
 80015cc:	3204      	adds	r2, #4

080015ce <LoopFillZerobss>:
 80015ce:	42a2      	cmp	r2, r4
 80015d0:	d3fb      	bcc.n	80015ca <FillZerobss>
 80015d2:	f001 fb05 	bl	8002be0 <__libc_init_array>
 80015d6:	f7ff fdb3 	bl	8001140 <main>
 80015da:	4770      	bx	lr
 80015dc:	20000000 	.word	0x20000000
 80015e0:	20000058 	.word	0x20000058
 80015e4:	08002c6c 	.word	0x08002c6c
 80015e8:	20000058 	.word	0x20000058
 80015ec:	2000011c 	.word	0x2000011c

080015f0 <ADC1_2_IRQHandler>:
 80015f0:	e7fe      	b.n	80015f0 <ADC1_2_IRQHandler>
	...

080015f4 <HAL_Init>:
 80015f4:	b580      	push	{r7, lr}
 80015f6:	af00      	add	r7, sp, #0
 80015f8:	4b08      	ldr	r3, [pc, #32]	@ (800161c <HAL_Init+0x28>)
 80015fa:	681b      	ldr	r3, [r3, #0]
 80015fc:	4a07      	ldr	r2, [pc, #28]	@ (800161c <HAL_Init+0x28>)
 80015fe:	f043 0310 	orr.w	r3, r3, #16
 8001602:	6013      	str	r3, [r2, #0]
 8001604:	2003      	movs	r0, #3
 8001606:	f000 f923 	bl	8001850 <HAL_NVIC_SetPriorityGrouping>
 800160a:	200f      	movs	r0, #15
 800160c:	f000 f808 	bl	8001620 <HAL_InitTick>
 8001610:	f7ff ff38 	bl	8001484 <HAL_MspInit>
 8001614:	2300      	movs	r3, #0
 8001616:	4618      	mov	r0, r3
 8001618:	bd80      	pop	{r7, pc}
 800161a:	bf00      	nop
 800161c:	40022000 	.word	0x40022000

08001620 <HAL_InitTick>:
 8001620:	b580      	push	{r7, lr}
 8001622:	b082      	sub	sp, #8
 8001624:	af00      	add	r7, sp, #0
 8001626:	6078      	str	r0, [r7, #4]
 8001628:	4b12      	ldr	r3, [pc, #72]	@ (8001674 <HAL_InitTick+0x54>)
 800162a:	681a      	ldr	r2, [r3, #0]
 800162c:	4b12      	ldr	r3, [pc, #72]	@ (8001678 <HAL_InitTick+0x58>)
 800162e:	781b      	ldrb	r3, [r3, #0]
 8001630:	4619      	mov	r1, r3
 8001632:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001636:	fbb3 f3f1 	udiv	r3, r3, r1
 800163a:	fbb2 f3f3 	udiv	r3, r2, r3
 800163e:	4618      	mov	r0, r3
 8001640:	f000 f93b 	bl	80018ba <HAL_SYSTICK_Config>
 8001644:	4603      	mov	r3, r0
 8001646:	2b00      	cmp	r3, #0
 8001648:	d001      	beq.n	800164e <HAL_InitTick+0x2e>
 800164a:	2301      	movs	r3, #1
 800164c:	e00e      	b.n	800166c <HAL_InitTick+0x4c>
 800164e:	687b      	ldr	r3, [r7, #4]
 8001650:	2b0f      	cmp	r3, #15
 8001652:	d80a      	bhi.n	800166a <HAL_InitTick+0x4a>
 8001654:	2200      	movs	r2, #0
 8001656:	6879      	ldr	r1, [r7, #4]
 8001658:	f04f 30ff 	mov.w	r0, #4294967295
 800165c:	f000 f903 	bl	8001866 <HAL_NVIC_SetPriority>
 8001660:	4a06      	ldr	r2, [pc, #24]	@ (800167c <HAL_InitTick+0x5c>)
 8001662:	687b      	ldr	r3, [r7, #4]
 8001664:	6013      	str	r3, [r2, #0]
 8001666:	2300      	movs	r3, #0
 8001668:	e000      	b.n	800166c <HAL_InitTick+0x4c>
 800166a:	2301      	movs	r3, #1
 800166c:	4618      	mov	r0, r3
 800166e:	3708      	adds	r7, #8
 8001670:	46bd      	mov	sp, r7
 8001672:	bd80      	pop	{r7, pc}
 8001674:	2000004c 	.word	0x2000004c
 8001678:	20000054 	.word	0x20000054
 800167c:	20000050 	.word	0x20000050

08001680 <HAL_IncTick>:
 8001680:	b480      	push	{r7}
 8001682:	af00      	add	r7, sp, #0
 8001684:	4b05      	ldr	r3, [pc, #20]	@ (800169c <HAL_IncTick+0x1c>)
 8001686:	781b      	ldrb	r3, [r3, #0]
 8001688:	461a      	mov	r2, r3
 800168a:	4b05      	ldr	r3, [pc, #20]	@ (80016a0 <HAL_IncTick+0x20>)
 800168c:	681b      	ldr	r3, [r3, #0]
 800168e:	4413      	add	r3, r2
 8001690:	4a03      	ldr	r2, [pc, #12]	@ (80016a0 <HAL_IncTick+0x20>)
 8001692:	6013      	str	r3, [r2, #0]
 8001694:	bf00      	nop
 8001696:	46bd      	mov	sp, r7
 8001698:	bc80      	pop	{r7}
 800169a:	4770      	bx	lr
 800169c:	20000054 	.word	0x20000054
 80016a0:	20000118 	.word	0x20000118

080016a4 <HAL_GetTick>:
 80016a4:	b480      	push	{r7}
 80016a6:	af00      	add	r7, sp, #0
 80016a8:	4b02      	ldr	r3, [pc, #8]	@ (80016b4 <HAL_GetTick+0x10>)
 80016aa:	681b      	ldr	r3, [r3, #0]
 80016ac:	4618      	mov	r0, r3
 80016ae:	46bd      	mov	sp, r7
 80016b0:	bc80      	pop	{r7}
 80016b2:	4770      	bx	lr
 80016b4:	20000118 	.word	0x20000118

080016b8 <__NVIC_SetPriorityGrouping>:
 80016b8:	b480      	push	{r7}
 80016ba:	b085      	sub	sp, #20
 80016bc:	af00      	add	r7, sp, #0
 80016be:	6078      	str	r0, [r7, #4]
 80016c0:	687b      	ldr	r3, [r7, #4]
 80016c2:	f003 0307 	and.w	r3, r3, #7
 80016c6:	60fb      	str	r3, [r7, #12]
 80016c8:	4b0c      	ldr	r3, [pc, #48]	@ (80016fc <__NVIC_SetPriorityGrouping+0x44>)
 80016ca:	68db      	ldr	r3, [r3, #12]
 80016cc:	60bb      	str	r3, [r7, #8]
 80016ce:	68ba      	ldr	r2, [r7, #8]
 80016d0:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80016d4:	4013      	ands	r3, r2
 80016d6:	60bb      	str	r3, [r7, #8]
 80016d8:	68fb      	ldr	r3, [r7, #12]
 80016da:	021a      	lsls	r2, r3, #8
 80016dc:	68bb      	ldr	r3, [r7, #8]
 80016de:	4313      	orrs	r3, r2
 80016e0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80016e4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80016e8:	60bb      	str	r3, [r7, #8]
 80016ea:	4a04      	ldr	r2, [pc, #16]	@ (80016fc <__NVIC_SetPriorityGrouping+0x44>)
 80016ec:	68bb      	ldr	r3, [r7, #8]
 80016ee:	60d3      	str	r3, [r2, #12]
 80016f0:	bf00      	nop
 80016f2:	3714      	adds	r7, #20
 80016f4:	46bd      	mov	sp, r7
 80016f6:	bc80      	pop	{r7}
 80016f8:	4770      	bx	lr
 80016fa:	bf00      	nop
 80016fc:	e000ed00 	.word	0xe000ed00

08001700 <__NVIC_GetPriorityGrouping>:
 8001700:	b480      	push	{r7}
 8001702:	af00      	add	r7, sp, #0
 8001704:	4b04      	ldr	r3, [pc, #16]	@ (8001718 <__NVIC_GetPriorityGrouping+0x18>)
 8001706:	68db      	ldr	r3, [r3, #12]
 8001708:	0a1b      	lsrs	r3, r3, #8
 800170a:	f003 0307 	and.w	r3, r3, #7
 800170e:	4618      	mov	r0, r3
 8001710:	46bd      	mov	sp, r7
 8001712:	bc80      	pop	{r7}
 8001714:	4770      	bx	lr
 8001716:	bf00      	nop
 8001718:	e000ed00 	.word	0xe000ed00

0800171c <__NVIC_EnableIRQ>:
 800171c:	b480      	push	{r7}
 800171e:	b083      	sub	sp, #12
 8001720:	af00      	add	r7, sp, #0
 8001722:	4603      	mov	r3, r0
 8001724:	71fb      	strb	r3, [r7, #7]
 8001726:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800172a:	2b00      	cmp	r3, #0
 800172c:	db0b      	blt.n	8001746 <__NVIC_EnableIRQ+0x2a>
 800172e:	79fb      	ldrb	r3, [r7, #7]
 8001730:	f003 021f 	and.w	r2, r3, #31
 8001734:	4906      	ldr	r1, [pc, #24]	@ (8001750 <__NVIC_EnableIRQ+0x34>)
 8001736:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800173a:	095b      	lsrs	r3, r3, #5
 800173c:	2001      	movs	r0, #1
 800173e:	fa00 f202 	lsl.w	r2, r0, r2
 8001742:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001746:	bf00      	nop
 8001748:	370c      	adds	r7, #12
 800174a:	46bd      	mov	sp, r7
 800174c:	bc80      	pop	{r7}
 800174e:	4770      	bx	lr
 8001750:	e000e100 	.word	0xe000e100

08001754 <__NVIC_SetPriority>:
 8001754:	b480      	push	{r7}
 8001756:	b083      	sub	sp, #12
 8001758:	af00      	add	r7, sp, #0
 800175a:	4603      	mov	r3, r0
 800175c:	6039      	str	r1, [r7, #0]
 800175e:	71fb      	strb	r3, [r7, #7]
 8001760:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001764:	2b00      	cmp	r3, #0
 8001766:	db0a      	blt.n	800177e <__NVIC_SetPriority+0x2a>
 8001768:	683b      	ldr	r3, [r7, #0]
 800176a:	b2da      	uxtb	r2, r3
 800176c:	490c      	ldr	r1, [pc, #48]	@ (80017a0 <__NVIC_SetPriority+0x4c>)
 800176e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001772:	0112      	lsls	r2, r2, #4
 8001774:	b2d2      	uxtb	r2, r2
 8001776:	440b      	add	r3, r1
 8001778:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800177c:	e00a      	b.n	8001794 <__NVIC_SetPriority+0x40>
 800177e:	683b      	ldr	r3, [r7, #0]
 8001780:	b2da      	uxtb	r2, r3
 8001782:	4908      	ldr	r1, [pc, #32]	@ (80017a4 <__NVIC_SetPriority+0x50>)
 8001784:	79fb      	ldrb	r3, [r7, #7]
 8001786:	f003 030f 	and.w	r3, r3, #15
 800178a:	3b04      	subs	r3, #4
 800178c:	0112      	lsls	r2, r2, #4
 800178e:	b2d2      	uxtb	r2, r2
 8001790:	440b      	add	r3, r1
 8001792:	761a      	strb	r2, [r3, #24]
 8001794:	bf00      	nop
 8001796:	370c      	adds	r7, #12
 8001798:	46bd      	mov	sp, r7
 800179a:	bc80      	pop	{r7}
 800179c:	4770      	bx	lr
 800179e:	bf00      	nop
 80017a0:	e000e100 	.word	0xe000e100
 80017a4:	e000ed00 	.word	0xe000ed00

080017a8 <NVIC_EncodePriority>:
 80017a8:	b480      	push	{r7}
 80017aa:	b089      	sub	sp, #36	@ 0x24
 80017ac:	af00      	add	r7, sp, #0
 80017ae:	60f8      	str	r0, [r7, #12]
 80017b0:	60b9      	str	r1, [r7, #8]
 80017b2:	607a      	str	r2, [r7, #4]
 80017b4:	68fb      	ldr	r3, [r7, #12]
 80017b6:	f003 0307 	and.w	r3, r3, #7
 80017ba:	61fb      	str	r3, [r7, #28]
 80017bc:	69fb      	ldr	r3, [r7, #28]
 80017be:	f1c3 0307 	rsb	r3, r3, #7
 80017c2:	2b04      	cmp	r3, #4
 80017c4:	bf28      	it	cs
 80017c6:	2304      	movcs	r3, #4
 80017c8:	61bb      	str	r3, [r7, #24]
 80017ca:	69fb      	ldr	r3, [r7, #28]
 80017cc:	3304      	adds	r3, #4
 80017ce:	2b06      	cmp	r3, #6
 80017d0:	d902      	bls.n	80017d8 <NVIC_EncodePriority+0x30>
 80017d2:	69fb      	ldr	r3, [r7, #28]
 80017d4:	3b03      	subs	r3, #3
 80017d6:	e000      	b.n	80017da <NVIC_EncodePriority+0x32>
 80017d8:	2300      	movs	r3, #0
 80017da:	617b      	str	r3, [r7, #20]
 80017dc:	f04f 32ff 	mov.w	r2, #4294967295
 80017e0:	69bb      	ldr	r3, [r7, #24]
 80017e2:	fa02 f303 	lsl.w	r3, r2, r3
 80017e6:	43da      	mvns	r2, r3
 80017e8:	68bb      	ldr	r3, [r7, #8]
 80017ea:	401a      	ands	r2, r3
 80017ec:	697b      	ldr	r3, [r7, #20]
 80017ee:	409a      	lsls	r2, r3
 80017f0:	f04f 31ff 	mov.w	r1, #4294967295
 80017f4:	697b      	ldr	r3, [r7, #20]
 80017f6:	fa01 f303 	lsl.w	r3, r1, r3
 80017fa:	43d9      	mvns	r1, r3
 80017fc:	687b      	ldr	r3, [r7, #4]
 80017fe:	400b      	ands	r3, r1
 8001800:	4313      	orrs	r3, r2
 8001802:	4618      	mov	r0, r3
 8001804:	3724      	adds	r7, #36	@ 0x24
 8001806:	46bd      	mov	sp, r7
 8001808:	bc80      	pop	{r7}
 800180a:	4770      	bx	lr

0800180c <SysTick_Config>:
 800180c:	b580      	push	{r7, lr}
 800180e:	b082      	sub	sp, #8
 8001810:	af00      	add	r7, sp, #0
 8001812:	6078      	str	r0, [r7, #4]
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	3b01      	subs	r3, #1
 8001818:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800181c:	d301      	bcc.n	8001822 <SysTick_Config+0x16>
 800181e:	2301      	movs	r3, #1
 8001820:	e00f      	b.n	8001842 <SysTick_Config+0x36>
 8001822:	4a0a      	ldr	r2, [pc, #40]	@ (800184c <SysTick_Config+0x40>)
 8001824:	687b      	ldr	r3, [r7, #4]
 8001826:	3b01      	subs	r3, #1
 8001828:	6053      	str	r3, [r2, #4]
 800182a:	210f      	movs	r1, #15
 800182c:	f04f 30ff 	mov.w	r0, #4294967295
 8001830:	f7ff ff90 	bl	8001754 <__NVIC_SetPriority>
 8001834:	4b05      	ldr	r3, [pc, #20]	@ (800184c <SysTick_Config+0x40>)
 8001836:	2200      	movs	r2, #0
 8001838:	609a      	str	r2, [r3, #8]
 800183a:	4b04      	ldr	r3, [pc, #16]	@ (800184c <SysTick_Config+0x40>)
 800183c:	2207      	movs	r2, #7
 800183e:	601a      	str	r2, [r3, #0]
 8001840:	2300      	movs	r3, #0
 8001842:	4618      	mov	r0, r3
 8001844:	3708      	adds	r7, #8
 8001846:	46bd      	mov	sp, r7
 8001848:	bd80      	pop	{r7, pc}
 800184a:	bf00      	nop
 800184c:	e000e010 	.word	0xe000e010

08001850 <HAL_NVIC_SetPriorityGrouping>:
 8001850:	b580      	push	{r7, lr}
 8001852:	b082      	sub	sp, #8
 8001854:	af00      	add	r7, sp, #0
 8001856:	6078      	str	r0, [r7, #4]
 8001858:	6878      	ldr	r0, [r7, #4]
 800185a:	f7ff ff2d 	bl	80016b8 <__NVIC_SetPriorityGrouping>
 800185e:	bf00      	nop
 8001860:	3708      	adds	r7, #8
 8001862:	46bd      	mov	sp, r7
 8001864:	bd80      	pop	{r7, pc}

08001866 <HAL_NVIC_SetPriority>:
 8001866:	b580      	push	{r7, lr}
 8001868:	b086      	sub	sp, #24
 800186a:	af00      	add	r7, sp, #0
 800186c:	4603      	mov	r3, r0
 800186e:	60b9      	str	r1, [r7, #8]
 8001870:	607a      	str	r2, [r7, #4]
 8001872:	73fb      	strb	r3, [r7, #15]
 8001874:	2300      	movs	r3, #0
 8001876:	617b      	str	r3, [r7, #20]
 8001878:	f7ff ff42 	bl	8001700 <__NVIC_GetPriorityGrouping>
 800187c:	6178      	str	r0, [r7, #20]
 800187e:	687a      	ldr	r2, [r7, #4]
 8001880:	68b9      	ldr	r1, [r7, #8]
 8001882:	6978      	ldr	r0, [r7, #20]
 8001884:	f7ff ff90 	bl	80017a8 <NVIC_EncodePriority>
 8001888:	4602      	mov	r2, r0
 800188a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800188e:	4611      	mov	r1, r2
 8001890:	4618      	mov	r0, r3
 8001892:	f7ff ff5f 	bl	8001754 <__NVIC_SetPriority>
 8001896:	bf00      	nop
 8001898:	3718      	adds	r7, #24
 800189a:	46bd      	mov	sp, r7
 800189c:	bd80      	pop	{r7, pc}

0800189e <HAL_NVIC_EnableIRQ>:
 800189e:	b580      	push	{r7, lr}
 80018a0:	b082      	sub	sp, #8
 80018a2:	af00      	add	r7, sp, #0
 80018a4:	4603      	mov	r3, r0
 80018a6:	71fb      	strb	r3, [r7, #7]
 80018a8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80018ac:	4618      	mov	r0, r3
 80018ae:	f7ff ff35 	bl	800171c <__NVIC_EnableIRQ>
 80018b2:	bf00      	nop
 80018b4:	3708      	adds	r7, #8
 80018b6:	46bd      	mov	sp, r7
 80018b8:	bd80      	pop	{r7, pc}

080018ba <HAL_SYSTICK_Config>:
 80018ba:	b580      	push	{r7, lr}
 80018bc:	b082      	sub	sp, #8
 80018be:	af00      	add	r7, sp, #0
 80018c0:	6078      	str	r0, [r7, #4]
 80018c2:	6878      	ldr	r0, [r7, #4]
 80018c4:	f7ff ffa2 	bl	800180c <SysTick_Config>
 80018c8:	4603      	mov	r3, r0
 80018ca:	4618      	mov	r0, r3
 80018cc:	3708      	adds	r7, #8
 80018ce:	46bd      	mov	sp, r7
 80018d0:	bd80      	pop	{r7, pc}
	...

080018d4 <HAL_GPIO_Init>:
 80018d4:	b480      	push	{r7}
 80018d6:	b08b      	sub	sp, #44	@ 0x2c
 80018d8:	af00      	add	r7, sp, #0
 80018da:	6078      	str	r0, [r7, #4]
 80018dc:	6039      	str	r1, [r7, #0]
 80018de:	2300      	movs	r3, #0
 80018e0:	627b      	str	r3, [r7, #36]	@ 0x24
 80018e2:	2300      	movs	r3, #0
 80018e4:	623b      	str	r3, [r7, #32]
 80018e6:	e161      	b.n	8001bac <HAL_GPIO_Init+0x2d8>
 80018e8:	2201      	movs	r2, #1
 80018ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80018ec:	fa02 f303 	lsl.w	r3, r2, r3
 80018f0:	61fb      	str	r3, [r7, #28]
 80018f2:	683b      	ldr	r3, [r7, #0]
 80018f4:	681b      	ldr	r3, [r3, #0]
 80018f6:	69fa      	ldr	r2, [r7, #28]
 80018f8:	4013      	ands	r3, r2
 80018fa:	61bb      	str	r3, [r7, #24]
 80018fc:	69ba      	ldr	r2, [r7, #24]
 80018fe:	69fb      	ldr	r3, [r7, #28]
 8001900:	429a      	cmp	r2, r3
 8001902:	f040 8150 	bne.w	8001ba6 <HAL_GPIO_Init+0x2d2>
 8001906:	683b      	ldr	r3, [r7, #0]
 8001908:	685b      	ldr	r3, [r3, #4]
 800190a:	4a97      	ldr	r2, [pc, #604]	@ (8001b68 <HAL_GPIO_Init+0x294>)
 800190c:	4293      	cmp	r3, r2
 800190e:	d05e      	beq.n	80019ce <HAL_GPIO_Init+0xfa>
 8001910:	4a95      	ldr	r2, [pc, #596]	@ (8001b68 <HAL_GPIO_Init+0x294>)
 8001912:	4293      	cmp	r3, r2
 8001914:	d875      	bhi.n	8001a02 <HAL_GPIO_Init+0x12e>
 8001916:	4a95      	ldr	r2, [pc, #596]	@ (8001b6c <HAL_GPIO_Init+0x298>)
 8001918:	4293      	cmp	r3, r2
 800191a:	d058      	beq.n	80019ce <HAL_GPIO_Init+0xfa>
 800191c:	4a93      	ldr	r2, [pc, #588]	@ (8001b6c <HAL_GPIO_Init+0x298>)
 800191e:	4293      	cmp	r3, r2
 8001920:	d86f      	bhi.n	8001a02 <HAL_GPIO_Init+0x12e>
 8001922:	4a93      	ldr	r2, [pc, #588]	@ (8001b70 <HAL_GPIO_Init+0x29c>)
 8001924:	4293      	cmp	r3, r2
 8001926:	d052      	beq.n	80019ce <HAL_GPIO_Init+0xfa>
 8001928:	4a91      	ldr	r2, [pc, #580]	@ (8001b70 <HAL_GPIO_Init+0x29c>)
 800192a:	4293      	cmp	r3, r2
 800192c:	d869      	bhi.n	8001a02 <HAL_GPIO_Init+0x12e>
 800192e:	4a91      	ldr	r2, [pc, #580]	@ (8001b74 <HAL_GPIO_Init+0x2a0>)
 8001930:	4293      	cmp	r3, r2
 8001932:	d04c      	beq.n	80019ce <HAL_GPIO_Init+0xfa>
 8001934:	4a8f      	ldr	r2, [pc, #572]	@ (8001b74 <HAL_GPIO_Init+0x2a0>)
 8001936:	4293      	cmp	r3, r2
 8001938:	d863      	bhi.n	8001a02 <HAL_GPIO_Init+0x12e>
 800193a:	4a8f      	ldr	r2, [pc, #572]	@ (8001b78 <HAL_GPIO_Init+0x2a4>)
 800193c:	4293      	cmp	r3, r2
 800193e:	d046      	beq.n	80019ce <HAL_GPIO_Init+0xfa>
 8001940:	4a8d      	ldr	r2, [pc, #564]	@ (8001b78 <HAL_GPIO_Init+0x2a4>)
 8001942:	4293      	cmp	r3, r2
 8001944:	d85d      	bhi.n	8001a02 <HAL_GPIO_Init+0x12e>
 8001946:	2b12      	cmp	r3, #18
 8001948:	d82a      	bhi.n	80019a0 <HAL_GPIO_Init+0xcc>
 800194a:	2b12      	cmp	r3, #18
 800194c:	d859      	bhi.n	8001a02 <HAL_GPIO_Init+0x12e>
 800194e:	a201      	add	r2, pc, #4	@ (adr r2, 8001954 <HAL_GPIO_Init+0x80>)
 8001950:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001954:	080019cf 	.word	0x080019cf
 8001958:	080019a9 	.word	0x080019a9
 800195c:	080019bb 	.word	0x080019bb
 8001960:	080019fd 	.word	0x080019fd
 8001964:	08001a03 	.word	0x08001a03
 8001968:	08001a03 	.word	0x08001a03
 800196c:	08001a03 	.word	0x08001a03
 8001970:	08001a03 	.word	0x08001a03
 8001974:	08001a03 	.word	0x08001a03
 8001978:	08001a03 	.word	0x08001a03
 800197c:	08001a03 	.word	0x08001a03
 8001980:	08001a03 	.word	0x08001a03
 8001984:	08001a03 	.word	0x08001a03
 8001988:	08001a03 	.word	0x08001a03
 800198c:	08001a03 	.word	0x08001a03
 8001990:	08001a03 	.word	0x08001a03
 8001994:	08001a03 	.word	0x08001a03
 8001998:	080019b1 	.word	0x080019b1
 800199c:	080019c5 	.word	0x080019c5
 80019a0:	4a76      	ldr	r2, [pc, #472]	@ (8001b7c <HAL_GPIO_Init+0x2a8>)
 80019a2:	4293      	cmp	r3, r2
 80019a4:	d013      	beq.n	80019ce <HAL_GPIO_Init+0xfa>
 80019a6:	e02c      	b.n	8001a02 <HAL_GPIO_Init+0x12e>
 80019a8:	683b      	ldr	r3, [r7, #0]
 80019aa:	68db      	ldr	r3, [r3, #12]
 80019ac:	623b      	str	r3, [r7, #32]
 80019ae:	e029      	b.n	8001a04 <HAL_GPIO_Init+0x130>
 80019b0:	683b      	ldr	r3, [r7, #0]
 80019b2:	68db      	ldr	r3, [r3, #12]
 80019b4:	3304      	adds	r3, #4
 80019b6:	623b      	str	r3, [r7, #32]
 80019b8:	e024      	b.n	8001a04 <HAL_GPIO_Init+0x130>
 80019ba:	683b      	ldr	r3, [r7, #0]
 80019bc:	68db      	ldr	r3, [r3, #12]
 80019be:	3308      	adds	r3, #8
 80019c0:	623b      	str	r3, [r7, #32]
 80019c2:	e01f      	b.n	8001a04 <HAL_GPIO_Init+0x130>
 80019c4:	683b      	ldr	r3, [r7, #0]
 80019c6:	68db      	ldr	r3, [r3, #12]
 80019c8:	330c      	adds	r3, #12
 80019ca:	623b      	str	r3, [r7, #32]
 80019cc:	e01a      	b.n	8001a04 <HAL_GPIO_Init+0x130>
 80019ce:	683b      	ldr	r3, [r7, #0]
 80019d0:	689b      	ldr	r3, [r3, #8]
 80019d2:	2b00      	cmp	r3, #0
 80019d4:	d102      	bne.n	80019dc <HAL_GPIO_Init+0x108>
 80019d6:	2304      	movs	r3, #4
 80019d8:	623b      	str	r3, [r7, #32]
 80019da:	e013      	b.n	8001a04 <HAL_GPIO_Init+0x130>
 80019dc:	683b      	ldr	r3, [r7, #0]
 80019de:	689b      	ldr	r3, [r3, #8]
 80019e0:	2b01      	cmp	r3, #1
 80019e2:	d105      	bne.n	80019f0 <HAL_GPIO_Init+0x11c>
 80019e4:	2308      	movs	r3, #8
 80019e6:	623b      	str	r3, [r7, #32]
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	69fa      	ldr	r2, [r7, #28]
 80019ec:	611a      	str	r2, [r3, #16]
 80019ee:	e009      	b.n	8001a04 <HAL_GPIO_Init+0x130>
 80019f0:	2308      	movs	r3, #8
 80019f2:	623b      	str	r3, [r7, #32]
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	69fa      	ldr	r2, [r7, #28]
 80019f8:	615a      	str	r2, [r3, #20]
 80019fa:	e003      	b.n	8001a04 <HAL_GPIO_Init+0x130>
 80019fc:	2300      	movs	r3, #0
 80019fe:	623b      	str	r3, [r7, #32]
 8001a00:	e000      	b.n	8001a04 <HAL_GPIO_Init+0x130>
 8001a02:	bf00      	nop
 8001a04:	69bb      	ldr	r3, [r7, #24]
 8001a06:	2bff      	cmp	r3, #255	@ 0xff
 8001a08:	d801      	bhi.n	8001a0e <HAL_GPIO_Init+0x13a>
 8001a0a:	687b      	ldr	r3, [r7, #4]
 8001a0c:	e001      	b.n	8001a12 <HAL_GPIO_Init+0x13e>
 8001a0e:	687b      	ldr	r3, [r7, #4]
 8001a10:	3304      	adds	r3, #4
 8001a12:	617b      	str	r3, [r7, #20]
 8001a14:	69bb      	ldr	r3, [r7, #24]
 8001a16:	2bff      	cmp	r3, #255	@ 0xff
 8001a18:	d802      	bhi.n	8001a20 <HAL_GPIO_Init+0x14c>
 8001a1a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a1c:	009b      	lsls	r3, r3, #2
 8001a1e:	e002      	b.n	8001a26 <HAL_GPIO_Init+0x152>
 8001a20:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a22:	3b08      	subs	r3, #8
 8001a24:	009b      	lsls	r3, r3, #2
 8001a26:	613b      	str	r3, [r7, #16]
 8001a28:	697b      	ldr	r3, [r7, #20]
 8001a2a:	681a      	ldr	r2, [r3, #0]
 8001a2c:	210f      	movs	r1, #15
 8001a2e:	693b      	ldr	r3, [r7, #16]
 8001a30:	fa01 f303 	lsl.w	r3, r1, r3
 8001a34:	43db      	mvns	r3, r3
 8001a36:	401a      	ands	r2, r3
 8001a38:	6a39      	ldr	r1, [r7, #32]
 8001a3a:	693b      	ldr	r3, [r7, #16]
 8001a3c:	fa01 f303 	lsl.w	r3, r1, r3
 8001a40:	431a      	orrs	r2, r3
 8001a42:	697b      	ldr	r3, [r7, #20]
 8001a44:	601a      	str	r2, [r3, #0]
 8001a46:	683b      	ldr	r3, [r7, #0]
 8001a48:	685b      	ldr	r3, [r3, #4]
 8001a4a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001a4e:	2b00      	cmp	r3, #0
 8001a50:	f000 80a9 	beq.w	8001ba6 <HAL_GPIO_Init+0x2d2>
 8001a54:	4b4a      	ldr	r3, [pc, #296]	@ (8001b80 <HAL_GPIO_Init+0x2ac>)
 8001a56:	699b      	ldr	r3, [r3, #24]
 8001a58:	4a49      	ldr	r2, [pc, #292]	@ (8001b80 <HAL_GPIO_Init+0x2ac>)
 8001a5a:	f043 0301 	orr.w	r3, r3, #1
 8001a5e:	6193      	str	r3, [r2, #24]
 8001a60:	4b47      	ldr	r3, [pc, #284]	@ (8001b80 <HAL_GPIO_Init+0x2ac>)
 8001a62:	699b      	ldr	r3, [r3, #24]
 8001a64:	f003 0301 	and.w	r3, r3, #1
 8001a68:	60bb      	str	r3, [r7, #8]
 8001a6a:	68bb      	ldr	r3, [r7, #8]
 8001a6c:	4a45      	ldr	r2, [pc, #276]	@ (8001b84 <HAL_GPIO_Init+0x2b0>)
 8001a6e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a70:	089b      	lsrs	r3, r3, #2
 8001a72:	3302      	adds	r3, #2
 8001a74:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001a78:	60fb      	str	r3, [r7, #12]
 8001a7a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a7c:	f003 0303 	and.w	r3, r3, #3
 8001a80:	009b      	lsls	r3, r3, #2
 8001a82:	220f      	movs	r2, #15
 8001a84:	fa02 f303 	lsl.w	r3, r2, r3
 8001a88:	43db      	mvns	r3, r3
 8001a8a:	68fa      	ldr	r2, [r7, #12]
 8001a8c:	4013      	ands	r3, r2
 8001a8e:	60fb      	str	r3, [r7, #12]
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	4a3d      	ldr	r2, [pc, #244]	@ (8001b88 <HAL_GPIO_Init+0x2b4>)
 8001a94:	4293      	cmp	r3, r2
 8001a96:	d00d      	beq.n	8001ab4 <HAL_GPIO_Init+0x1e0>
 8001a98:	687b      	ldr	r3, [r7, #4]
 8001a9a:	4a3c      	ldr	r2, [pc, #240]	@ (8001b8c <HAL_GPIO_Init+0x2b8>)
 8001a9c:	4293      	cmp	r3, r2
 8001a9e:	d007      	beq.n	8001ab0 <HAL_GPIO_Init+0x1dc>
 8001aa0:	687b      	ldr	r3, [r7, #4]
 8001aa2:	4a3b      	ldr	r2, [pc, #236]	@ (8001b90 <HAL_GPIO_Init+0x2bc>)
 8001aa4:	4293      	cmp	r3, r2
 8001aa6:	d101      	bne.n	8001aac <HAL_GPIO_Init+0x1d8>
 8001aa8:	2302      	movs	r3, #2
 8001aaa:	e004      	b.n	8001ab6 <HAL_GPIO_Init+0x1e2>
 8001aac:	2303      	movs	r3, #3
 8001aae:	e002      	b.n	8001ab6 <HAL_GPIO_Init+0x1e2>
 8001ab0:	2301      	movs	r3, #1
 8001ab2:	e000      	b.n	8001ab6 <HAL_GPIO_Init+0x1e2>
 8001ab4:	2300      	movs	r3, #0
 8001ab6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001ab8:	f002 0203 	and.w	r2, r2, #3
 8001abc:	0092      	lsls	r2, r2, #2
 8001abe:	4093      	lsls	r3, r2
 8001ac0:	68fa      	ldr	r2, [r7, #12]
 8001ac2:	4313      	orrs	r3, r2
 8001ac4:	60fb      	str	r3, [r7, #12]
 8001ac6:	492f      	ldr	r1, [pc, #188]	@ (8001b84 <HAL_GPIO_Init+0x2b0>)
 8001ac8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001aca:	089b      	lsrs	r3, r3, #2
 8001acc:	3302      	adds	r3, #2
 8001ace:	68fa      	ldr	r2, [r7, #12]
 8001ad0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001ad4:	683b      	ldr	r3, [r7, #0]
 8001ad6:	685b      	ldr	r3, [r3, #4]
 8001ad8:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001adc:	2b00      	cmp	r3, #0
 8001ade:	d006      	beq.n	8001aee <HAL_GPIO_Init+0x21a>
 8001ae0:	4b2c      	ldr	r3, [pc, #176]	@ (8001b94 <HAL_GPIO_Init+0x2c0>)
 8001ae2:	689a      	ldr	r2, [r3, #8]
 8001ae4:	492b      	ldr	r1, [pc, #172]	@ (8001b94 <HAL_GPIO_Init+0x2c0>)
 8001ae6:	69bb      	ldr	r3, [r7, #24]
 8001ae8:	4313      	orrs	r3, r2
 8001aea:	608b      	str	r3, [r1, #8]
 8001aec:	e006      	b.n	8001afc <HAL_GPIO_Init+0x228>
 8001aee:	4b29      	ldr	r3, [pc, #164]	@ (8001b94 <HAL_GPIO_Init+0x2c0>)
 8001af0:	689a      	ldr	r2, [r3, #8]
 8001af2:	69bb      	ldr	r3, [r7, #24]
 8001af4:	43db      	mvns	r3, r3
 8001af6:	4927      	ldr	r1, [pc, #156]	@ (8001b94 <HAL_GPIO_Init+0x2c0>)
 8001af8:	4013      	ands	r3, r2
 8001afa:	608b      	str	r3, [r1, #8]
 8001afc:	683b      	ldr	r3, [r7, #0]
 8001afe:	685b      	ldr	r3, [r3, #4]
 8001b00:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001b04:	2b00      	cmp	r3, #0
 8001b06:	d006      	beq.n	8001b16 <HAL_GPIO_Init+0x242>
 8001b08:	4b22      	ldr	r3, [pc, #136]	@ (8001b94 <HAL_GPIO_Init+0x2c0>)
 8001b0a:	68da      	ldr	r2, [r3, #12]
 8001b0c:	4921      	ldr	r1, [pc, #132]	@ (8001b94 <HAL_GPIO_Init+0x2c0>)
 8001b0e:	69bb      	ldr	r3, [r7, #24]
 8001b10:	4313      	orrs	r3, r2
 8001b12:	60cb      	str	r3, [r1, #12]
 8001b14:	e006      	b.n	8001b24 <HAL_GPIO_Init+0x250>
 8001b16:	4b1f      	ldr	r3, [pc, #124]	@ (8001b94 <HAL_GPIO_Init+0x2c0>)
 8001b18:	68da      	ldr	r2, [r3, #12]
 8001b1a:	69bb      	ldr	r3, [r7, #24]
 8001b1c:	43db      	mvns	r3, r3
 8001b1e:	491d      	ldr	r1, [pc, #116]	@ (8001b94 <HAL_GPIO_Init+0x2c0>)
 8001b20:	4013      	ands	r3, r2
 8001b22:	60cb      	str	r3, [r1, #12]
 8001b24:	683b      	ldr	r3, [r7, #0]
 8001b26:	685b      	ldr	r3, [r3, #4]
 8001b28:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001b2c:	2b00      	cmp	r3, #0
 8001b2e:	d006      	beq.n	8001b3e <HAL_GPIO_Init+0x26a>
 8001b30:	4b18      	ldr	r3, [pc, #96]	@ (8001b94 <HAL_GPIO_Init+0x2c0>)
 8001b32:	685a      	ldr	r2, [r3, #4]
 8001b34:	4917      	ldr	r1, [pc, #92]	@ (8001b94 <HAL_GPIO_Init+0x2c0>)
 8001b36:	69bb      	ldr	r3, [r7, #24]
 8001b38:	4313      	orrs	r3, r2
 8001b3a:	604b      	str	r3, [r1, #4]
 8001b3c:	e006      	b.n	8001b4c <HAL_GPIO_Init+0x278>
 8001b3e:	4b15      	ldr	r3, [pc, #84]	@ (8001b94 <HAL_GPIO_Init+0x2c0>)
 8001b40:	685a      	ldr	r2, [r3, #4]
 8001b42:	69bb      	ldr	r3, [r7, #24]
 8001b44:	43db      	mvns	r3, r3
 8001b46:	4913      	ldr	r1, [pc, #76]	@ (8001b94 <HAL_GPIO_Init+0x2c0>)
 8001b48:	4013      	ands	r3, r2
 8001b4a:	604b      	str	r3, [r1, #4]
 8001b4c:	683b      	ldr	r3, [r7, #0]
 8001b4e:	685b      	ldr	r3, [r3, #4]
 8001b50:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001b54:	2b00      	cmp	r3, #0
 8001b56:	d01f      	beq.n	8001b98 <HAL_GPIO_Init+0x2c4>
 8001b58:	4b0e      	ldr	r3, [pc, #56]	@ (8001b94 <HAL_GPIO_Init+0x2c0>)
 8001b5a:	681a      	ldr	r2, [r3, #0]
 8001b5c:	490d      	ldr	r1, [pc, #52]	@ (8001b94 <HAL_GPIO_Init+0x2c0>)
 8001b5e:	69bb      	ldr	r3, [r7, #24]
 8001b60:	4313      	orrs	r3, r2
 8001b62:	600b      	str	r3, [r1, #0]
 8001b64:	e01f      	b.n	8001ba6 <HAL_GPIO_Init+0x2d2>
 8001b66:	bf00      	nop
 8001b68:	10320000 	.word	0x10320000
 8001b6c:	10310000 	.word	0x10310000
 8001b70:	10220000 	.word	0x10220000
 8001b74:	10210000 	.word	0x10210000
 8001b78:	10120000 	.word	0x10120000
 8001b7c:	10110000 	.word	0x10110000
 8001b80:	40021000 	.word	0x40021000
 8001b84:	40010000 	.word	0x40010000
 8001b88:	40010800 	.word	0x40010800
 8001b8c:	40010c00 	.word	0x40010c00
 8001b90:	40011000 	.word	0x40011000
 8001b94:	40010400 	.word	0x40010400
 8001b98:	4b0b      	ldr	r3, [pc, #44]	@ (8001bc8 <HAL_GPIO_Init+0x2f4>)
 8001b9a:	681a      	ldr	r2, [r3, #0]
 8001b9c:	69bb      	ldr	r3, [r7, #24]
 8001b9e:	43db      	mvns	r3, r3
 8001ba0:	4909      	ldr	r1, [pc, #36]	@ (8001bc8 <HAL_GPIO_Init+0x2f4>)
 8001ba2:	4013      	ands	r3, r2
 8001ba4:	600b      	str	r3, [r1, #0]
 8001ba6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001ba8:	3301      	adds	r3, #1
 8001baa:	627b      	str	r3, [r7, #36]	@ 0x24
 8001bac:	683b      	ldr	r3, [r7, #0]
 8001bae:	681a      	ldr	r2, [r3, #0]
 8001bb0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001bb2:	fa22 f303 	lsr.w	r3, r2, r3
 8001bb6:	2b00      	cmp	r3, #0
 8001bb8:	f47f ae96 	bne.w	80018e8 <HAL_GPIO_Init+0x14>
 8001bbc:	bf00      	nop
 8001bbe:	bf00      	nop
 8001bc0:	372c      	adds	r7, #44	@ 0x2c
 8001bc2:	46bd      	mov	sp, r7
 8001bc4:	bc80      	pop	{r7}
 8001bc6:	4770      	bx	lr
 8001bc8:	40010400 	.word	0x40010400

08001bcc <HAL_GPIO_ReadPin>:
 8001bcc:	b480      	push	{r7}
 8001bce:	b085      	sub	sp, #20
 8001bd0:	af00      	add	r7, sp, #0
 8001bd2:	6078      	str	r0, [r7, #4]
 8001bd4:	460b      	mov	r3, r1
 8001bd6:	807b      	strh	r3, [r7, #2]
 8001bd8:	687b      	ldr	r3, [r7, #4]
 8001bda:	689a      	ldr	r2, [r3, #8]
 8001bdc:	887b      	ldrh	r3, [r7, #2]
 8001bde:	4013      	ands	r3, r2
 8001be0:	2b00      	cmp	r3, #0
 8001be2:	d002      	beq.n	8001bea <HAL_GPIO_ReadPin+0x1e>
 8001be4:	2301      	movs	r3, #1
 8001be6:	73fb      	strb	r3, [r7, #15]
 8001be8:	e001      	b.n	8001bee <HAL_GPIO_ReadPin+0x22>
 8001bea:	2300      	movs	r3, #0
 8001bec:	73fb      	strb	r3, [r7, #15]
 8001bee:	7bfb      	ldrb	r3, [r7, #15]
 8001bf0:	4618      	mov	r0, r3
 8001bf2:	3714      	adds	r7, #20
 8001bf4:	46bd      	mov	sp, r7
 8001bf6:	bc80      	pop	{r7}
 8001bf8:	4770      	bx	lr

08001bfa <HAL_GPIO_WritePin>:
 8001bfa:	b480      	push	{r7}
 8001bfc:	b083      	sub	sp, #12
 8001bfe:	af00      	add	r7, sp, #0
 8001c00:	6078      	str	r0, [r7, #4]
 8001c02:	460b      	mov	r3, r1
 8001c04:	807b      	strh	r3, [r7, #2]
 8001c06:	4613      	mov	r3, r2
 8001c08:	707b      	strb	r3, [r7, #1]
 8001c0a:	787b      	ldrb	r3, [r7, #1]
 8001c0c:	2b00      	cmp	r3, #0
 8001c0e:	d003      	beq.n	8001c18 <HAL_GPIO_WritePin+0x1e>
 8001c10:	887a      	ldrh	r2, [r7, #2]
 8001c12:	687b      	ldr	r3, [r7, #4]
 8001c14:	611a      	str	r2, [r3, #16]
 8001c16:	e003      	b.n	8001c20 <HAL_GPIO_WritePin+0x26>
 8001c18:	887b      	ldrh	r3, [r7, #2]
 8001c1a:	041a      	lsls	r2, r3, #16
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	611a      	str	r2, [r3, #16]
 8001c20:	bf00      	nop
 8001c22:	370c      	adds	r7, #12
 8001c24:	46bd      	mov	sp, r7
 8001c26:	bc80      	pop	{r7}
 8001c28:	4770      	bx	lr

08001c2a <HAL_GPIO_TogglePin>:
 8001c2a:	b480      	push	{r7}
 8001c2c:	b085      	sub	sp, #20
 8001c2e:	af00      	add	r7, sp, #0
 8001c30:	6078      	str	r0, [r7, #4]
 8001c32:	460b      	mov	r3, r1
 8001c34:	807b      	strh	r3, [r7, #2]
 8001c36:	687b      	ldr	r3, [r7, #4]
 8001c38:	68db      	ldr	r3, [r3, #12]
 8001c3a:	60fb      	str	r3, [r7, #12]
 8001c3c:	887a      	ldrh	r2, [r7, #2]
 8001c3e:	68fb      	ldr	r3, [r7, #12]
 8001c40:	4013      	ands	r3, r2
 8001c42:	041a      	lsls	r2, r3, #16
 8001c44:	68fb      	ldr	r3, [r7, #12]
 8001c46:	43d9      	mvns	r1, r3
 8001c48:	887b      	ldrh	r3, [r7, #2]
 8001c4a:	400b      	ands	r3, r1
 8001c4c:	431a      	orrs	r2, r3
 8001c4e:	687b      	ldr	r3, [r7, #4]
 8001c50:	611a      	str	r2, [r3, #16]
 8001c52:	bf00      	nop
 8001c54:	3714      	adds	r7, #20
 8001c56:	46bd      	mov	sp, r7
 8001c58:	bc80      	pop	{r7}
 8001c5a:	4770      	bx	lr

08001c5c <HAL_RCC_OscConfig>:
 8001c5c:	b580      	push	{r7, lr}
 8001c5e:	b086      	sub	sp, #24
 8001c60:	af00      	add	r7, sp, #0
 8001c62:	6078      	str	r0, [r7, #4]
 8001c64:	687b      	ldr	r3, [r7, #4]
 8001c66:	2b00      	cmp	r3, #0
 8001c68:	d101      	bne.n	8001c6e <HAL_RCC_OscConfig+0x12>
 8001c6a:	2301      	movs	r3, #1
 8001c6c:	e272      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 8001c6e:	687b      	ldr	r3, [r7, #4]
 8001c70:	681b      	ldr	r3, [r3, #0]
 8001c72:	f003 0301 	and.w	r3, r3, #1
 8001c76:	2b00      	cmp	r3, #0
 8001c78:	f000 8087 	beq.w	8001d8a <HAL_RCC_OscConfig+0x12e>
 8001c7c:	4b92      	ldr	r3, [pc, #584]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001c7e:	685b      	ldr	r3, [r3, #4]
 8001c80:	f003 030c 	and.w	r3, r3, #12
 8001c84:	2b04      	cmp	r3, #4
 8001c86:	d00c      	beq.n	8001ca2 <HAL_RCC_OscConfig+0x46>
 8001c88:	4b8f      	ldr	r3, [pc, #572]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001c8a:	685b      	ldr	r3, [r3, #4]
 8001c8c:	f003 030c 	and.w	r3, r3, #12
 8001c90:	2b08      	cmp	r3, #8
 8001c92:	d112      	bne.n	8001cba <HAL_RCC_OscConfig+0x5e>
 8001c94:	4b8c      	ldr	r3, [pc, #560]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001c96:	685b      	ldr	r3, [r3, #4]
 8001c98:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001c9c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001ca0:	d10b      	bne.n	8001cba <HAL_RCC_OscConfig+0x5e>
 8001ca2:	4b89      	ldr	r3, [pc, #548]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001ca4:	681b      	ldr	r3, [r3, #0]
 8001ca6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001caa:	2b00      	cmp	r3, #0
 8001cac:	d06c      	beq.n	8001d88 <HAL_RCC_OscConfig+0x12c>
 8001cae:	687b      	ldr	r3, [r7, #4]
 8001cb0:	685b      	ldr	r3, [r3, #4]
 8001cb2:	2b00      	cmp	r3, #0
 8001cb4:	d168      	bne.n	8001d88 <HAL_RCC_OscConfig+0x12c>
 8001cb6:	2301      	movs	r3, #1
 8001cb8:	e24c      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	685b      	ldr	r3, [r3, #4]
 8001cbe:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001cc2:	d106      	bne.n	8001cd2 <HAL_RCC_OscConfig+0x76>
 8001cc4:	4b80      	ldr	r3, [pc, #512]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001cc6:	681b      	ldr	r3, [r3, #0]
 8001cc8:	4a7f      	ldr	r2, [pc, #508]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001cca:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001cce:	6013      	str	r3, [r2, #0]
 8001cd0:	e02e      	b.n	8001d30 <HAL_RCC_OscConfig+0xd4>
 8001cd2:	687b      	ldr	r3, [r7, #4]
 8001cd4:	685b      	ldr	r3, [r3, #4]
 8001cd6:	2b00      	cmp	r3, #0
 8001cd8:	d10c      	bne.n	8001cf4 <HAL_RCC_OscConfig+0x98>
 8001cda:	4b7b      	ldr	r3, [pc, #492]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001cdc:	681b      	ldr	r3, [r3, #0]
 8001cde:	4a7a      	ldr	r2, [pc, #488]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001ce0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001ce4:	6013      	str	r3, [r2, #0]
 8001ce6:	4b78      	ldr	r3, [pc, #480]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001ce8:	681b      	ldr	r3, [r3, #0]
 8001cea:	4a77      	ldr	r2, [pc, #476]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001cec:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001cf0:	6013      	str	r3, [r2, #0]
 8001cf2:	e01d      	b.n	8001d30 <HAL_RCC_OscConfig+0xd4>
 8001cf4:	687b      	ldr	r3, [r7, #4]
 8001cf6:	685b      	ldr	r3, [r3, #4]
 8001cf8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8001cfc:	d10c      	bne.n	8001d18 <HAL_RCC_OscConfig+0xbc>
 8001cfe:	4b72      	ldr	r3, [pc, #456]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001d00:	681b      	ldr	r3, [r3, #0]
 8001d02:	4a71      	ldr	r2, [pc, #452]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001d04:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001d08:	6013      	str	r3, [r2, #0]
 8001d0a:	4b6f      	ldr	r3, [pc, #444]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001d0c:	681b      	ldr	r3, [r3, #0]
 8001d0e:	4a6e      	ldr	r2, [pc, #440]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001d10:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001d14:	6013      	str	r3, [r2, #0]
 8001d16:	e00b      	b.n	8001d30 <HAL_RCC_OscConfig+0xd4>
 8001d18:	4b6b      	ldr	r3, [pc, #428]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001d1a:	681b      	ldr	r3, [r3, #0]
 8001d1c:	4a6a      	ldr	r2, [pc, #424]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001d1e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001d22:	6013      	str	r3, [r2, #0]
 8001d24:	4b68      	ldr	r3, [pc, #416]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001d26:	681b      	ldr	r3, [r3, #0]
 8001d28:	4a67      	ldr	r2, [pc, #412]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001d2a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001d2e:	6013      	str	r3, [r2, #0]
 8001d30:	687b      	ldr	r3, [r7, #4]
 8001d32:	685b      	ldr	r3, [r3, #4]
 8001d34:	2b00      	cmp	r3, #0
 8001d36:	d013      	beq.n	8001d60 <HAL_RCC_OscConfig+0x104>
 8001d38:	f7ff fcb4 	bl	80016a4 <HAL_GetTick>
 8001d3c:	6138      	str	r0, [r7, #16]
 8001d3e:	e008      	b.n	8001d52 <HAL_RCC_OscConfig+0xf6>
 8001d40:	f7ff fcb0 	bl	80016a4 <HAL_GetTick>
 8001d44:	4602      	mov	r2, r0
 8001d46:	693b      	ldr	r3, [r7, #16]
 8001d48:	1ad3      	subs	r3, r2, r3
 8001d4a:	2b64      	cmp	r3, #100	@ 0x64
 8001d4c:	d901      	bls.n	8001d52 <HAL_RCC_OscConfig+0xf6>
 8001d4e:	2303      	movs	r3, #3
 8001d50:	e200      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 8001d52:	4b5d      	ldr	r3, [pc, #372]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001d54:	681b      	ldr	r3, [r3, #0]
 8001d56:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001d5a:	2b00      	cmp	r3, #0
 8001d5c:	d0f0      	beq.n	8001d40 <HAL_RCC_OscConfig+0xe4>
 8001d5e:	e014      	b.n	8001d8a <HAL_RCC_OscConfig+0x12e>
 8001d60:	f7ff fca0 	bl	80016a4 <HAL_GetTick>
 8001d64:	6138      	str	r0, [r7, #16]
 8001d66:	e008      	b.n	8001d7a <HAL_RCC_OscConfig+0x11e>
 8001d68:	f7ff fc9c 	bl	80016a4 <HAL_GetTick>
 8001d6c:	4602      	mov	r2, r0
 8001d6e:	693b      	ldr	r3, [r7, #16]
 8001d70:	1ad3      	subs	r3, r2, r3
 8001d72:	2b64      	cmp	r3, #100	@ 0x64
 8001d74:	d901      	bls.n	8001d7a <HAL_RCC_OscConfig+0x11e>
 8001d76:	2303      	movs	r3, #3
 8001d78:	e1ec      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 8001d7a:	4b53      	ldr	r3, [pc, #332]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001d7c:	681b      	ldr	r3, [r3, #0]
 8001d7e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001d82:	2b00      	cmp	r3, #0
 8001d84:	d1f0      	bne.n	8001d68 <HAL_RCC_OscConfig+0x10c>
 8001d86:	e000      	b.n	8001d8a <HAL_RCC_OscConfig+0x12e>
 8001d88:	bf00      	nop
 8001d8a:	687b      	ldr	r3, [r7, #4]
 8001d8c:	681b      	ldr	r3, [r3, #0]
 8001d8e:	f003 0302 	and.w	r3, r3, #2
 8001d92:	2b00      	cmp	r3, #0
 8001d94:	d063      	beq.n	8001e5e <HAL_RCC_OscConfig+0x202>
 8001d96:	4b4c      	ldr	r3, [pc, #304]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001d98:	685b      	ldr	r3, [r3, #4]
 8001d9a:	f003 030c 	and.w	r3, r3, #12
 8001d9e:	2b00      	cmp	r3, #0
 8001da0:	d00b      	beq.n	8001dba <HAL_RCC_OscConfig+0x15e>
 8001da2:	4b49      	ldr	r3, [pc, #292]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001da4:	685b      	ldr	r3, [r3, #4]
 8001da6:	f003 030c 	and.w	r3, r3, #12
 8001daa:	2b08      	cmp	r3, #8
 8001dac:	d11c      	bne.n	8001de8 <HAL_RCC_OscConfig+0x18c>
 8001dae:	4b46      	ldr	r3, [pc, #280]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001db0:	685b      	ldr	r3, [r3, #4]
 8001db2:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001db6:	2b00      	cmp	r3, #0
 8001db8:	d116      	bne.n	8001de8 <HAL_RCC_OscConfig+0x18c>
 8001dba:	4b43      	ldr	r3, [pc, #268]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001dbc:	681b      	ldr	r3, [r3, #0]
 8001dbe:	f003 0302 	and.w	r3, r3, #2
 8001dc2:	2b00      	cmp	r3, #0
 8001dc4:	d005      	beq.n	8001dd2 <HAL_RCC_OscConfig+0x176>
 8001dc6:	687b      	ldr	r3, [r7, #4]
 8001dc8:	691b      	ldr	r3, [r3, #16]
 8001dca:	2b01      	cmp	r3, #1
 8001dcc:	d001      	beq.n	8001dd2 <HAL_RCC_OscConfig+0x176>
 8001dce:	2301      	movs	r3, #1
 8001dd0:	e1c0      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 8001dd2:	4b3d      	ldr	r3, [pc, #244]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001dd4:	681b      	ldr	r3, [r3, #0]
 8001dd6:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001dda:	687b      	ldr	r3, [r7, #4]
 8001ddc:	695b      	ldr	r3, [r3, #20]
 8001dde:	00db      	lsls	r3, r3, #3
 8001de0:	4939      	ldr	r1, [pc, #228]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001de2:	4313      	orrs	r3, r2
 8001de4:	600b      	str	r3, [r1, #0]
 8001de6:	e03a      	b.n	8001e5e <HAL_RCC_OscConfig+0x202>
 8001de8:	687b      	ldr	r3, [r7, #4]
 8001dea:	691b      	ldr	r3, [r3, #16]
 8001dec:	2b00      	cmp	r3, #0
 8001dee:	d020      	beq.n	8001e32 <HAL_RCC_OscConfig+0x1d6>
 8001df0:	4b36      	ldr	r3, [pc, #216]	@ (8001ecc <HAL_RCC_OscConfig+0x270>)
 8001df2:	2201      	movs	r2, #1
 8001df4:	601a      	str	r2, [r3, #0]
 8001df6:	f7ff fc55 	bl	80016a4 <HAL_GetTick>
 8001dfa:	6138      	str	r0, [r7, #16]
 8001dfc:	e008      	b.n	8001e10 <HAL_RCC_OscConfig+0x1b4>
 8001dfe:	f7ff fc51 	bl	80016a4 <HAL_GetTick>
 8001e02:	4602      	mov	r2, r0
 8001e04:	693b      	ldr	r3, [r7, #16]
 8001e06:	1ad3      	subs	r3, r2, r3
 8001e08:	2b02      	cmp	r3, #2
 8001e0a:	d901      	bls.n	8001e10 <HAL_RCC_OscConfig+0x1b4>
 8001e0c:	2303      	movs	r3, #3
 8001e0e:	e1a1      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 8001e10:	4b2d      	ldr	r3, [pc, #180]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	f003 0302 	and.w	r3, r3, #2
 8001e18:	2b00      	cmp	r3, #0
 8001e1a:	d0f0      	beq.n	8001dfe <HAL_RCC_OscConfig+0x1a2>
 8001e1c:	4b2a      	ldr	r3, [pc, #168]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001e1e:	681b      	ldr	r3, [r3, #0]
 8001e20:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001e24:	687b      	ldr	r3, [r7, #4]
 8001e26:	695b      	ldr	r3, [r3, #20]
 8001e28:	00db      	lsls	r3, r3, #3
 8001e2a:	4927      	ldr	r1, [pc, #156]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001e2c:	4313      	orrs	r3, r2
 8001e2e:	600b      	str	r3, [r1, #0]
 8001e30:	e015      	b.n	8001e5e <HAL_RCC_OscConfig+0x202>
 8001e32:	4b26      	ldr	r3, [pc, #152]	@ (8001ecc <HAL_RCC_OscConfig+0x270>)
 8001e34:	2200      	movs	r2, #0
 8001e36:	601a      	str	r2, [r3, #0]
 8001e38:	f7ff fc34 	bl	80016a4 <HAL_GetTick>
 8001e3c:	6138      	str	r0, [r7, #16]
 8001e3e:	e008      	b.n	8001e52 <HAL_RCC_OscConfig+0x1f6>
 8001e40:	f7ff fc30 	bl	80016a4 <HAL_GetTick>
 8001e44:	4602      	mov	r2, r0
 8001e46:	693b      	ldr	r3, [r7, #16]
 8001e48:	1ad3      	subs	r3, r2, r3
 8001e4a:	2b02      	cmp	r3, #2
 8001e4c:	d901      	bls.n	8001e52 <HAL_RCC_OscConfig+0x1f6>
 8001e4e:	2303      	movs	r3, #3
 8001e50:	e180      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 8001e52:	4b1d      	ldr	r3, [pc, #116]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001e54:	681b      	ldr	r3, [r3, #0]
 8001e56:	f003 0302 	and.w	r3, r3, #2
 8001e5a:	2b00      	cmp	r3, #0
 8001e5c:	d1f0      	bne.n	8001e40 <HAL_RCC_OscConfig+0x1e4>
 8001e5e:	687b      	ldr	r3, [r7, #4]
 8001e60:	681b      	ldr	r3, [r3, #0]
 8001e62:	f003 0308 	and.w	r3, r3, #8
 8001e66:	2b00      	cmp	r3, #0
 8001e68:	d03a      	beq.n	8001ee0 <HAL_RCC_OscConfig+0x284>
 8001e6a:	687b      	ldr	r3, [r7, #4]
 8001e6c:	699b      	ldr	r3, [r3, #24]
 8001e6e:	2b00      	cmp	r3, #0
 8001e70:	d019      	beq.n	8001ea6 <HAL_RCC_OscConfig+0x24a>
 8001e72:	4b17      	ldr	r3, [pc, #92]	@ (8001ed0 <HAL_RCC_OscConfig+0x274>)
 8001e74:	2201      	movs	r2, #1
 8001e76:	601a      	str	r2, [r3, #0]
 8001e78:	f7ff fc14 	bl	80016a4 <HAL_GetTick>
 8001e7c:	6138      	str	r0, [r7, #16]
 8001e7e:	e008      	b.n	8001e92 <HAL_RCC_OscConfig+0x236>
 8001e80:	f7ff fc10 	bl	80016a4 <HAL_GetTick>
 8001e84:	4602      	mov	r2, r0
 8001e86:	693b      	ldr	r3, [r7, #16]
 8001e88:	1ad3      	subs	r3, r2, r3
 8001e8a:	2b02      	cmp	r3, #2
 8001e8c:	d901      	bls.n	8001e92 <HAL_RCC_OscConfig+0x236>
 8001e8e:	2303      	movs	r3, #3
 8001e90:	e160      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 8001e92:	4b0d      	ldr	r3, [pc, #52]	@ (8001ec8 <HAL_RCC_OscConfig+0x26c>)
 8001e94:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001e96:	f003 0302 	and.w	r3, r3, #2
 8001e9a:	2b00      	cmp	r3, #0
 8001e9c:	d0f0      	beq.n	8001e80 <HAL_RCC_OscConfig+0x224>
 8001e9e:	2001      	movs	r0, #1
 8001ea0:	f000 fa9c 	bl	80023dc <RCC_Delay>
 8001ea4:	e01c      	b.n	8001ee0 <HAL_RCC_OscConfig+0x284>
 8001ea6:	4b0a      	ldr	r3, [pc, #40]	@ (8001ed0 <HAL_RCC_OscConfig+0x274>)
 8001ea8:	2200      	movs	r2, #0
 8001eaa:	601a      	str	r2, [r3, #0]
 8001eac:	f7ff fbfa 	bl	80016a4 <HAL_GetTick>
 8001eb0:	6138      	str	r0, [r7, #16]
 8001eb2:	e00f      	b.n	8001ed4 <HAL_RCC_OscConfig+0x278>
 8001eb4:	f7ff fbf6 	bl	80016a4 <HAL_GetTick>
 8001eb8:	4602      	mov	r2, r0
 8001eba:	693b      	ldr	r3, [r7, #16]
 8001ebc:	1ad3      	subs	r3, r2, r3
 8001ebe:	2b02      	cmp	r3, #2
 8001ec0:	d908      	bls.n	8001ed4 <HAL_RCC_OscConfig+0x278>
 8001ec2:	2303      	movs	r3, #3
 8001ec4:	e146      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 8001ec6:	bf00      	nop
 8001ec8:	40021000 	.word	0x40021000
 8001ecc:	42420000 	.word	0x42420000
 8001ed0:	42420480 	.word	0x42420480
 8001ed4:	4b92      	ldr	r3, [pc, #584]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001ed6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001ed8:	f003 0302 	and.w	r3, r3, #2
 8001edc:	2b00      	cmp	r3, #0
 8001ede:	d1e9      	bne.n	8001eb4 <HAL_RCC_OscConfig+0x258>
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	681b      	ldr	r3, [r3, #0]
 8001ee4:	f003 0304 	and.w	r3, r3, #4
 8001ee8:	2b00      	cmp	r3, #0
 8001eea:	f000 80a6 	beq.w	800203a <HAL_RCC_OscConfig+0x3de>
 8001eee:	2300      	movs	r3, #0
 8001ef0:	75fb      	strb	r3, [r7, #23]
 8001ef2:	4b8b      	ldr	r3, [pc, #556]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001ef4:	69db      	ldr	r3, [r3, #28]
 8001ef6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001efa:	2b00      	cmp	r3, #0
 8001efc:	d10d      	bne.n	8001f1a <HAL_RCC_OscConfig+0x2be>
 8001efe:	4b88      	ldr	r3, [pc, #544]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001f00:	69db      	ldr	r3, [r3, #28]
 8001f02:	4a87      	ldr	r2, [pc, #540]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001f04:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001f08:	61d3      	str	r3, [r2, #28]
 8001f0a:	4b85      	ldr	r3, [pc, #532]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001f0c:	69db      	ldr	r3, [r3, #28]
 8001f0e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001f12:	60bb      	str	r3, [r7, #8]
 8001f14:	68bb      	ldr	r3, [r7, #8]
 8001f16:	2301      	movs	r3, #1
 8001f18:	75fb      	strb	r3, [r7, #23]
 8001f1a:	4b82      	ldr	r3, [pc, #520]	@ (8002124 <HAL_RCC_OscConfig+0x4c8>)
 8001f1c:	681b      	ldr	r3, [r3, #0]
 8001f1e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001f22:	2b00      	cmp	r3, #0
 8001f24:	d118      	bne.n	8001f58 <HAL_RCC_OscConfig+0x2fc>
 8001f26:	4b7f      	ldr	r3, [pc, #508]	@ (8002124 <HAL_RCC_OscConfig+0x4c8>)
 8001f28:	681b      	ldr	r3, [r3, #0]
 8001f2a:	4a7e      	ldr	r2, [pc, #504]	@ (8002124 <HAL_RCC_OscConfig+0x4c8>)
 8001f2c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001f30:	6013      	str	r3, [r2, #0]
 8001f32:	f7ff fbb7 	bl	80016a4 <HAL_GetTick>
 8001f36:	6138      	str	r0, [r7, #16]
 8001f38:	e008      	b.n	8001f4c <HAL_RCC_OscConfig+0x2f0>
 8001f3a:	f7ff fbb3 	bl	80016a4 <HAL_GetTick>
 8001f3e:	4602      	mov	r2, r0
 8001f40:	693b      	ldr	r3, [r7, #16]
 8001f42:	1ad3      	subs	r3, r2, r3
 8001f44:	2b64      	cmp	r3, #100	@ 0x64
 8001f46:	d901      	bls.n	8001f4c <HAL_RCC_OscConfig+0x2f0>
 8001f48:	2303      	movs	r3, #3
 8001f4a:	e103      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 8001f4c:	4b75      	ldr	r3, [pc, #468]	@ (8002124 <HAL_RCC_OscConfig+0x4c8>)
 8001f4e:	681b      	ldr	r3, [r3, #0]
 8001f50:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001f54:	2b00      	cmp	r3, #0
 8001f56:	d0f0      	beq.n	8001f3a <HAL_RCC_OscConfig+0x2de>
 8001f58:	687b      	ldr	r3, [r7, #4]
 8001f5a:	68db      	ldr	r3, [r3, #12]
 8001f5c:	2b01      	cmp	r3, #1
 8001f5e:	d106      	bne.n	8001f6e <HAL_RCC_OscConfig+0x312>
 8001f60:	4b6f      	ldr	r3, [pc, #444]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001f62:	6a1b      	ldr	r3, [r3, #32]
 8001f64:	4a6e      	ldr	r2, [pc, #440]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001f66:	f043 0301 	orr.w	r3, r3, #1
 8001f6a:	6213      	str	r3, [r2, #32]
 8001f6c:	e02d      	b.n	8001fca <HAL_RCC_OscConfig+0x36e>
 8001f6e:	687b      	ldr	r3, [r7, #4]
 8001f70:	68db      	ldr	r3, [r3, #12]
 8001f72:	2b00      	cmp	r3, #0
 8001f74:	d10c      	bne.n	8001f90 <HAL_RCC_OscConfig+0x334>
 8001f76:	4b6a      	ldr	r3, [pc, #424]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001f78:	6a1b      	ldr	r3, [r3, #32]
 8001f7a:	4a69      	ldr	r2, [pc, #420]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001f7c:	f023 0301 	bic.w	r3, r3, #1
 8001f80:	6213      	str	r3, [r2, #32]
 8001f82:	4b67      	ldr	r3, [pc, #412]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001f84:	6a1b      	ldr	r3, [r3, #32]
 8001f86:	4a66      	ldr	r2, [pc, #408]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001f88:	f023 0304 	bic.w	r3, r3, #4
 8001f8c:	6213      	str	r3, [r2, #32]
 8001f8e:	e01c      	b.n	8001fca <HAL_RCC_OscConfig+0x36e>
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	68db      	ldr	r3, [r3, #12]
 8001f94:	2b05      	cmp	r3, #5
 8001f96:	d10c      	bne.n	8001fb2 <HAL_RCC_OscConfig+0x356>
 8001f98:	4b61      	ldr	r3, [pc, #388]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001f9a:	6a1b      	ldr	r3, [r3, #32]
 8001f9c:	4a60      	ldr	r2, [pc, #384]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001f9e:	f043 0304 	orr.w	r3, r3, #4
 8001fa2:	6213      	str	r3, [r2, #32]
 8001fa4:	4b5e      	ldr	r3, [pc, #376]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001fa6:	6a1b      	ldr	r3, [r3, #32]
 8001fa8:	4a5d      	ldr	r2, [pc, #372]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001faa:	f043 0301 	orr.w	r3, r3, #1
 8001fae:	6213      	str	r3, [r2, #32]
 8001fb0:	e00b      	b.n	8001fca <HAL_RCC_OscConfig+0x36e>
 8001fb2:	4b5b      	ldr	r3, [pc, #364]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001fb4:	6a1b      	ldr	r3, [r3, #32]
 8001fb6:	4a5a      	ldr	r2, [pc, #360]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001fb8:	f023 0301 	bic.w	r3, r3, #1
 8001fbc:	6213      	str	r3, [r2, #32]
 8001fbe:	4b58      	ldr	r3, [pc, #352]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001fc0:	6a1b      	ldr	r3, [r3, #32]
 8001fc2:	4a57      	ldr	r2, [pc, #348]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001fc4:	f023 0304 	bic.w	r3, r3, #4
 8001fc8:	6213      	str	r3, [r2, #32]
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	68db      	ldr	r3, [r3, #12]
 8001fce:	2b00      	cmp	r3, #0
 8001fd0:	d015      	beq.n	8001ffe <HAL_RCC_OscConfig+0x3a2>
 8001fd2:	f7ff fb67 	bl	80016a4 <HAL_GetTick>
 8001fd6:	6138      	str	r0, [r7, #16]
 8001fd8:	e00a      	b.n	8001ff0 <HAL_RCC_OscConfig+0x394>
 8001fda:	f7ff fb63 	bl	80016a4 <HAL_GetTick>
 8001fde:	4602      	mov	r2, r0
 8001fe0:	693b      	ldr	r3, [r7, #16]
 8001fe2:	1ad3      	subs	r3, r2, r3
 8001fe4:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001fe8:	4293      	cmp	r3, r2
 8001fea:	d901      	bls.n	8001ff0 <HAL_RCC_OscConfig+0x394>
 8001fec:	2303      	movs	r3, #3
 8001fee:	e0b1      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 8001ff0:	4b4b      	ldr	r3, [pc, #300]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8001ff2:	6a1b      	ldr	r3, [r3, #32]
 8001ff4:	f003 0302 	and.w	r3, r3, #2
 8001ff8:	2b00      	cmp	r3, #0
 8001ffa:	d0ee      	beq.n	8001fda <HAL_RCC_OscConfig+0x37e>
 8001ffc:	e014      	b.n	8002028 <HAL_RCC_OscConfig+0x3cc>
 8001ffe:	f7ff fb51 	bl	80016a4 <HAL_GetTick>
 8002002:	6138      	str	r0, [r7, #16]
 8002004:	e00a      	b.n	800201c <HAL_RCC_OscConfig+0x3c0>
 8002006:	f7ff fb4d 	bl	80016a4 <HAL_GetTick>
 800200a:	4602      	mov	r2, r0
 800200c:	693b      	ldr	r3, [r7, #16]
 800200e:	1ad3      	subs	r3, r2, r3
 8002010:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002014:	4293      	cmp	r3, r2
 8002016:	d901      	bls.n	800201c <HAL_RCC_OscConfig+0x3c0>
 8002018:	2303      	movs	r3, #3
 800201a:	e09b      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 800201c:	4b40      	ldr	r3, [pc, #256]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 800201e:	6a1b      	ldr	r3, [r3, #32]
 8002020:	f003 0302 	and.w	r3, r3, #2
 8002024:	2b00      	cmp	r3, #0
 8002026:	d1ee      	bne.n	8002006 <HAL_RCC_OscConfig+0x3aa>
 8002028:	7dfb      	ldrb	r3, [r7, #23]
 800202a:	2b01      	cmp	r3, #1
 800202c:	d105      	bne.n	800203a <HAL_RCC_OscConfig+0x3de>
 800202e:	4b3c      	ldr	r3, [pc, #240]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8002030:	69db      	ldr	r3, [r3, #28]
 8002032:	4a3b      	ldr	r2, [pc, #236]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8002034:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002038:	61d3      	str	r3, [r2, #28]
 800203a:	687b      	ldr	r3, [r7, #4]
 800203c:	69db      	ldr	r3, [r3, #28]
 800203e:	2b00      	cmp	r3, #0
 8002040:	f000 8087 	beq.w	8002152 <HAL_RCC_OscConfig+0x4f6>
 8002044:	4b36      	ldr	r3, [pc, #216]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8002046:	685b      	ldr	r3, [r3, #4]
 8002048:	f003 030c 	and.w	r3, r3, #12
 800204c:	2b08      	cmp	r3, #8
 800204e:	d061      	beq.n	8002114 <HAL_RCC_OscConfig+0x4b8>
 8002050:	687b      	ldr	r3, [r7, #4]
 8002052:	69db      	ldr	r3, [r3, #28]
 8002054:	2b02      	cmp	r3, #2
 8002056:	d146      	bne.n	80020e6 <HAL_RCC_OscConfig+0x48a>
 8002058:	4b33      	ldr	r3, [pc, #204]	@ (8002128 <HAL_RCC_OscConfig+0x4cc>)
 800205a:	2200      	movs	r2, #0
 800205c:	601a      	str	r2, [r3, #0]
 800205e:	f7ff fb21 	bl	80016a4 <HAL_GetTick>
 8002062:	6138      	str	r0, [r7, #16]
 8002064:	e008      	b.n	8002078 <HAL_RCC_OscConfig+0x41c>
 8002066:	f7ff fb1d 	bl	80016a4 <HAL_GetTick>
 800206a:	4602      	mov	r2, r0
 800206c:	693b      	ldr	r3, [r7, #16]
 800206e:	1ad3      	subs	r3, r2, r3
 8002070:	2b02      	cmp	r3, #2
 8002072:	d901      	bls.n	8002078 <HAL_RCC_OscConfig+0x41c>
 8002074:	2303      	movs	r3, #3
 8002076:	e06d      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 8002078:	4b29      	ldr	r3, [pc, #164]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 800207a:	681b      	ldr	r3, [r3, #0]
 800207c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002080:	2b00      	cmp	r3, #0
 8002082:	d1f0      	bne.n	8002066 <HAL_RCC_OscConfig+0x40a>
 8002084:	687b      	ldr	r3, [r7, #4]
 8002086:	6a1b      	ldr	r3, [r3, #32]
 8002088:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800208c:	d108      	bne.n	80020a0 <HAL_RCC_OscConfig+0x444>
 800208e:	4b24      	ldr	r3, [pc, #144]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8002090:	685b      	ldr	r3, [r3, #4]
 8002092:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8002096:	687b      	ldr	r3, [r7, #4]
 8002098:	689b      	ldr	r3, [r3, #8]
 800209a:	4921      	ldr	r1, [pc, #132]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 800209c:	4313      	orrs	r3, r2
 800209e:	604b      	str	r3, [r1, #4]
 80020a0:	4b1f      	ldr	r3, [pc, #124]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 80020a2:	685b      	ldr	r3, [r3, #4]
 80020a4:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	6a19      	ldr	r1, [r3, #32]
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80020b0:	430b      	orrs	r3, r1
 80020b2:	491b      	ldr	r1, [pc, #108]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 80020b4:	4313      	orrs	r3, r2
 80020b6:	604b      	str	r3, [r1, #4]
 80020b8:	4b1b      	ldr	r3, [pc, #108]	@ (8002128 <HAL_RCC_OscConfig+0x4cc>)
 80020ba:	2201      	movs	r2, #1
 80020bc:	601a      	str	r2, [r3, #0]
 80020be:	f7ff faf1 	bl	80016a4 <HAL_GetTick>
 80020c2:	6138      	str	r0, [r7, #16]
 80020c4:	e008      	b.n	80020d8 <HAL_RCC_OscConfig+0x47c>
 80020c6:	f7ff faed 	bl	80016a4 <HAL_GetTick>
 80020ca:	4602      	mov	r2, r0
 80020cc:	693b      	ldr	r3, [r7, #16]
 80020ce:	1ad3      	subs	r3, r2, r3
 80020d0:	2b02      	cmp	r3, #2
 80020d2:	d901      	bls.n	80020d8 <HAL_RCC_OscConfig+0x47c>
 80020d4:	2303      	movs	r3, #3
 80020d6:	e03d      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 80020d8:	4b11      	ldr	r3, [pc, #68]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 80020da:	681b      	ldr	r3, [r3, #0]
 80020dc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80020e0:	2b00      	cmp	r3, #0
 80020e2:	d0f0      	beq.n	80020c6 <HAL_RCC_OscConfig+0x46a>
 80020e4:	e035      	b.n	8002152 <HAL_RCC_OscConfig+0x4f6>
 80020e6:	4b10      	ldr	r3, [pc, #64]	@ (8002128 <HAL_RCC_OscConfig+0x4cc>)
 80020e8:	2200      	movs	r2, #0
 80020ea:	601a      	str	r2, [r3, #0]
 80020ec:	f7ff fada 	bl	80016a4 <HAL_GetTick>
 80020f0:	6138      	str	r0, [r7, #16]
 80020f2:	e008      	b.n	8002106 <HAL_RCC_OscConfig+0x4aa>
 80020f4:	f7ff fad6 	bl	80016a4 <HAL_GetTick>
 80020f8:	4602      	mov	r2, r0
 80020fa:	693b      	ldr	r3, [r7, #16]
 80020fc:	1ad3      	subs	r3, r2, r3
 80020fe:	2b02      	cmp	r3, #2
 8002100:	d901      	bls.n	8002106 <HAL_RCC_OscConfig+0x4aa>
 8002102:	2303      	movs	r3, #3
 8002104:	e026      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 8002106:	4b06      	ldr	r3, [pc, #24]	@ (8002120 <HAL_RCC_OscConfig+0x4c4>)
 8002108:	681b      	ldr	r3, [r3, #0]
 800210a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800210e:	2b00      	cmp	r3, #0
 8002110:	d1f0      	bne.n	80020f4 <HAL_RCC_OscConfig+0x498>
 8002112:	e01e      	b.n	8002152 <HAL_RCC_OscConfig+0x4f6>
 8002114:	687b      	ldr	r3, [r7, #4]
 8002116:	69db      	ldr	r3, [r3, #28]
 8002118:	2b01      	cmp	r3, #1
 800211a:	d107      	bne.n	800212c <HAL_RCC_OscConfig+0x4d0>
 800211c:	2301      	movs	r3, #1
 800211e:	e019      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 8002120:	40021000 	.word	0x40021000
 8002124:	40007000 	.word	0x40007000
 8002128:	42420060 	.word	0x42420060
 800212c:	4b0b      	ldr	r3, [pc, #44]	@ (800215c <HAL_RCC_OscConfig+0x500>)
 800212e:	685b      	ldr	r3, [r3, #4]
 8002130:	60fb      	str	r3, [r7, #12]
 8002132:	68fb      	ldr	r3, [r7, #12]
 8002134:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8002138:	687b      	ldr	r3, [r7, #4]
 800213a:	6a1b      	ldr	r3, [r3, #32]
 800213c:	429a      	cmp	r2, r3
 800213e:	d106      	bne.n	800214e <HAL_RCC_OscConfig+0x4f2>
 8002140:	68fb      	ldr	r3, [r7, #12]
 8002142:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8002146:	687b      	ldr	r3, [r7, #4]
 8002148:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800214a:	429a      	cmp	r2, r3
 800214c:	d001      	beq.n	8002152 <HAL_RCC_OscConfig+0x4f6>
 800214e:	2301      	movs	r3, #1
 8002150:	e000      	b.n	8002154 <HAL_RCC_OscConfig+0x4f8>
 8002152:	2300      	movs	r3, #0
 8002154:	4618      	mov	r0, r3
 8002156:	3718      	adds	r7, #24
 8002158:	46bd      	mov	sp, r7
 800215a:	bd80      	pop	{r7, pc}
 800215c:	40021000 	.word	0x40021000

08002160 <HAL_RCC_ClockConfig>:
 8002160:	b580      	push	{r7, lr}
 8002162:	b084      	sub	sp, #16
 8002164:	af00      	add	r7, sp, #0
 8002166:	6078      	str	r0, [r7, #4]
 8002168:	6039      	str	r1, [r7, #0]
 800216a:	687b      	ldr	r3, [r7, #4]
 800216c:	2b00      	cmp	r3, #0
 800216e:	d101      	bne.n	8002174 <HAL_RCC_ClockConfig+0x14>
 8002170:	2301      	movs	r3, #1
 8002172:	e0d0      	b.n	8002316 <HAL_RCC_ClockConfig+0x1b6>
 8002174:	4b6a      	ldr	r3, [pc, #424]	@ (8002320 <HAL_RCC_ClockConfig+0x1c0>)
 8002176:	681b      	ldr	r3, [r3, #0]
 8002178:	f003 0307 	and.w	r3, r3, #7
 800217c:	683a      	ldr	r2, [r7, #0]
 800217e:	429a      	cmp	r2, r3
 8002180:	d910      	bls.n	80021a4 <HAL_RCC_ClockConfig+0x44>
 8002182:	4b67      	ldr	r3, [pc, #412]	@ (8002320 <HAL_RCC_ClockConfig+0x1c0>)
 8002184:	681b      	ldr	r3, [r3, #0]
 8002186:	f023 0207 	bic.w	r2, r3, #7
 800218a:	4965      	ldr	r1, [pc, #404]	@ (8002320 <HAL_RCC_ClockConfig+0x1c0>)
 800218c:	683b      	ldr	r3, [r7, #0]
 800218e:	4313      	orrs	r3, r2
 8002190:	600b      	str	r3, [r1, #0]
 8002192:	4b63      	ldr	r3, [pc, #396]	@ (8002320 <HAL_RCC_ClockConfig+0x1c0>)
 8002194:	681b      	ldr	r3, [r3, #0]
 8002196:	f003 0307 	and.w	r3, r3, #7
 800219a:	683a      	ldr	r2, [r7, #0]
 800219c:	429a      	cmp	r2, r3
 800219e:	d001      	beq.n	80021a4 <HAL_RCC_ClockConfig+0x44>
 80021a0:	2301      	movs	r3, #1
 80021a2:	e0b8      	b.n	8002316 <HAL_RCC_ClockConfig+0x1b6>
 80021a4:	687b      	ldr	r3, [r7, #4]
 80021a6:	681b      	ldr	r3, [r3, #0]
 80021a8:	f003 0302 	and.w	r3, r3, #2
 80021ac:	2b00      	cmp	r3, #0
 80021ae:	d020      	beq.n	80021f2 <HAL_RCC_ClockConfig+0x92>
 80021b0:	687b      	ldr	r3, [r7, #4]
 80021b2:	681b      	ldr	r3, [r3, #0]
 80021b4:	f003 0304 	and.w	r3, r3, #4
 80021b8:	2b00      	cmp	r3, #0
 80021ba:	d005      	beq.n	80021c8 <HAL_RCC_ClockConfig+0x68>
 80021bc:	4b59      	ldr	r3, [pc, #356]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 80021be:	685b      	ldr	r3, [r3, #4]
 80021c0:	4a58      	ldr	r2, [pc, #352]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 80021c2:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80021c6:	6053      	str	r3, [r2, #4]
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	f003 0308 	and.w	r3, r3, #8
 80021d0:	2b00      	cmp	r3, #0
 80021d2:	d005      	beq.n	80021e0 <HAL_RCC_ClockConfig+0x80>
 80021d4:	4b53      	ldr	r3, [pc, #332]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 80021d6:	685b      	ldr	r3, [r3, #4]
 80021d8:	4a52      	ldr	r2, [pc, #328]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 80021da:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 80021de:	6053      	str	r3, [r2, #4]
 80021e0:	4b50      	ldr	r3, [pc, #320]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 80021e2:	685b      	ldr	r3, [r3, #4]
 80021e4:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	689b      	ldr	r3, [r3, #8]
 80021ec:	494d      	ldr	r1, [pc, #308]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 80021ee:	4313      	orrs	r3, r2
 80021f0:	604b      	str	r3, [r1, #4]
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	681b      	ldr	r3, [r3, #0]
 80021f6:	f003 0301 	and.w	r3, r3, #1
 80021fa:	2b00      	cmp	r3, #0
 80021fc:	d040      	beq.n	8002280 <HAL_RCC_ClockConfig+0x120>
 80021fe:	687b      	ldr	r3, [r7, #4]
 8002200:	685b      	ldr	r3, [r3, #4]
 8002202:	2b01      	cmp	r3, #1
 8002204:	d107      	bne.n	8002216 <HAL_RCC_ClockConfig+0xb6>
 8002206:	4b47      	ldr	r3, [pc, #284]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 8002208:	681b      	ldr	r3, [r3, #0]
 800220a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800220e:	2b00      	cmp	r3, #0
 8002210:	d115      	bne.n	800223e <HAL_RCC_ClockConfig+0xde>
 8002212:	2301      	movs	r3, #1
 8002214:	e07f      	b.n	8002316 <HAL_RCC_ClockConfig+0x1b6>
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	685b      	ldr	r3, [r3, #4]
 800221a:	2b02      	cmp	r3, #2
 800221c:	d107      	bne.n	800222e <HAL_RCC_ClockConfig+0xce>
 800221e:	4b41      	ldr	r3, [pc, #260]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 8002220:	681b      	ldr	r3, [r3, #0]
 8002222:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002226:	2b00      	cmp	r3, #0
 8002228:	d109      	bne.n	800223e <HAL_RCC_ClockConfig+0xde>
 800222a:	2301      	movs	r3, #1
 800222c:	e073      	b.n	8002316 <HAL_RCC_ClockConfig+0x1b6>
 800222e:	4b3d      	ldr	r3, [pc, #244]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 8002230:	681b      	ldr	r3, [r3, #0]
 8002232:	f003 0302 	and.w	r3, r3, #2
 8002236:	2b00      	cmp	r3, #0
 8002238:	d101      	bne.n	800223e <HAL_RCC_ClockConfig+0xde>
 800223a:	2301      	movs	r3, #1
 800223c:	e06b      	b.n	8002316 <HAL_RCC_ClockConfig+0x1b6>
 800223e:	4b39      	ldr	r3, [pc, #228]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 8002240:	685b      	ldr	r3, [r3, #4]
 8002242:	f023 0203 	bic.w	r2, r3, #3
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	685b      	ldr	r3, [r3, #4]
 800224a:	4936      	ldr	r1, [pc, #216]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 800224c:	4313      	orrs	r3, r2
 800224e:	604b      	str	r3, [r1, #4]
 8002250:	f7ff fa28 	bl	80016a4 <HAL_GetTick>
 8002254:	60f8      	str	r0, [r7, #12]
 8002256:	e00a      	b.n	800226e <HAL_RCC_ClockConfig+0x10e>
 8002258:	f7ff fa24 	bl	80016a4 <HAL_GetTick>
 800225c:	4602      	mov	r2, r0
 800225e:	68fb      	ldr	r3, [r7, #12]
 8002260:	1ad3      	subs	r3, r2, r3
 8002262:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002266:	4293      	cmp	r3, r2
 8002268:	d901      	bls.n	800226e <HAL_RCC_ClockConfig+0x10e>
 800226a:	2303      	movs	r3, #3
 800226c:	e053      	b.n	8002316 <HAL_RCC_ClockConfig+0x1b6>
 800226e:	4b2d      	ldr	r3, [pc, #180]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 8002270:	685b      	ldr	r3, [r3, #4]
 8002272:	f003 020c 	and.w	r2, r3, #12
 8002276:	687b      	ldr	r3, [r7, #4]
 8002278:	685b      	ldr	r3, [r3, #4]
 800227a:	009b      	lsls	r3, r3, #2
 800227c:	429a      	cmp	r2, r3
 800227e:	d1eb      	bne.n	8002258 <HAL_RCC_ClockConfig+0xf8>
 8002280:	4b27      	ldr	r3, [pc, #156]	@ (8002320 <HAL_RCC_ClockConfig+0x1c0>)
 8002282:	681b      	ldr	r3, [r3, #0]
 8002284:	f003 0307 	and.w	r3, r3, #7
 8002288:	683a      	ldr	r2, [r7, #0]
 800228a:	429a      	cmp	r2, r3
 800228c:	d210      	bcs.n	80022b0 <HAL_RCC_ClockConfig+0x150>
 800228e:	4b24      	ldr	r3, [pc, #144]	@ (8002320 <HAL_RCC_ClockConfig+0x1c0>)
 8002290:	681b      	ldr	r3, [r3, #0]
 8002292:	f023 0207 	bic.w	r2, r3, #7
 8002296:	4922      	ldr	r1, [pc, #136]	@ (8002320 <HAL_RCC_ClockConfig+0x1c0>)
 8002298:	683b      	ldr	r3, [r7, #0]
 800229a:	4313      	orrs	r3, r2
 800229c:	600b      	str	r3, [r1, #0]
 800229e:	4b20      	ldr	r3, [pc, #128]	@ (8002320 <HAL_RCC_ClockConfig+0x1c0>)
 80022a0:	681b      	ldr	r3, [r3, #0]
 80022a2:	f003 0307 	and.w	r3, r3, #7
 80022a6:	683a      	ldr	r2, [r7, #0]
 80022a8:	429a      	cmp	r2, r3
 80022aa:	d001      	beq.n	80022b0 <HAL_RCC_ClockConfig+0x150>
 80022ac:	2301      	movs	r3, #1
 80022ae:	e032      	b.n	8002316 <HAL_RCC_ClockConfig+0x1b6>
 80022b0:	687b      	ldr	r3, [r7, #4]
 80022b2:	681b      	ldr	r3, [r3, #0]
 80022b4:	f003 0304 	and.w	r3, r3, #4
 80022b8:	2b00      	cmp	r3, #0
 80022ba:	d008      	beq.n	80022ce <HAL_RCC_ClockConfig+0x16e>
 80022bc:	4b19      	ldr	r3, [pc, #100]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 80022be:	685b      	ldr	r3, [r3, #4]
 80022c0:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	68db      	ldr	r3, [r3, #12]
 80022c8:	4916      	ldr	r1, [pc, #88]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 80022ca:	4313      	orrs	r3, r2
 80022cc:	604b      	str	r3, [r1, #4]
 80022ce:	687b      	ldr	r3, [r7, #4]
 80022d0:	681b      	ldr	r3, [r3, #0]
 80022d2:	f003 0308 	and.w	r3, r3, #8
 80022d6:	2b00      	cmp	r3, #0
 80022d8:	d009      	beq.n	80022ee <HAL_RCC_ClockConfig+0x18e>
 80022da:	4b12      	ldr	r3, [pc, #72]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 80022dc:	685b      	ldr	r3, [r3, #4]
 80022de:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 80022e2:	687b      	ldr	r3, [r7, #4]
 80022e4:	691b      	ldr	r3, [r3, #16]
 80022e6:	00db      	lsls	r3, r3, #3
 80022e8:	490e      	ldr	r1, [pc, #56]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 80022ea:	4313      	orrs	r3, r2
 80022ec:	604b      	str	r3, [r1, #4]
 80022ee:	f000 f821 	bl	8002334 <HAL_RCC_GetSysClockFreq>
 80022f2:	4602      	mov	r2, r0
 80022f4:	4b0b      	ldr	r3, [pc, #44]	@ (8002324 <HAL_RCC_ClockConfig+0x1c4>)
 80022f6:	685b      	ldr	r3, [r3, #4]
 80022f8:	091b      	lsrs	r3, r3, #4
 80022fa:	f003 030f 	and.w	r3, r3, #15
 80022fe:	490a      	ldr	r1, [pc, #40]	@ (8002328 <HAL_RCC_ClockConfig+0x1c8>)
 8002300:	5ccb      	ldrb	r3, [r1, r3]
 8002302:	fa22 f303 	lsr.w	r3, r2, r3
 8002306:	4a09      	ldr	r2, [pc, #36]	@ (800232c <HAL_RCC_ClockConfig+0x1cc>)
 8002308:	6013      	str	r3, [r2, #0]
 800230a:	4b09      	ldr	r3, [pc, #36]	@ (8002330 <HAL_RCC_ClockConfig+0x1d0>)
 800230c:	681b      	ldr	r3, [r3, #0]
 800230e:	4618      	mov	r0, r3
 8002310:	f7ff f986 	bl	8001620 <HAL_InitTick>
 8002314:	2300      	movs	r3, #0
 8002316:	4618      	mov	r0, r3
 8002318:	3710      	adds	r7, #16
 800231a:	46bd      	mov	sp, r7
 800231c:	bd80      	pop	{r7, pc}
 800231e:	bf00      	nop
 8002320:	40022000 	.word	0x40022000
 8002324:	40021000 	.word	0x40021000
 8002328:	08002c40 	.word	0x08002c40
 800232c:	2000004c 	.word	0x2000004c
 8002330:	20000050 	.word	0x20000050

08002334 <HAL_RCC_GetSysClockFreq>:
 8002334:	b480      	push	{r7}
 8002336:	b087      	sub	sp, #28
 8002338:	af00      	add	r7, sp, #0
 800233a:	2300      	movs	r3, #0
 800233c:	60fb      	str	r3, [r7, #12]
 800233e:	2300      	movs	r3, #0
 8002340:	60bb      	str	r3, [r7, #8]
 8002342:	2300      	movs	r3, #0
 8002344:	617b      	str	r3, [r7, #20]
 8002346:	2300      	movs	r3, #0
 8002348:	607b      	str	r3, [r7, #4]
 800234a:	2300      	movs	r3, #0
 800234c:	613b      	str	r3, [r7, #16]
 800234e:	4b1e      	ldr	r3, [pc, #120]	@ (80023c8 <HAL_RCC_GetSysClockFreq+0x94>)
 8002350:	685b      	ldr	r3, [r3, #4]
 8002352:	60fb      	str	r3, [r7, #12]
 8002354:	68fb      	ldr	r3, [r7, #12]
 8002356:	f003 030c 	and.w	r3, r3, #12
 800235a:	2b04      	cmp	r3, #4
 800235c:	d002      	beq.n	8002364 <HAL_RCC_GetSysClockFreq+0x30>
 800235e:	2b08      	cmp	r3, #8
 8002360:	d003      	beq.n	800236a <HAL_RCC_GetSysClockFreq+0x36>
 8002362:	e027      	b.n	80023b4 <HAL_RCC_GetSysClockFreq+0x80>
 8002364:	4b19      	ldr	r3, [pc, #100]	@ (80023cc <HAL_RCC_GetSysClockFreq+0x98>)
 8002366:	613b      	str	r3, [r7, #16]
 8002368:	e027      	b.n	80023ba <HAL_RCC_GetSysClockFreq+0x86>
 800236a:	68fb      	ldr	r3, [r7, #12]
 800236c:	0c9b      	lsrs	r3, r3, #18
 800236e:	f003 030f 	and.w	r3, r3, #15
 8002372:	4a17      	ldr	r2, [pc, #92]	@ (80023d0 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002374:	5cd3      	ldrb	r3, [r2, r3]
 8002376:	607b      	str	r3, [r7, #4]
 8002378:	68fb      	ldr	r3, [r7, #12]
 800237a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800237e:	2b00      	cmp	r3, #0
 8002380:	d010      	beq.n	80023a4 <HAL_RCC_GetSysClockFreq+0x70>
 8002382:	4b11      	ldr	r3, [pc, #68]	@ (80023c8 <HAL_RCC_GetSysClockFreq+0x94>)
 8002384:	685b      	ldr	r3, [r3, #4]
 8002386:	0c5b      	lsrs	r3, r3, #17
 8002388:	f003 0301 	and.w	r3, r3, #1
 800238c:	4a11      	ldr	r2, [pc, #68]	@ (80023d4 <HAL_RCC_GetSysClockFreq+0xa0>)
 800238e:	5cd3      	ldrb	r3, [r2, r3]
 8002390:	60bb      	str	r3, [r7, #8]
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	4a0d      	ldr	r2, [pc, #52]	@ (80023cc <HAL_RCC_GetSysClockFreq+0x98>)
 8002396:	fb03 f202 	mul.w	r2, r3, r2
 800239a:	68bb      	ldr	r3, [r7, #8]
 800239c:	fbb2 f3f3 	udiv	r3, r2, r3
 80023a0:	617b      	str	r3, [r7, #20]
 80023a2:	e004      	b.n	80023ae <HAL_RCC_GetSysClockFreq+0x7a>
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	4a0c      	ldr	r2, [pc, #48]	@ (80023d8 <HAL_RCC_GetSysClockFreq+0xa4>)
 80023a8:	fb02 f303 	mul.w	r3, r2, r3
 80023ac:	617b      	str	r3, [r7, #20]
 80023ae:	697b      	ldr	r3, [r7, #20]
 80023b0:	613b      	str	r3, [r7, #16]
 80023b2:	e002      	b.n	80023ba <HAL_RCC_GetSysClockFreq+0x86>
 80023b4:	4b05      	ldr	r3, [pc, #20]	@ (80023cc <HAL_RCC_GetSysClockFreq+0x98>)
 80023b6:	613b      	str	r3, [r7, #16]
 80023b8:	bf00      	nop
 80023ba:	693b      	ldr	r3, [r7, #16]
 80023bc:	4618      	mov	r0, r3
 80023be:	371c      	adds	r7, #28
 80023c0:	46bd      	mov	sp, r7
 80023c2:	bc80      	pop	{r7}
 80023c4:	4770      	bx	lr
 80023c6:	bf00      	nop
 80023c8:	40021000 	.word	0x40021000
 80023cc:	007a1200 	.word	0x007a1200
 80023d0:	08002c50 	.word	0x08002c50
 80023d4:	08002c60 	.word	0x08002c60
 80023d8:	003d0900 	.word	0x003d0900

080023dc <RCC_Delay>:
 80023dc:	b480      	push	{r7}
 80023de:	b085      	sub	sp, #20
 80023e0:	af00      	add	r7, sp, #0
 80023e2:	6078      	str	r0, [r7, #4]
 80023e4:	4b0a      	ldr	r3, [pc, #40]	@ (8002410 <RCC_Delay+0x34>)
 80023e6:	681b      	ldr	r3, [r3, #0]
 80023e8:	4a0a      	ldr	r2, [pc, #40]	@ (8002414 <RCC_Delay+0x38>)
 80023ea:	fba2 2303 	umull	r2, r3, r2, r3
 80023ee:	0a5b      	lsrs	r3, r3, #9
 80023f0:	687a      	ldr	r2, [r7, #4]
 80023f2:	fb02 f303 	mul.w	r3, r2, r3
 80023f6:	60fb      	str	r3, [r7, #12]
 80023f8:	bf00      	nop
 80023fa:	68fb      	ldr	r3, [r7, #12]
 80023fc:	1e5a      	subs	r2, r3, #1
 80023fe:	60fa      	str	r2, [r7, #12]
 8002400:	2b00      	cmp	r3, #0
 8002402:	d1f9      	bne.n	80023f8 <RCC_Delay+0x1c>
 8002404:	bf00      	nop
 8002406:	bf00      	nop
 8002408:	3714      	adds	r7, #20
 800240a:	46bd      	mov	sp, r7
 800240c:	bc80      	pop	{r7}
 800240e:	4770      	bx	lr
 8002410:	2000004c 	.word	0x2000004c
 8002414:	10624dd3 	.word	0x10624dd3

08002418 <HAL_TIM_Base_Init>:
 8002418:	b580      	push	{r7, lr}
 800241a:	b082      	sub	sp, #8
 800241c:	af00      	add	r7, sp, #0
 800241e:	6078      	str	r0, [r7, #4]
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	2b00      	cmp	r3, #0
 8002424:	d101      	bne.n	800242a <HAL_TIM_Base_Init+0x12>
 8002426:	2301      	movs	r3, #1
 8002428:	e041      	b.n	80024ae <HAL_TIM_Base_Init+0x96>
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002430:	b2db      	uxtb	r3, r3
 8002432:	2b00      	cmp	r3, #0
 8002434:	d106      	bne.n	8002444 <HAL_TIM_Base_Init+0x2c>
 8002436:	687b      	ldr	r3, [r7, #4]
 8002438:	2200      	movs	r2, #0
 800243a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800243e:	6878      	ldr	r0, [r7, #4]
 8002440:	f7ff f852 	bl	80014e8 <HAL_TIM_Base_MspInit>
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	2202      	movs	r2, #2
 8002448:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800244c:	687b      	ldr	r3, [r7, #4]
 800244e:	681a      	ldr	r2, [r3, #0]
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	3304      	adds	r3, #4
 8002454:	4619      	mov	r1, r3
 8002456:	4610      	mov	r0, r2
 8002458:	f000 fa56 	bl	8002908 <TIM_Base_SetConfig>
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	2201      	movs	r2, #1
 8002460:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	2201      	movs	r2, #1
 8002468:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	2201      	movs	r2, #1
 8002470:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	2201      	movs	r2, #1
 8002478:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800247c:	687b      	ldr	r3, [r7, #4]
 800247e:	2201      	movs	r2, #1
 8002480:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002484:	687b      	ldr	r3, [r7, #4]
 8002486:	2201      	movs	r2, #1
 8002488:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	2201      	movs	r2, #1
 8002490:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8002494:	687b      	ldr	r3, [r7, #4]
 8002496:	2201      	movs	r2, #1
 8002498:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	2201      	movs	r2, #1
 80024a0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	2201      	movs	r2, #1
 80024a8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80024ac:	2300      	movs	r3, #0
 80024ae:	4618      	mov	r0, r3
 80024b0:	3708      	adds	r7, #8
 80024b2:	46bd      	mov	sp, r7
 80024b4:	bd80      	pop	{r7, pc}
	...

080024b8 <HAL_TIM_Base_Start_IT>:
 80024b8:	b480      	push	{r7}
 80024ba:	b085      	sub	sp, #20
 80024bc:	af00      	add	r7, sp, #0
 80024be:	6078      	str	r0, [r7, #4]
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80024c6:	b2db      	uxtb	r3, r3
 80024c8:	2b01      	cmp	r3, #1
 80024ca:	d001      	beq.n	80024d0 <HAL_TIM_Base_Start_IT+0x18>
 80024cc:	2301      	movs	r3, #1
 80024ce:	e035      	b.n	800253c <HAL_TIM_Base_Start_IT+0x84>
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	2202      	movs	r2, #2
 80024d4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80024d8:	687b      	ldr	r3, [r7, #4]
 80024da:	681b      	ldr	r3, [r3, #0]
 80024dc:	68da      	ldr	r2, [r3, #12]
 80024de:	687b      	ldr	r3, [r7, #4]
 80024e0:	681b      	ldr	r3, [r3, #0]
 80024e2:	f042 0201 	orr.w	r2, r2, #1
 80024e6:	60da      	str	r2, [r3, #12]
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	681b      	ldr	r3, [r3, #0]
 80024ec:	4a16      	ldr	r2, [pc, #88]	@ (8002548 <HAL_TIM_Base_Start_IT+0x90>)
 80024ee:	4293      	cmp	r3, r2
 80024f0:	d009      	beq.n	8002506 <HAL_TIM_Base_Start_IT+0x4e>
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	681b      	ldr	r3, [r3, #0]
 80024f6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80024fa:	d004      	beq.n	8002506 <HAL_TIM_Base_Start_IT+0x4e>
 80024fc:	687b      	ldr	r3, [r7, #4]
 80024fe:	681b      	ldr	r3, [r3, #0]
 8002500:	4a12      	ldr	r2, [pc, #72]	@ (800254c <HAL_TIM_Base_Start_IT+0x94>)
 8002502:	4293      	cmp	r3, r2
 8002504:	d111      	bne.n	800252a <HAL_TIM_Base_Start_IT+0x72>
 8002506:	687b      	ldr	r3, [r7, #4]
 8002508:	681b      	ldr	r3, [r3, #0]
 800250a:	689b      	ldr	r3, [r3, #8]
 800250c:	f003 0307 	and.w	r3, r3, #7
 8002510:	60fb      	str	r3, [r7, #12]
 8002512:	68fb      	ldr	r3, [r7, #12]
 8002514:	2b06      	cmp	r3, #6
 8002516:	d010      	beq.n	800253a <HAL_TIM_Base_Start_IT+0x82>
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	681b      	ldr	r3, [r3, #0]
 800251c:	681a      	ldr	r2, [r3, #0]
 800251e:	687b      	ldr	r3, [r7, #4]
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	f042 0201 	orr.w	r2, r2, #1
 8002526:	601a      	str	r2, [r3, #0]
 8002528:	e007      	b.n	800253a <HAL_TIM_Base_Start_IT+0x82>
 800252a:	687b      	ldr	r3, [r7, #4]
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	681a      	ldr	r2, [r3, #0]
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	f042 0201 	orr.w	r2, r2, #1
 8002538:	601a      	str	r2, [r3, #0]
 800253a:	2300      	movs	r3, #0
 800253c:	4618      	mov	r0, r3
 800253e:	3714      	adds	r7, #20
 8002540:	46bd      	mov	sp, r7
 8002542:	bc80      	pop	{r7}
 8002544:	4770      	bx	lr
 8002546:	bf00      	nop
 8002548:	40012c00 	.word	0x40012c00
 800254c:	40000400 	.word	0x40000400

08002550 <HAL_TIM_IRQHandler>:
 8002550:	b580      	push	{r7, lr}
 8002552:	b084      	sub	sp, #16
 8002554:	af00      	add	r7, sp, #0
 8002556:	6078      	str	r0, [r7, #4]
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	681b      	ldr	r3, [r3, #0]
 800255c:	68db      	ldr	r3, [r3, #12]
 800255e:	60fb      	str	r3, [r7, #12]
 8002560:	687b      	ldr	r3, [r7, #4]
 8002562:	681b      	ldr	r3, [r3, #0]
 8002564:	691b      	ldr	r3, [r3, #16]
 8002566:	60bb      	str	r3, [r7, #8]
 8002568:	68bb      	ldr	r3, [r7, #8]
 800256a:	f003 0302 	and.w	r3, r3, #2
 800256e:	2b00      	cmp	r3, #0
 8002570:	d020      	beq.n	80025b4 <HAL_TIM_IRQHandler+0x64>
 8002572:	68fb      	ldr	r3, [r7, #12]
 8002574:	f003 0302 	and.w	r3, r3, #2
 8002578:	2b00      	cmp	r3, #0
 800257a:	d01b      	beq.n	80025b4 <HAL_TIM_IRQHandler+0x64>
 800257c:	687b      	ldr	r3, [r7, #4]
 800257e:	681b      	ldr	r3, [r3, #0]
 8002580:	f06f 0202 	mvn.w	r2, #2
 8002584:	611a      	str	r2, [r3, #16]
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	2201      	movs	r2, #1
 800258a:	771a      	strb	r2, [r3, #28]
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	699b      	ldr	r3, [r3, #24]
 8002592:	f003 0303 	and.w	r3, r3, #3
 8002596:	2b00      	cmp	r3, #0
 8002598:	d003      	beq.n	80025a2 <HAL_TIM_IRQHandler+0x52>
 800259a:	6878      	ldr	r0, [r7, #4]
 800259c:	f000 f998 	bl	80028d0 <HAL_TIM_IC_CaptureCallback>
 80025a0:	e005      	b.n	80025ae <HAL_TIM_IRQHandler+0x5e>
 80025a2:	6878      	ldr	r0, [r7, #4]
 80025a4:	f000 f98b 	bl	80028be <HAL_TIM_OC_DelayElapsedCallback>
 80025a8:	6878      	ldr	r0, [r7, #4]
 80025aa:	f000 f99a 	bl	80028e2 <HAL_TIM_PWM_PulseFinishedCallback>
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	2200      	movs	r2, #0
 80025b2:	771a      	strb	r2, [r3, #28]
 80025b4:	68bb      	ldr	r3, [r7, #8]
 80025b6:	f003 0304 	and.w	r3, r3, #4
 80025ba:	2b00      	cmp	r3, #0
 80025bc:	d020      	beq.n	8002600 <HAL_TIM_IRQHandler+0xb0>
 80025be:	68fb      	ldr	r3, [r7, #12]
 80025c0:	f003 0304 	and.w	r3, r3, #4
 80025c4:	2b00      	cmp	r3, #0
 80025c6:	d01b      	beq.n	8002600 <HAL_TIM_IRQHandler+0xb0>
 80025c8:	687b      	ldr	r3, [r7, #4]
 80025ca:	681b      	ldr	r3, [r3, #0]
 80025cc:	f06f 0204 	mvn.w	r2, #4
 80025d0:	611a      	str	r2, [r3, #16]
 80025d2:	687b      	ldr	r3, [r7, #4]
 80025d4:	2202      	movs	r2, #2
 80025d6:	771a      	strb	r2, [r3, #28]
 80025d8:	687b      	ldr	r3, [r7, #4]
 80025da:	681b      	ldr	r3, [r3, #0]
 80025dc:	699b      	ldr	r3, [r3, #24]
 80025de:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80025e2:	2b00      	cmp	r3, #0
 80025e4:	d003      	beq.n	80025ee <HAL_TIM_IRQHandler+0x9e>
 80025e6:	6878      	ldr	r0, [r7, #4]
 80025e8:	f000 f972 	bl	80028d0 <HAL_TIM_IC_CaptureCallback>
 80025ec:	e005      	b.n	80025fa <HAL_TIM_IRQHandler+0xaa>
 80025ee:	6878      	ldr	r0, [r7, #4]
 80025f0:	f000 f965 	bl	80028be <HAL_TIM_OC_DelayElapsedCallback>
 80025f4:	6878      	ldr	r0, [r7, #4]
 80025f6:	f000 f974 	bl	80028e2 <HAL_TIM_PWM_PulseFinishedCallback>
 80025fa:	687b      	ldr	r3, [r7, #4]
 80025fc:	2200      	movs	r2, #0
 80025fe:	771a      	strb	r2, [r3, #28]
 8002600:	68bb      	ldr	r3, [r7, #8]
 8002602:	f003 0308 	and.w	r3, r3, #8
 8002606:	2b00      	cmp	r3, #0
 8002608:	d020      	beq.n	800264c <HAL_TIM_IRQHandler+0xfc>
 800260a:	68fb      	ldr	r3, [r7, #12]
 800260c:	f003 0308 	and.w	r3, r3, #8
 8002610:	2b00      	cmp	r3, #0
 8002612:	d01b      	beq.n	800264c <HAL_TIM_IRQHandler+0xfc>
 8002614:	687b      	ldr	r3, [r7, #4]
 8002616:	681b      	ldr	r3, [r3, #0]
 8002618:	f06f 0208 	mvn.w	r2, #8
 800261c:	611a      	str	r2, [r3, #16]
 800261e:	687b      	ldr	r3, [r7, #4]
 8002620:	2204      	movs	r2, #4
 8002622:	771a      	strb	r2, [r3, #28]
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	681b      	ldr	r3, [r3, #0]
 8002628:	69db      	ldr	r3, [r3, #28]
 800262a:	f003 0303 	and.w	r3, r3, #3
 800262e:	2b00      	cmp	r3, #0
 8002630:	d003      	beq.n	800263a <HAL_TIM_IRQHandler+0xea>
 8002632:	6878      	ldr	r0, [r7, #4]
 8002634:	f000 f94c 	bl	80028d0 <HAL_TIM_IC_CaptureCallback>
 8002638:	e005      	b.n	8002646 <HAL_TIM_IRQHandler+0xf6>
 800263a:	6878      	ldr	r0, [r7, #4]
 800263c:	f000 f93f 	bl	80028be <HAL_TIM_OC_DelayElapsedCallback>
 8002640:	6878      	ldr	r0, [r7, #4]
 8002642:	f000 f94e 	bl	80028e2 <HAL_TIM_PWM_PulseFinishedCallback>
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	2200      	movs	r2, #0
 800264a:	771a      	strb	r2, [r3, #28]
 800264c:	68bb      	ldr	r3, [r7, #8]
 800264e:	f003 0310 	and.w	r3, r3, #16
 8002652:	2b00      	cmp	r3, #0
 8002654:	d020      	beq.n	8002698 <HAL_TIM_IRQHandler+0x148>
 8002656:	68fb      	ldr	r3, [r7, #12]
 8002658:	f003 0310 	and.w	r3, r3, #16
 800265c:	2b00      	cmp	r3, #0
 800265e:	d01b      	beq.n	8002698 <HAL_TIM_IRQHandler+0x148>
 8002660:	687b      	ldr	r3, [r7, #4]
 8002662:	681b      	ldr	r3, [r3, #0]
 8002664:	f06f 0210 	mvn.w	r2, #16
 8002668:	611a      	str	r2, [r3, #16]
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	2208      	movs	r2, #8
 800266e:	771a      	strb	r2, [r3, #28]
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	681b      	ldr	r3, [r3, #0]
 8002674:	69db      	ldr	r3, [r3, #28]
 8002676:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800267a:	2b00      	cmp	r3, #0
 800267c:	d003      	beq.n	8002686 <HAL_TIM_IRQHandler+0x136>
 800267e:	6878      	ldr	r0, [r7, #4]
 8002680:	f000 f926 	bl	80028d0 <HAL_TIM_IC_CaptureCallback>
 8002684:	e005      	b.n	8002692 <HAL_TIM_IRQHandler+0x142>
 8002686:	6878      	ldr	r0, [r7, #4]
 8002688:	f000 f919 	bl	80028be <HAL_TIM_OC_DelayElapsedCallback>
 800268c:	6878      	ldr	r0, [r7, #4]
 800268e:	f000 f928 	bl	80028e2 <HAL_TIM_PWM_PulseFinishedCallback>
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	2200      	movs	r2, #0
 8002696:	771a      	strb	r2, [r3, #28]
 8002698:	68bb      	ldr	r3, [r7, #8]
 800269a:	f003 0301 	and.w	r3, r3, #1
 800269e:	2b00      	cmp	r3, #0
 80026a0:	d00c      	beq.n	80026bc <HAL_TIM_IRQHandler+0x16c>
 80026a2:	68fb      	ldr	r3, [r7, #12]
 80026a4:	f003 0301 	and.w	r3, r3, #1
 80026a8:	2b00      	cmp	r3, #0
 80026aa:	d007      	beq.n	80026bc <HAL_TIM_IRQHandler+0x16c>
 80026ac:	687b      	ldr	r3, [r7, #4]
 80026ae:	681b      	ldr	r3, [r3, #0]
 80026b0:	f06f 0201 	mvn.w	r2, #1
 80026b4:	611a      	str	r2, [r3, #16]
 80026b6:	6878      	ldr	r0, [r7, #4]
 80026b8:	f7fe fe5c 	bl	8001374 <HAL_TIM_PeriodElapsedCallback>
 80026bc:	68bb      	ldr	r3, [r7, #8]
 80026be:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80026c2:	2b00      	cmp	r3, #0
 80026c4:	d00c      	beq.n	80026e0 <HAL_TIM_IRQHandler+0x190>
 80026c6:	68fb      	ldr	r3, [r7, #12]
 80026c8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80026cc:	2b00      	cmp	r3, #0
 80026ce:	d007      	beq.n	80026e0 <HAL_TIM_IRQHandler+0x190>
 80026d0:	687b      	ldr	r3, [r7, #4]
 80026d2:	681b      	ldr	r3, [r3, #0]
 80026d4:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80026d8:	611a      	str	r2, [r3, #16]
 80026da:	6878      	ldr	r0, [r7, #4]
 80026dc:	f000 fa6f 	bl	8002bbe <HAL_TIMEx_BreakCallback>
 80026e0:	68bb      	ldr	r3, [r7, #8]
 80026e2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80026e6:	2b00      	cmp	r3, #0
 80026e8:	d00c      	beq.n	8002704 <HAL_TIM_IRQHandler+0x1b4>
 80026ea:	68fb      	ldr	r3, [r7, #12]
 80026ec:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80026f0:	2b00      	cmp	r3, #0
 80026f2:	d007      	beq.n	8002704 <HAL_TIM_IRQHandler+0x1b4>
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	681b      	ldr	r3, [r3, #0]
 80026f8:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80026fc:	611a      	str	r2, [r3, #16]
 80026fe:	6878      	ldr	r0, [r7, #4]
 8002700:	f000 f8f8 	bl	80028f4 <HAL_TIM_TriggerCallback>
 8002704:	68bb      	ldr	r3, [r7, #8]
 8002706:	f003 0320 	and.w	r3, r3, #32
 800270a:	2b00      	cmp	r3, #0
 800270c:	d00c      	beq.n	8002728 <HAL_TIM_IRQHandler+0x1d8>
 800270e:	68fb      	ldr	r3, [r7, #12]
 8002710:	f003 0320 	and.w	r3, r3, #32
 8002714:	2b00      	cmp	r3, #0
 8002716:	d007      	beq.n	8002728 <HAL_TIM_IRQHandler+0x1d8>
 8002718:	687b      	ldr	r3, [r7, #4]
 800271a:	681b      	ldr	r3, [r3, #0]
 800271c:	f06f 0220 	mvn.w	r2, #32
 8002720:	611a      	str	r2, [r3, #16]
 8002722:	6878      	ldr	r0, [r7, #4]
 8002724:	f000 fa42 	bl	8002bac <HAL_TIMEx_CommutCallback>
 8002728:	bf00      	nop
 800272a:	3710      	adds	r7, #16
 800272c:	46bd      	mov	sp, r7
 800272e:	bd80      	pop	{r7, pc}

08002730 <HAL_TIM_ConfigClockSource>:
 8002730:	b580      	push	{r7, lr}
 8002732:	b084      	sub	sp, #16
 8002734:	af00      	add	r7, sp, #0
 8002736:	6078      	str	r0, [r7, #4]
 8002738:	6039      	str	r1, [r7, #0]
 800273a:	2300      	movs	r3, #0
 800273c:	73fb      	strb	r3, [r7, #15]
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002744:	2b01      	cmp	r3, #1
 8002746:	d101      	bne.n	800274c <HAL_TIM_ConfigClockSource+0x1c>
 8002748:	2302      	movs	r3, #2
 800274a:	e0b4      	b.n	80028b6 <HAL_TIM_ConfigClockSource+0x186>
 800274c:	687b      	ldr	r3, [r7, #4]
 800274e:	2201      	movs	r2, #1
 8002750:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	2202      	movs	r2, #2
 8002758:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800275c:	687b      	ldr	r3, [r7, #4]
 800275e:	681b      	ldr	r3, [r3, #0]
 8002760:	689b      	ldr	r3, [r3, #8]
 8002762:	60bb      	str	r3, [r7, #8]
 8002764:	68bb      	ldr	r3, [r7, #8]
 8002766:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800276a:	60bb      	str	r3, [r7, #8]
 800276c:	68bb      	ldr	r3, [r7, #8]
 800276e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8002772:	60bb      	str	r3, [r7, #8]
 8002774:	687b      	ldr	r3, [r7, #4]
 8002776:	681b      	ldr	r3, [r3, #0]
 8002778:	68ba      	ldr	r2, [r7, #8]
 800277a:	609a      	str	r2, [r3, #8]
 800277c:	683b      	ldr	r3, [r7, #0]
 800277e:	681b      	ldr	r3, [r3, #0]
 8002780:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8002784:	d03e      	beq.n	8002804 <HAL_TIM_ConfigClockSource+0xd4>
 8002786:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800278a:	f200 8087 	bhi.w	800289c <HAL_TIM_ConfigClockSource+0x16c>
 800278e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002792:	f000 8086 	beq.w	80028a2 <HAL_TIM_ConfigClockSource+0x172>
 8002796:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800279a:	d87f      	bhi.n	800289c <HAL_TIM_ConfigClockSource+0x16c>
 800279c:	2b70      	cmp	r3, #112	@ 0x70
 800279e:	d01a      	beq.n	80027d6 <HAL_TIM_ConfigClockSource+0xa6>
 80027a0:	2b70      	cmp	r3, #112	@ 0x70
 80027a2:	d87b      	bhi.n	800289c <HAL_TIM_ConfigClockSource+0x16c>
 80027a4:	2b60      	cmp	r3, #96	@ 0x60
 80027a6:	d050      	beq.n	800284a <HAL_TIM_ConfigClockSource+0x11a>
 80027a8:	2b60      	cmp	r3, #96	@ 0x60
 80027aa:	d877      	bhi.n	800289c <HAL_TIM_ConfigClockSource+0x16c>
 80027ac:	2b50      	cmp	r3, #80	@ 0x50
 80027ae:	d03c      	beq.n	800282a <HAL_TIM_ConfigClockSource+0xfa>
 80027b0:	2b50      	cmp	r3, #80	@ 0x50
 80027b2:	d873      	bhi.n	800289c <HAL_TIM_ConfigClockSource+0x16c>
 80027b4:	2b40      	cmp	r3, #64	@ 0x40
 80027b6:	d058      	beq.n	800286a <HAL_TIM_ConfigClockSource+0x13a>
 80027b8:	2b40      	cmp	r3, #64	@ 0x40
 80027ba:	d86f      	bhi.n	800289c <HAL_TIM_ConfigClockSource+0x16c>
 80027bc:	2b30      	cmp	r3, #48	@ 0x30
 80027be:	d064      	beq.n	800288a <HAL_TIM_ConfigClockSource+0x15a>
 80027c0:	2b30      	cmp	r3, #48	@ 0x30
 80027c2:	d86b      	bhi.n	800289c <HAL_TIM_ConfigClockSource+0x16c>
 80027c4:	2b20      	cmp	r3, #32
 80027c6:	d060      	beq.n	800288a <HAL_TIM_ConfigClockSource+0x15a>
 80027c8:	2b20      	cmp	r3, #32
 80027ca:	d867      	bhi.n	800289c <HAL_TIM_ConfigClockSource+0x16c>
 80027cc:	2b00      	cmp	r3, #0
 80027ce:	d05c      	beq.n	800288a <HAL_TIM_ConfigClockSource+0x15a>
 80027d0:	2b10      	cmp	r3, #16
 80027d2:	d05a      	beq.n	800288a <HAL_TIM_ConfigClockSource+0x15a>
 80027d4:	e062      	b.n	800289c <HAL_TIM_ConfigClockSource+0x16c>
 80027d6:	687b      	ldr	r3, [r7, #4]
 80027d8:	6818      	ldr	r0, [r3, #0]
 80027da:	683b      	ldr	r3, [r7, #0]
 80027dc:	6899      	ldr	r1, [r3, #8]
 80027de:	683b      	ldr	r3, [r7, #0]
 80027e0:	685a      	ldr	r2, [r3, #4]
 80027e2:	683b      	ldr	r3, [r7, #0]
 80027e4:	68db      	ldr	r3, [r3, #12]
 80027e6:	f000 f96a 	bl	8002abe <TIM_ETR_SetConfig>
 80027ea:	687b      	ldr	r3, [r7, #4]
 80027ec:	681b      	ldr	r3, [r3, #0]
 80027ee:	689b      	ldr	r3, [r3, #8]
 80027f0:	60bb      	str	r3, [r7, #8]
 80027f2:	68bb      	ldr	r3, [r7, #8]
 80027f4:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80027f8:	60bb      	str	r3, [r7, #8]
 80027fa:	687b      	ldr	r3, [r7, #4]
 80027fc:	681b      	ldr	r3, [r3, #0]
 80027fe:	68ba      	ldr	r2, [r7, #8]
 8002800:	609a      	str	r2, [r3, #8]
 8002802:	e04f      	b.n	80028a4 <HAL_TIM_ConfigClockSource+0x174>
 8002804:	687b      	ldr	r3, [r7, #4]
 8002806:	6818      	ldr	r0, [r3, #0]
 8002808:	683b      	ldr	r3, [r7, #0]
 800280a:	6899      	ldr	r1, [r3, #8]
 800280c:	683b      	ldr	r3, [r7, #0]
 800280e:	685a      	ldr	r2, [r3, #4]
 8002810:	683b      	ldr	r3, [r7, #0]
 8002812:	68db      	ldr	r3, [r3, #12]
 8002814:	f000 f953 	bl	8002abe <TIM_ETR_SetConfig>
 8002818:	687b      	ldr	r3, [r7, #4]
 800281a:	681b      	ldr	r3, [r3, #0]
 800281c:	689a      	ldr	r2, [r3, #8]
 800281e:	687b      	ldr	r3, [r7, #4]
 8002820:	681b      	ldr	r3, [r3, #0]
 8002822:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8002826:	609a      	str	r2, [r3, #8]
 8002828:	e03c      	b.n	80028a4 <HAL_TIM_ConfigClockSource+0x174>
 800282a:	687b      	ldr	r3, [r7, #4]
 800282c:	6818      	ldr	r0, [r3, #0]
 800282e:	683b      	ldr	r3, [r7, #0]
 8002830:	6859      	ldr	r1, [r3, #4]
 8002832:	683b      	ldr	r3, [r7, #0]
 8002834:	68db      	ldr	r3, [r3, #12]
 8002836:	461a      	mov	r2, r3
 8002838:	f000 f8ca 	bl	80029d0 <TIM_TI1_ConfigInputStage>
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	2150      	movs	r1, #80	@ 0x50
 8002842:	4618      	mov	r0, r3
 8002844:	f000 f921 	bl	8002a8a <TIM_ITRx_SetConfig>
 8002848:	e02c      	b.n	80028a4 <HAL_TIM_ConfigClockSource+0x174>
 800284a:	687b      	ldr	r3, [r7, #4]
 800284c:	6818      	ldr	r0, [r3, #0]
 800284e:	683b      	ldr	r3, [r7, #0]
 8002850:	6859      	ldr	r1, [r3, #4]
 8002852:	683b      	ldr	r3, [r7, #0]
 8002854:	68db      	ldr	r3, [r3, #12]
 8002856:	461a      	mov	r2, r3
 8002858:	f000 f8e8 	bl	8002a2c <TIM_TI2_ConfigInputStage>
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	681b      	ldr	r3, [r3, #0]
 8002860:	2160      	movs	r1, #96	@ 0x60
 8002862:	4618      	mov	r0, r3
 8002864:	f000 f911 	bl	8002a8a <TIM_ITRx_SetConfig>
 8002868:	e01c      	b.n	80028a4 <HAL_TIM_ConfigClockSource+0x174>
 800286a:	687b      	ldr	r3, [r7, #4]
 800286c:	6818      	ldr	r0, [r3, #0]
 800286e:	683b      	ldr	r3, [r7, #0]
 8002870:	6859      	ldr	r1, [r3, #4]
 8002872:	683b      	ldr	r3, [r7, #0]
 8002874:	68db      	ldr	r3, [r3, #12]
 8002876:	461a      	mov	r2, r3
 8002878:	f000 f8aa 	bl	80029d0 <TIM_TI1_ConfigInputStage>
 800287c:	687b      	ldr	r3, [r7, #4]
 800287e:	681b      	ldr	r3, [r3, #0]
 8002880:	2140      	movs	r1, #64	@ 0x40
 8002882:	4618      	mov	r0, r3
 8002884:	f000 f901 	bl	8002a8a <TIM_ITRx_SetConfig>
 8002888:	e00c      	b.n	80028a4 <HAL_TIM_ConfigClockSource+0x174>
 800288a:	687b      	ldr	r3, [r7, #4]
 800288c:	681a      	ldr	r2, [r3, #0]
 800288e:	683b      	ldr	r3, [r7, #0]
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	4619      	mov	r1, r3
 8002894:	4610      	mov	r0, r2
 8002896:	f000 f8f8 	bl	8002a8a <TIM_ITRx_SetConfig>
 800289a:	e003      	b.n	80028a4 <HAL_TIM_ConfigClockSource+0x174>
 800289c:	2301      	movs	r3, #1
 800289e:	73fb      	strb	r3, [r7, #15]
 80028a0:	e000      	b.n	80028a4 <HAL_TIM_ConfigClockSource+0x174>
 80028a2:	bf00      	nop
 80028a4:	687b      	ldr	r3, [r7, #4]
 80028a6:	2201      	movs	r2, #1
 80028a8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80028ac:	687b      	ldr	r3, [r7, #4]
 80028ae:	2200      	movs	r2, #0
 80028b0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80028b4:	7bfb      	ldrb	r3, [r7, #15]
 80028b6:	4618      	mov	r0, r3
 80028b8:	3710      	adds	r7, #16
 80028ba:	46bd      	mov	sp, r7
 80028bc:	bd80      	pop	{r7, pc}

080028be <HAL_TIM_OC_DelayElapsedCallback>:
 80028be:	b480      	push	{r7}
 80028c0:	b083      	sub	sp, #12
 80028c2:	af00      	add	r7, sp, #0
 80028c4:	6078      	str	r0, [r7, #4]
 80028c6:	bf00      	nop
 80028c8:	370c      	adds	r7, #12
 80028ca:	46bd      	mov	sp, r7
 80028cc:	bc80      	pop	{r7}
 80028ce:	4770      	bx	lr

080028d0 <HAL_TIM_IC_CaptureCallback>:
 80028d0:	b480      	push	{r7}
 80028d2:	b083      	sub	sp, #12
 80028d4:	af00      	add	r7, sp, #0
 80028d6:	6078      	str	r0, [r7, #4]
 80028d8:	bf00      	nop
 80028da:	370c      	adds	r7, #12
 80028dc:	46bd      	mov	sp, r7
 80028de:	bc80      	pop	{r7}
 80028e0:	4770      	bx	lr

080028e2 <HAL_TIM_PWM_PulseFinishedCallback>:
 80028e2:	b480      	push	{r7}
 80028e4:	b083      	sub	sp, #12
 80028e6:	af00      	add	r7, sp, #0
 80028e8:	6078      	str	r0, [r7, #4]
 80028ea:	bf00      	nop
 80028ec:	370c      	adds	r7, #12
 80028ee:	46bd      	mov	sp, r7
 80028f0:	bc80      	pop	{r7}
 80028f2:	4770      	bx	lr

080028f4 <HAL_TIM_TriggerCallback>:
 80028f4:	b480      	push	{r7}
 80028f6:	b083      	sub	sp, #12
 80028f8:	af00      	add	r7, sp, #0
 80028fa:	6078      	str	r0, [r7, #4]
 80028fc:	bf00      	nop
 80028fe:	370c      	adds	r7, #12
 8002900:	46bd      	mov	sp, r7
 8002902:	bc80      	pop	{r7}
 8002904:	4770      	bx	lr
	...

08002908 <TIM_Base_SetConfig>:
 8002908:	b480      	push	{r7}
 800290a:	b085      	sub	sp, #20
 800290c:	af00      	add	r7, sp, #0
 800290e:	6078      	str	r0, [r7, #4]
 8002910:	6039      	str	r1, [r7, #0]
 8002912:	687b      	ldr	r3, [r7, #4]
 8002914:	681b      	ldr	r3, [r3, #0]
 8002916:	60fb      	str	r3, [r7, #12]
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	4a2b      	ldr	r2, [pc, #172]	@ (80029c8 <TIM_Base_SetConfig+0xc0>)
 800291c:	4293      	cmp	r3, r2
 800291e:	d007      	beq.n	8002930 <TIM_Base_SetConfig+0x28>
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002926:	d003      	beq.n	8002930 <TIM_Base_SetConfig+0x28>
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	4a28      	ldr	r2, [pc, #160]	@ (80029cc <TIM_Base_SetConfig+0xc4>)
 800292c:	4293      	cmp	r3, r2
 800292e:	d108      	bne.n	8002942 <TIM_Base_SetConfig+0x3a>
 8002930:	68fb      	ldr	r3, [r7, #12]
 8002932:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002936:	60fb      	str	r3, [r7, #12]
 8002938:	683b      	ldr	r3, [r7, #0]
 800293a:	685b      	ldr	r3, [r3, #4]
 800293c:	68fa      	ldr	r2, [r7, #12]
 800293e:	4313      	orrs	r3, r2
 8002940:	60fb      	str	r3, [r7, #12]
 8002942:	687b      	ldr	r3, [r7, #4]
 8002944:	4a20      	ldr	r2, [pc, #128]	@ (80029c8 <TIM_Base_SetConfig+0xc0>)
 8002946:	4293      	cmp	r3, r2
 8002948:	d007      	beq.n	800295a <TIM_Base_SetConfig+0x52>
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002950:	d003      	beq.n	800295a <TIM_Base_SetConfig+0x52>
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	4a1d      	ldr	r2, [pc, #116]	@ (80029cc <TIM_Base_SetConfig+0xc4>)
 8002956:	4293      	cmp	r3, r2
 8002958:	d108      	bne.n	800296c <TIM_Base_SetConfig+0x64>
 800295a:	68fb      	ldr	r3, [r7, #12]
 800295c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002960:	60fb      	str	r3, [r7, #12]
 8002962:	683b      	ldr	r3, [r7, #0]
 8002964:	68db      	ldr	r3, [r3, #12]
 8002966:	68fa      	ldr	r2, [r7, #12]
 8002968:	4313      	orrs	r3, r2
 800296a:	60fb      	str	r3, [r7, #12]
 800296c:	68fb      	ldr	r3, [r7, #12]
 800296e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8002972:	683b      	ldr	r3, [r7, #0]
 8002974:	695b      	ldr	r3, [r3, #20]
 8002976:	4313      	orrs	r3, r2
 8002978:	60fb      	str	r3, [r7, #12]
 800297a:	687b      	ldr	r3, [r7, #4]
 800297c:	68fa      	ldr	r2, [r7, #12]
 800297e:	601a      	str	r2, [r3, #0]
 8002980:	683b      	ldr	r3, [r7, #0]
 8002982:	689a      	ldr	r2, [r3, #8]
 8002984:	687b      	ldr	r3, [r7, #4]
 8002986:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002988:	683b      	ldr	r3, [r7, #0]
 800298a:	681a      	ldr	r2, [r3, #0]
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	629a      	str	r2, [r3, #40]	@ 0x28
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	4a0d      	ldr	r2, [pc, #52]	@ (80029c8 <TIM_Base_SetConfig+0xc0>)
 8002994:	4293      	cmp	r3, r2
 8002996:	d103      	bne.n	80029a0 <TIM_Base_SetConfig+0x98>
 8002998:	683b      	ldr	r3, [r7, #0]
 800299a:	691a      	ldr	r2, [r3, #16]
 800299c:	687b      	ldr	r3, [r7, #4]
 800299e:	631a      	str	r2, [r3, #48]	@ 0x30
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	2201      	movs	r2, #1
 80029a4:	615a      	str	r2, [r3, #20]
 80029a6:	687b      	ldr	r3, [r7, #4]
 80029a8:	691b      	ldr	r3, [r3, #16]
 80029aa:	f003 0301 	and.w	r3, r3, #1
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	d005      	beq.n	80029be <TIM_Base_SetConfig+0xb6>
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	691b      	ldr	r3, [r3, #16]
 80029b6:	f023 0201 	bic.w	r2, r3, #1
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	611a      	str	r2, [r3, #16]
 80029be:	bf00      	nop
 80029c0:	3714      	adds	r7, #20
 80029c2:	46bd      	mov	sp, r7
 80029c4:	bc80      	pop	{r7}
 80029c6:	4770      	bx	lr
 80029c8:	40012c00 	.word	0x40012c00
 80029cc:	40000400 	.word	0x40000400

080029d0 <TIM_TI1_ConfigInputStage>:
 80029d0:	b480      	push	{r7}
 80029d2:	b087      	sub	sp, #28
 80029d4:	af00      	add	r7, sp, #0
 80029d6:	60f8      	str	r0, [r7, #12]
 80029d8:	60b9      	str	r1, [r7, #8]
 80029da:	607a      	str	r2, [r7, #4]
 80029dc:	68fb      	ldr	r3, [r7, #12]
 80029de:	6a1b      	ldr	r3, [r3, #32]
 80029e0:	617b      	str	r3, [r7, #20]
 80029e2:	68fb      	ldr	r3, [r7, #12]
 80029e4:	6a1b      	ldr	r3, [r3, #32]
 80029e6:	f023 0201 	bic.w	r2, r3, #1
 80029ea:	68fb      	ldr	r3, [r7, #12]
 80029ec:	621a      	str	r2, [r3, #32]
 80029ee:	68fb      	ldr	r3, [r7, #12]
 80029f0:	699b      	ldr	r3, [r3, #24]
 80029f2:	613b      	str	r3, [r7, #16]
 80029f4:	693b      	ldr	r3, [r7, #16]
 80029f6:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80029fa:	613b      	str	r3, [r7, #16]
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	011b      	lsls	r3, r3, #4
 8002a00:	693a      	ldr	r2, [r7, #16]
 8002a02:	4313      	orrs	r3, r2
 8002a04:	613b      	str	r3, [r7, #16]
 8002a06:	697b      	ldr	r3, [r7, #20]
 8002a08:	f023 030a 	bic.w	r3, r3, #10
 8002a0c:	617b      	str	r3, [r7, #20]
 8002a0e:	697a      	ldr	r2, [r7, #20]
 8002a10:	68bb      	ldr	r3, [r7, #8]
 8002a12:	4313      	orrs	r3, r2
 8002a14:	617b      	str	r3, [r7, #20]
 8002a16:	68fb      	ldr	r3, [r7, #12]
 8002a18:	693a      	ldr	r2, [r7, #16]
 8002a1a:	619a      	str	r2, [r3, #24]
 8002a1c:	68fb      	ldr	r3, [r7, #12]
 8002a1e:	697a      	ldr	r2, [r7, #20]
 8002a20:	621a      	str	r2, [r3, #32]
 8002a22:	bf00      	nop
 8002a24:	371c      	adds	r7, #28
 8002a26:	46bd      	mov	sp, r7
 8002a28:	bc80      	pop	{r7}
 8002a2a:	4770      	bx	lr

08002a2c <TIM_TI2_ConfigInputStage>:
 8002a2c:	b480      	push	{r7}
 8002a2e:	b087      	sub	sp, #28
 8002a30:	af00      	add	r7, sp, #0
 8002a32:	60f8      	str	r0, [r7, #12]
 8002a34:	60b9      	str	r1, [r7, #8]
 8002a36:	607a      	str	r2, [r7, #4]
 8002a38:	68fb      	ldr	r3, [r7, #12]
 8002a3a:	6a1b      	ldr	r3, [r3, #32]
 8002a3c:	617b      	str	r3, [r7, #20]
 8002a3e:	68fb      	ldr	r3, [r7, #12]
 8002a40:	6a1b      	ldr	r3, [r3, #32]
 8002a42:	f023 0210 	bic.w	r2, r3, #16
 8002a46:	68fb      	ldr	r3, [r7, #12]
 8002a48:	621a      	str	r2, [r3, #32]
 8002a4a:	68fb      	ldr	r3, [r7, #12]
 8002a4c:	699b      	ldr	r3, [r3, #24]
 8002a4e:	613b      	str	r3, [r7, #16]
 8002a50:	693b      	ldr	r3, [r7, #16]
 8002a52:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8002a56:	613b      	str	r3, [r7, #16]
 8002a58:	687b      	ldr	r3, [r7, #4]
 8002a5a:	031b      	lsls	r3, r3, #12
 8002a5c:	693a      	ldr	r2, [r7, #16]
 8002a5e:	4313      	orrs	r3, r2
 8002a60:	613b      	str	r3, [r7, #16]
 8002a62:	697b      	ldr	r3, [r7, #20]
 8002a64:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8002a68:	617b      	str	r3, [r7, #20]
 8002a6a:	68bb      	ldr	r3, [r7, #8]
 8002a6c:	011b      	lsls	r3, r3, #4
 8002a6e:	697a      	ldr	r2, [r7, #20]
 8002a70:	4313      	orrs	r3, r2
 8002a72:	617b      	str	r3, [r7, #20]
 8002a74:	68fb      	ldr	r3, [r7, #12]
 8002a76:	693a      	ldr	r2, [r7, #16]
 8002a78:	619a      	str	r2, [r3, #24]
 8002a7a:	68fb      	ldr	r3, [r7, #12]
 8002a7c:	697a      	ldr	r2, [r7, #20]
 8002a7e:	621a      	str	r2, [r3, #32]
 8002a80:	bf00      	nop
 8002a82:	371c      	adds	r7, #28
 8002a84:	46bd      	mov	sp, r7
 8002a86:	bc80      	pop	{r7}
 8002a88:	4770      	bx	lr

08002a8a <TIM_ITRx_SetConfig>:
 8002a8a:	b480      	push	{r7}
 8002a8c:	b085      	sub	sp, #20
 8002a8e:	af00      	add	r7, sp, #0
 8002a90:	6078      	str	r0, [r7, #4]
 8002a92:	6039      	str	r1, [r7, #0]
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	689b      	ldr	r3, [r3, #8]
 8002a98:	60fb      	str	r3, [r7, #12]
 8002a9a:	68fb      	ldr	r3, [r7, #12]
 8002a9c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002aa0:	60fb      	str	r3, [r7, #12]
 8002aa2:	683a      	ldr	r2, [r7, #0]
 8002aa4:	68fb      	ldr	r3, [r7, #12]
 8002aa6:	4313      	orrs	r3, r2
 8002aa8:	f043 0307 	orr.w	r3, r3, #7
 8002aac:	60fb      	str	r3, [r7, #12]
 8002aae:	687b      	ldr	r3, [r7, #4]
 8002ab0:	68fa      	ldr	r2, [r7, #12]
 8002ab2:	609a      	str	r2, [r3, #8]
 8002ab4:	bf00      	nop
 8002ab6:	3714      	adds	r7, #20
 8002ab8:	46bd      	mov	sp, r7
 8002aba:	bc80      	pop	{r7}
 8002abc:	4770      	bx	lr

08002abe <TIM_ETR_SetConfig>:
 8002abe:	b480      	push	{r7}
 8002ac0:	b087      	sub	sp, #28
 8002ac2:	af00      	add	r7, sp, #0
 8002ac4:	60f8      	str	r0, [r7, #12]
 8002ac6:	60b9      	str	r1, [r7, #8]
 8002ac8:	607a      	str	r2, [r7, #4]
 8002aca:	603b      	str	r3, [r7, #0]
 8002acc:	68fb      	ldr	r3, [r7, #12]
 8002ace:	689b      	ldr	r3, [r3, #8]
 8002ad0:	617b      	str	r3, [r7, #20]
 8002ad2:	697b      	ldr	r3, [r7, #20]
 8002ad4:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8002ad8:	617b      	str	r3, [r7, #20]
 8002ada:	683b      	ldr	r3, [r7, #0]
 8002adc:	021a      	lsls	r2, r3, #8
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	431a      	orrs	r2, r3
 8002ae2:	68bb      	ldr	r3, [r7, #8]
 8002ae4:	4313      	orrs	r3, r2
 8002ae6:	697a      	ldr	r2, [r7, #20]
 8002ae8:	4313      	orrs	r3, r2
 8002aea:	617b      	str	r3, [r7, #20]
 8002aec:	68fb      	ldr	r3, [r7, #12]
 8002aee:	697a      	ldr	r2, [r7, #20]
 8002af0:	609a      	str	r2, [r3, #8]
 8002af2:	bf00      	nop
 8002af4:	371c      	adds	r7, #28
 8002af6:	46bd      	mov	sp, r7
 8002af8:	bc80      	pop	{r7}
 8002afa:	4770      	bx	lr

08002afc <HAL_TIMEx_MasterConfigSynchronization>:
 8002afc:	b480      	push	{r7}
 8002afe:	b085      	sub	sp, #20
 8002b00:	af00      	add	r7, sp, #0
 8002b02:	6078      	str	r0, [r7, #4]
 8002b04:	6039      	str	r1, [r7, #0]
 8002b06:	687b      	ldr	r3, [r7, #4]
 8002b08:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002b0c:	2b01      	cmp	r3, #1
 8002b0e:	d101      	bne.n	8002b14 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002b10:	2302      	movs	r3, #2
 8002b12:	e041      	b.n	8002b98 <HAL_TIMEx_MasterConfigSynchronization+0x9c>
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	2201      	movs	r2, #1
 8002b18:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	2202      	movs	r2, #2
 8002b20:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	681b      	ldr	r3, [r3, #0]
 8002b28:	685b      	ldr	r3, [r3, #4]
 8002b2a:	60fb      	str	r3, [r7, #12]
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	681b      	ldr	r3, [r3, #0]
 8002b30:	689b      	ldr	r3, [r3, #8]
 8002b32:	60bb      	str	r3, [r7, #8]
 8002b34:	68fb      	ldr	r3, [r7, #12]
 8002b36:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002b3a:	60fb      	str	r3, [r7, #12]
 8002b3c:	683b      	ldr	r3, [r7, #0]
 8002b3e:	681b      	ldr	r3, [r3, #0]
 8002b40:	68fa      	ldr	r2, [r7, #12]
 8002b42:	4313      	orrs	r3, r2
 8002b44:	60fb      	str	r3, [r7, #12]
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	681b      	ldr	r3, [r3, #0]
 8002b4a:	68fa      	ldr	r2, [r7, #12]
 8002b4c:	605a      	str	r2, [r3, #4]
 8002b4e:	687b      	ldr	r3, [r7, #4]
 8002b50:	681b      	ldr	r3, [r3, #0]
 8002b52:	4a14      	ldr	r2, [pc, #80]	@ (8002ba4 <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
 8002b54:	4293      	cmp	r3, r2
 8002b56:	d009      	beq.n	8002b6c <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	681b      	ldr	r3, [r3, #0]
 8002b5c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002b60:	d004      	beq.n	8002b6c <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8002b62:	687b      	ldr	r3, [r7, #4]
 8002b64:	681b      	ldr	r3, [r3, #0]
 8002b66:	4a10      	ldr	r2, [pc, #64]	@ (8002ba8 <HAL_TIMEx_MasterConfigSynchronization+0xac>)
 8002b68:	4293      	cmp	r3, r2
 8002b6a:	d10c      	bne.n	8002b86 <HAL_TIMEx_MasterConfigSynchronization+0x8a>
 8002b6c:	68bb      	ldr	r3, [r7, #8]
 8002b6e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002b72:	60bb      	str	r3, [r7, #8]
 8002b74:	683b      	ldr	r3, [r7, #0]
 8002b76:	685b      	ldr	r3, [r3, #4]
 8002b78:	68ba      	ldr	r2, [r7, #8]
 8002b7a:	4313      	orrs	r3, r2
 8002b7c:	60bb      	str	r3, [r7, #8]
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	68ba      	ldr	r2, [r7, #8]
 8002b84:	609a      	str	r2, [r3, #8]
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	2201      	movs	r2, #1
 8002b8a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002b8e:	687b      	ldr	r3, [r7, #4]
 8002b90:	2200      	movs	r2, #0
 8002b92:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b96:	2300      	movs	r3, #0
 8002b98:	4618      	mov	r0, r3
 8002b9a:	3714      	adds	r7, #20
 8002b9c:	46bd      	mov	sp, r7
 8002b9e:	bc80      	pop	{r7}
 8002ba0:	4770      	bx	lr
 8002ba2:	bf00      	nop
 8002ba4:	40012c00 	.word	0x40012c00
 8002ba8:	40000400 	.word	0x40000400

08002bac <HAL_TIMEx_CommutCallback>:
 8002bac:	b480      	push	{r7}
 8002bae:	b083      	sub	sp, #12
 8002bb0:	af00      	add	r7, sp, #0
 8002bb2:	6078      	str	r0, [r7, #4]
 8002bb4:	bf00      	nop
 8002bb6:	370c      	adds	r7, #12
 8002bb8:	46bd      	mov	sp, r7
 8002bba:	bc80      	pop	{r7}
 8002bbc:	4770      	bx	lr

08002bbe <HAL_TIMEx_BreakCallback>:
 8002bbe:	b480      	push	{r7}
 8002bc0:	b083      	sub	sp, #12
 8002bc2:	af00      	add	r7, sp, #0
 8002bc4:	6078      	str	r0, [r7, #4]
 8002bc6:	bf00      	nop
 8002bc8:	370c      	adds	r7, #12
 8002bca:	46bd      	mov	sp, r7
 8002bcc:	bc80      	pop	{r7}
 8002bce:	4770      	bx	lr

08002bd0 <memset>:
 8002bd0:	4603      	mov	r3, r0
 8002bd2:	4402      	add	r2, r0
 8002bd4:	4293      	cmp	r3, r2
 8002bd6:	d100      	bne.n	8002bda <memset+0xa>
 8002bd8:	4770      	bx	lr
 8002bda:	f803 1b01 	strb.w	r1, [r3], #1
 8002bde:	e7f9      	b.n	8002bd4 <memset+0x4>

08002be0 <__libc_init_array>:
 8002be0:	b570      	push	{r4, r5, r6, lr}
 8002be2:	2600      	movs	r6, #0
 8002be4:	4d0c      	ldr	r5, [pc, #48]	@ (8002c18 <__libc_init_array+0x38>)
 8002be6:	4c0d      	ldr	r4, [pc, #52]	@ (8002c1c <__libc_init_array+0x3c>)
 8002be8:	1b64      	subs	r4, r4, r5
 8002bea:	10a4      	asrs	r4, r4, #2
 8002bec:	42a6      	cmp	r6, r4
 8002bee:	d109      	bne.n	8002c04 <__libc_init_array+0x24>
 8002bf0:	f000 f81a 	bl	8002c28 <_init>
 8002bf4:	2600      	movs	r6, #0
 8002bf6:	4d0a      	ldr	r5, [pc, #40]	@ (8002c20 <__libc_init_array+0x40>)
 8002bf8:	4c0a      	ldr	r4, [pc, #40]	@ (8002c24 <__libc_init_array+0x44>)
 8002bfa:	1b64      	subs	r4, r4, r5
 8002bfc:	10a4      	asrs	r4, r4, #2
 8002bfe:	42a6      	cmp	r6, r4
 8002c00:	d105      	bne.n	8002c0e <__libc_init_array+0x2e>
 8002c02:	bd70      	pop	{r4, r5, r6, pc}
 8002c04:	f855 3b04 	ldr.w	r3, [r5], #4
 8002c08:	4798      	blx	r3
 8002c0a:	3601      	adds	r6, #1
 8002c0c:	e7ee      	b.n	8002bec <__libc_init_array+0xc>
 8002c0e:	f855 3b04 	ldr.w	r3, [r5], #4
 8002c12:	4798      	blx	r3
 8002c14:	3601      	adds	r6, #1
 8002c16:	e7f2      	b.n	8002bfe <__libc_init_array+0x1e>
 8002c18:	08002c64 	.word	0x08002c64
 8002c1c:	08002c64 	.word	0x08002c64
 8002c20:	08002c64 	.word	0x08002c64
 8002c24:	08002c68 	.word	0x08002c68

08002c28 <_init>:
 8002c28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c2a:	bf00      	nop
 8002c2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002c2e:	bc08      	pop	{r3}
 8002c30:	469e      	mov	lr, r3
 8002c32:	4770      	bx	lr

08002c34 <_fini>:
 8002c34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c36:	bf00      	nop
 8002c38:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002c3a:	bc08      	pop	{r3}
 8002c3c:	469e      	mov	lr, r3
 8002c3e:	4770      	bx	lr
