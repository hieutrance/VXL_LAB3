
LAB3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002b3c  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000024  08002c48  08002c48  00003c48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002c6c  08002c6c  00004058  2**0
                  CONTENTS
  4 .ARM          00000000  08002c6c  08002c6c  00004058  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002c6c  08002c6c  00004058  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002c6c  08002c6c  00003c6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08002c70  08002c70  00003c70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000058  20000000  08002c74  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000c4  20000058  08002ccc  00004058  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000011c  08002ccc  0000411c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00004058  2**0
                  CONTENTS, READONLY
 12 .debug_info   00008701  00000000  00000000  00004081  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001cb8  00000000  00000000  0000c782  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000a40  00000000  00000000  0000e440  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000007be  00000000  00000000  0000ee80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00016f0c  00000000  00000000  0000f63e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000c96b  00000000  00000000  0002654a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000824eb  00000000  00000000  00032eb5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b53a0  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000283c  00000000  00000000  000b53e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005b  00000000  00000000  000b7c20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000058 	.word	0x20000058
 8000128:	00000000 	.word	0x00000000
 800012c:	08002c30 	.word	0x08002c30

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	2000005c 	.word	0x2000005c
 8000148:	08002c30 	.word	0x08002c30

0800014c <isButtonPressed>:
int TimerForKeyPress[NUM_OF_BUTTONS] = {200, 200, 200};

int Pressed_flag[NUM_OF_BUTTONS] = {0};
int LongPressed_flag[NUM_OF_BUTTONS] = {0};

int isButtonPressed(int num){
 800014c:	b480      	push	{r7}
 800014e:	b083      	sub	sp, #12
 8000150:	af00      	add	r7, sp, #0
 8000152:	6078      	str	r0, [r7, #4]
	if(Pressed_flag[num] == 1){
 8000154:	4a09      	ldr	r2, [pc, #36]	@ (800017c <isButtonPressed+0x30>)
 8000156:	687b      	ldr	r3, [r7, #4]
 8000158:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800015c:	2b01      	cmp	r3, #1
 800015e:	d106      	bne.n	800016e <isButtonPressed+0x22>
		Pressed_flag[num] = 0;
 8000160:	4a06      	ldr	r2, [pc, #24]	@ (800017c <isButtonPressed+0x30>)
 8000162:	687b      	ldr	r3, [r7, #4]
 8000164:	2100      	movs	r1, #0
 8000166:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		return 1;
 800016a:	2301      	movs	r3, #1
 800016c:	e000      	b.n	8000170 <isButtonPressed+0x24>
	}
	return 0;
 800016e:	2300      	movs	r3, #0
}
 8000170:	4618      	mov	r0, r3
 8000172:	370c      	adds	r7, #12
 8000174:	46bd      	mov	sp, r7
 8000176:	bc80      	pop	{r7}
 8000178:	4770      	bx	lr
 800017a:	bf00      	nop
 800017c:	20000074 	.word	0x20000074

08000180 <isButtonLongPressed>:

int isButtonLongPressed(int num){
 8000180:	b480      	push	{r7}
 8000182:	b083      	sub	sp, #12
 8000184:	af00      	add	r7, sp, #0
 8000186:	6078      	str	r0, [r7, #4]
	if(LongPressed_flag[num] == 1){
 8000188:	4a09      	ldr	r2, [pc, #36]	@ (80001b0 <isButtonLongPressed+0x30>)
 800018a:	687b      	ldr	r3, [r7, #4]
 800018c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000190:	2b01      	cmp	r3, #1
 8000192:	d106      	bne.n	80001a2 <isButtonLongPressed+0x22>
		LongPressed_flag[num] = 0;
 8000194:	4a06      	ldr	r2, [pc, #24]	@ (80001b0 <isButtonLongPressed+0x30>)
 8000196:	687b      	ldr	r3, [r7, #4]
 8000198:	2100      	movs	r1, #0
 800019a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		return 1;
 800019e:	2301      	movs	r3, #1
 80001a0:	e000      	b.n	80001a4 <isButtonLongPressed+0x24>
	}
	return 0;
 80001a2:	2300      	movs	r3, #0
}
 80001a4:	4618      	mov	r0, r3
 80001a6:	370c      	adds	r7, #12
 80001a8:	46bd      	mov	sp, r7
 80001aa:	bc80      	pop	{r7}
 80001ac:	4770      	bx	lr
 80001ae:	bf00      	nop
 80001b0:	20000080 	.word	0x20000080

080001b4 <getKeyInput>:

void getKeyInput() {
 80001b4:	b580      	push	{r7, lr}
 80001b6:	b082      	sub	sp, #8
 80001b8:	af00      	add	r7, sp, #0
    for (int i = 0; i < NUM_OF_BUTTONS; i++) {
 80001ba:	2300      	movs	r3, #0
 80001bc:	607b      	str	r3, [r7, #4]
 80001be:	e08f      	b.n	80002e0 <getKeyInput+0x12c>
        KeyReg0[i] = KeyReg1[i];
 80001c0:	4a4c      	ldr	r2, [pc, #304]	@ (80002f4 <getKeyInput+0x140>)
 80001c2:	687b      	ldr	r3, [r7, #4]
 80001c4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001c8:	494b      	ldr	r1, [pc, #300]	@ (80002f8 <getKeyInput+0x144>)
 80001ca:	687b      	ldr	r3, [r7, #4]
 80001cc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        KeyReg1[i] = KeyReg2[i];
 80001d0:	4a4a      	ldr	r2, [pc, #296]	@ (80002fc <getKeyInput+0x148>)
 80001d2:	687b      	ldr	r3, [r7, #4]
 80001d4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001d8:	4946      	ldr	r1, [pc, #280]	@ (80002f4 <getKeyInput+0x140>)
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        if (i == MODE_BUTTON) {
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	2b00      	cmp	r3, #0
 80001e4:	d10a      	bne.n	80001fc <getKeyInput+0x48>
            KeyReg2[i] = HAL_GPIO_ReadPin(MODE_BUTTON_GPIO_Port, MODE_BUTTON_Pin);
 80001e6:	2104      	movs	r1, #4
 80001e8:	4845      	ldr	r0, [pc, #276]	@ (8000300 <getKeyInput+0x14c>)
 80001ea:	f001 fcf3 	bl	8001bd4 <HAL_GPIO_ReadPin>
 80001ee:	4603      	mov	r3, r0
 80001f0:	4619      	mov	r1, r3
 80001f2:	4a42      	ldr	r2, [pc, #264]	@ (80002fc <getKeyInput+0x148>)
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80001fa:	e01a      	b.n	8000232 <getKeyInput+0x7e>
        } else if (i == MODIFY_BUTTON) {
 80001fc:	687b      	ldr	r3, [r7, #4]
 80001fe:	2b01      	cmp	r3, #1
 8000200:	d10a      	bne.n	8000218 <getKeyInput+0x64>
            KeyReg2[i] = HAL_GPIO_ReadPin(MODIFY_BUTTON_GPIO_Port, MODIFY_BUTTON_Pin);
 8000202:	2108      	movs	r1, #8
 8000204:	483e      	ldr	r0, [pc, #248]	@ (8000300 <getKeyInput+0x14c>)
 8000206:	f001 fce5 	bl	8001bd4 <HAL_GPIO_ReadPin>
 800020a:	4603      	mov	r3, r0
 800020c:	4619      	mov	r1, r3
 800020e:	4a3b      	ldr	r2, [pc, #236]	@ (80002fc <getKeyInput+0x148>)
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000216:	e00c      	b.n	8000232 <getKeyInput+0x7e>
        } else if (i == SET_BUTTON) {
 8000218:	687b      	ldr	r3, [r7, #4]
 800021a:	2b02      	cmp	r3, #2
 800021c:	d109      	bne.n	8000232 <getKeyInput+0x7e>
            KeyReg2[i] = HAL_GPIO_ReadPin(SET_BUTTON_GPIO_Port, SET_BUTTON_Pin);
 800021e:	2110      	movs	r1, #16
 8000220:	4837      	ldr	r0, [pc, #220]	@ (8000300 <getKeyInput+0x14c>)
 8000222:	f001 fcd7 	bl	8001bd4 <HAL_GPIO_ReadPin>
 8000226:	4603      	mov	r3, r0
 8000228:	4619      	mov	r1, r3
 800022a:	4a34      	ldr	r2, [pc, #208]	@ (80002fc <getKeyInput+0x148>)
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        }

        if ((KeyReg0[i] == KeyReg1[i]) && (KeyReg1[i] == KeyReg2[i])) {
 8000232:	4a31      	ldr	r2, [pc, #196]	@ (80002f8 <getKeyInput+0x144>)
 8000234:	687b      	ldr	r3, [r7, #4]
 8000236:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800023a:	492e      	ldr	r1, [pc, #184]	@ (80002f4 <getKeyInput+0x140>)
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000242:	429a      	cmp	r2, r3
 8000244:	d149      	bne.n	80002da <getKeyInput+0x126>
 8000246:	4a2b      	ldr	r2, [pc, #172]	@ (80002f4 <getKeyInput+0x140>)
 8000248:	687b      	ldr	r3, [r7, #4]
 800024a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800024e:	492b      	ldr	r1, [pc, #172]	@ (80002fc <getKeyInput+0x148>)
 8000250:	687b      	ldr	r3, [r7, #4]
 8000252:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000256:	429a      	cmp	r2, r3
 8000258:	d13f      	bne.n	80002da <getKeyInput+0x126>
            if (KeyReg2[i] == PRESSED_STATE) {
 800025a:	4a28      	ldr	r2, [pc, #160]	@ (80002fc <getKeyInput+0x148>)
 800025c:	687b      	ldr	r3, [r7, #4]
 800025e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000262:	2b00      	cmp	r3, #0
 8000264:	d12f      	bne.n	80002c6 <getKeyInput+0x112>
                if (KeyReg3[i] != PRESSED_STATE) { // Phát hiện nhấn ngắn
 8000266:	4a27      	ldr	r2, [pc, #156]	@ (8000304 <getKeyInput+0x150>)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800026e:	2b00      	cmp	r3, #0
 8000270:	d00f      	beq.n	8000292 <getKeyInput+0xde>
                    Pressed_flag[i] = 1;
 8000272:	4a25      	ldr	r2, [pc, #148]	@ (8000308 <getKeyInput+0x154>)
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	2101      	movs	r1, #1
 8000278:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    KeyReg3[i] = PRESSED_STATE;
 800027c:	4a21      	ldr	r2, [pc, #132]	@ (8000304 <getKeyInput+0x150>)
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	2100      	movs	r1, #0
 8000282:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    TimerForKeyPress[i] = 200;
 8000286:	4a21      	ldr	r2, [pc, #132]	@ (800030c <getKeyInput+0x158>)
 8000288:	687b      	ldr	r3, [r7, #4]
 800028a:	21c8      	movs	r1, #200	@ 0xc8
 800028c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000290:	e023      	b.n	80002da <getKeyInput+0x126>
                } else { // Xử lý nhấn giữ
                    TimerForKeyPress[i]--;
 8000292:	4a1e      	ldr	r2, [pc, #120]	@ (800030c <getKeyInput+0x158>)
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800029a:	1e5a      	subs	r2, r3, #1
 800029c:	491b      	ldr	r1, [pc, #108]	@ (800030c <getKeyInput+0x158>)
 800029e:	687b      	ldr	r3, [r7, #4]
 80002a0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
                    if (TimerForKeyPress[i] == 0) {
 80002a4:	4a19      	ldr	r2, [pc, #100]	@ (800030c <getKeyInput+0x158>)
 80002a6:	687b      	ldr	r3, [r7, #4]
 80002a8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80002ac:	2b00      	cmp	r3, #0
 80002ae:	d114      	bne.n	80002da <getKeyInput+0x126>
                        LongPressed_flag[i] = 1;
 80002b0:	4a17      	ldr	r2, [pc, #92]	@ (8000310 <getKeyInput+0x15c>)
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	2101      	movs	r1, #1
 80002b6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                        TimerForKeyPress[i] = 200;
 80002ba:	4a14      	ldr	r2, [pc, #80]	@ (800030c <getKeyInput+0x158>)
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	21c8      	movs	r1, #200	@ 0xc8
 80002c0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80002c4:	e009      	b.n	80002da <getKeyInput+0x126>
                    }
                }
            } else { // Nút không được nhấn
                KeyReg3[i] = NORMAL_STATE;
 80002c6:	4a0f      	ldr	r2, [pc, #60]	@ (8000304 <getKeyInput+0x150>)
 80002c8:	687b      	ldr	r3, [r7, #4]
 80002ca:	2101      	movs	r1, #1
 80002cc:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                TimerForKeyPress[i] = 200; // Reset bộ đếm
 80002d0:	4a0e      	ldr	r2, [pc, #56]	@ (800030c <getKeyInput+0x158>)
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	21c8      	movs	r1, #200	@ 0xc8
 80002d6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    for (int i = 0; i < NUM_OF_BUTTONS; i++) {
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	3301      	adds	r3, #1
 80002de:	607b      	str	r3, [r7, #4]
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	2b02      	cmp	r3, #2
 80002e4:	f77f af6c 	ble.w	80001c0 <getKeyInput+0xc>
            }
        }
    }
}
 80002e8:	bf00      	nop
 80002ea:	bf00      	nop
 80002ec:	3708      	adds	r7, #8
 80002ee:	46bd      	mov	sp, r7
 80002f0:	bd80      	pop	{r7, pc}
 80002f2:	bf00      	nop
 80002f4:	2000000c 	.word	0x2000000c
 80002f8:	20000000 	.word	0x20000000
 80002fc:	20000018 	.word	0x20000018
 8000300:	40010800 	.word	0x40010800
 8000304:	20000024 	.word	0x20000024
 8000308:	20000074 	.word	0x20000074
 800030c:	20000030 	.word	0x20000030
 8000310:	20000080 	.word	0x20000080

08000314 <display7SegLed>:

#include "display7SegLed.h"

int led_buffer[4] = {0};

void display7SegLed(int num){
 8000314:	b580      	push	{r7, lr}
 8000316:	b082      	sub	sp, #8
 8000318:	af00      	add	r7, sp, #0
 800031a:	6078      	str	r0, [r7, #4]
	switch(num){
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	2b09      	cmp	r3, #9
 8000320:	f200 8180 	bhi.w	8000624 <display7SegLed+0x310>
 8000324:	a201      	add	r2, pc, #4	@ (adr r2, 800032c <display7SegLed+0x18>)
 8000326:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800032a:	bf00      	nop
 800032c:	08000355 	.word	0x08000355
 8000330:	0800039d 	.word	0x0800039d
 8000334:	080003e5 	.word	0x080003e5
 8000338:	0800042d 	.word	0x0800042d
 800033c:	08000475 	.word	0x08000475
 8000340:	080004bd 	.word	0x080004bd
 8000344:	08000505 	.word	0x08000505
 8000348:	0800054d 	.word	0x0800054d
 800034c:	08000595 	.word	0x08000595
 8000350:	080005dd 	.word	0x080005dd
	case 0:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 8000354:	2200      	movs	r2, #0
 8000356:	2101      	movs	r1, #1
 8000358:	48b5      	ldr	r0, [pc, #724]	@ (8000630 <display7SegLed+0x31c>)
 800035a:	f001 fc52 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 800035e:	2200      	movs	r2, #0
 8000360:	2102      	movs	r1, #2
 8000362:	48b3      	ldr	r0, [pc, #716]	@ (8000630 <display7SegLed+0x31c>)
 8000364:	f001 fc4d 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 8000368:	2200      	movs	r2, #0
 800036a:	2104      	movs	r1, #4
 800036c:	48b0      	ldr	r0, [pc, #704]	@ (8000630 <display7SegLed+0x31c>)
 800036e:	f001 fc48 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , RESET);
 8000372:	2200      	movs	r2, #0
 8000374:	2108      	movs	r1, #8
 8000376:	48ae      	ldr	r0, [pc, #696]	@ (8000630 <display7SegLed+0x31c>)
 8000378:	f001 fc43 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , RESET);
 800037c:	2200      	movs	r2, #0
 800037e:	2110      	movs	r1, #16
 8000380:	48ab      	ldr	r0, [pc, #684]	@ (8000630 <display7SegLed+0x31c>)
 8000382:	f001 fc3e 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , RESET);
 8000386:	2200      	movs	r2, #0
 8000388:	2120      	movs	r1, #32
 800038a:	48a9      	ldr	r0, [pc, #676]	@ (8000630 <display7SegLed+0x31c>)
 800038c:	f001 fc39 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , SET);
 8000390:	2201      	movs	r2, #1
 8000392:	2140      	movs	r1, #64	@ 0x40
 8000394:	48a6      	ldr	r0, [pc, #664]	@ (8000630 <display7SegLed+0x31c>)
 8000396:	f001 fc34 	bl	8001c02 <HAL_GPIO_WritePin>
		break;
 800039a:	e144      	b.n	8000626 <display7SegLed+0x312>
	case 1:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , SET);
 800039c:	2201      	movs	r2, #1
 800039e:	2101      	movs	r1, #1
 80003a0:	48a3      	ldr	r0, [pc, #652]	@ (8000630 <display7SegLed+0x31c>)
 80003a2:	f001 fc2e 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 80003a6:	2200      	movs	r2, #0
 80003a8:	2102      	movs	r1, #2
 80003aa:	48a1      	ldr	r0, [pc, #644]	@ (8000630 <display7SegLed+0x31c>)
 80003ac:	f001 fc29 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 80003b0:	2200      	movs	r2, #0
 80003b2:	2104      	movs	r1, #4
 80003b4:	489e      	ldr	r0, [pc, #632]	@ (8000630 <display7SegLed+0x31c>)
 80003b6:	f001 fc24 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , SET);
 80003ba:	2201      	movs	r2, #1
 80003bc:	2108      	movs	r1, #8
 80003be:	489c      	ldr	r0, [pc, #624]	@ (8000630 <display7SegLed+0x31c>)
 80003c0:	f001 fc1f 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , SET);
 80003c4:	2201      	movs	r2, #1
 80003c6:	2110      	movs	r1, #16
 80003c8:	4899      	ldr	r0, [pc, #612]	@ (8000630 <display7SegLed+0x31c>)
 80003ca:	f001 fc1a 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , SET);
 80003ce:	2201      	movs	r2, #1
 80003d0:	2120      	movs	r1, #32
 80003d2:	4897      	ldr	r0, [pc, #604]	@ (8000630 <display7SegLed+0x31c>)
 80003d4:	f001 fc15 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , SET);
 80003d8:	2201      	movs	r2, #1
 80003da:	2140      	movs	r1, #64	@ 0x40
 80003dc:	4894      	ldr	r0, [pc, #592]	@ (8000630 <display7SegLed+0x31c>)
 80003de:	f001 fc10 	bl	8001c02 <HAL_GPIO_WritePin>
		break;
 80003e2:	e120      	b.n	8000626 <display7SegLed+0x312>
	case 2:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 80003e4:	2200      	movs	r2, #0
 80003e6:	2101      	movs	r1, #1
 80003e8:	4891      	ldr	r0, [pc, #580]	@ (8000630 <display7SegLed+0x31c>)
 80003ea:	f001 fc0a 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 80003ee:	2200      	movs	r2, #0
 80003f0:	2102      	movs	r1, #2
 80003f2:	488f      	ldr	r0, [pc, #572]	@ (8000630 <display7SegLed+0x31c>)
 80003f4:	f001 fc05 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , SET);
 80003f8:	2201      	movs	r2, #1
 80003fa:	2104      	movs	r1, #4
 80003fc:	488c      	ldr	r0, [pc, #560]	@ (8000630 <display7SegLed+0x31c>)
 80003fe:	f001 fc00 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , RESET);
 8000402:	2200      	movs	r2, #0
 8000404:	2108      	movs	r1, #8
 8000406:	488a      	ldr	r0, [pc, #552]	@ (8000630 <display7SegLed+0x31c>)
 8000408:	f001 fbfb 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , RESET);
 800040c:	2200      	movs	r2, #0
 800040e:	2110      	movs	r1, #16
 8000410:	4887      	ldr	r0, [pc, #540]	@ (8000630 <display7SegLed+0x31c>)
 8000412:	f001 fbf6 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , SET);
 8000416:	2201      	movs	r2, #1
 8000418:	2120      	movs	r1, #32
 800041a:	4885      	ldr	r0, [pc, #532]	@ (8000630 <display7SegLed+0x31c>)
 800041c:	f001 fbf1 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , RESET);
 8000420:	2200      	movs	r2, #0
 8000422:	2140      	movs	r1, #64	@ 0x40
 8000424:	4882      	ldr	r0, [pc, #520]	@ (8000630 <display7SegLed+0x31c>)
 8000426:	f001 fbec 	bl	8001c02 <HAL_GPIO_WritePin>
		break;
 800042a:	e0fc      	b.n	8000626 <display7SegLed+0x312>
	case 3:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 800042c:	2200      	movs	r2, #0
 800042e:	2101      	movs	r1, #1
 8000430:	487f      	ldr	r0, [pc, #508]	@ (8000630 <display7SegLed+0x31c>)
 8000432:	f001 fbe6 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 8000436:	2200      	movs	r2, #0
 8000438:	2102      	movs	r1, #2
 800043a:	487d      	ldr	r0, [pc, #500]	@ (8000630 <display7SegLed+0x31c>)
 800043c:	f001 fbe1 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 8000440:	2200      	movs	r2, #0
 8000442:	2104      	movs	r1, #4
 8000444:	487a      	ldr	r0, [pc, #488]	@ (8000630 <display7SegLed+0x31c>)
 8000446:	f001 fbdc 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , RESET);
 800044a:	2200      	movs	r2, #0
 800044c:	2108      	movs	r1, #8
 800044e:	4878      	ldr	r0, [pc, #480]	@ (8000630 <display7SegLed+0x31c>)
 8000450:	f001 fbd7 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , SET);
 8000454:	2201      	movs	r2, #1
 8000456:	2110      	movs	r1, #16
 8000458:	4875      	ldr	r0, [pc, #468]	@ (8000630 <display7SegLed+0x31c>)
 800045a:	f001 fbd2 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , SET);
 800045e:	2201      	movs	r2, #1
 8000460:	2120      	movs	r1, #32
 8000462:	4873      	ldr	r0, [pc, #460]	@ (8000630 <display7SegLed+0x31c>)
 8000464:	f001 fbcd 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , RESET);
 8000468:	2200      	movs	r2, #0
 800046a:	2140      	movs	r1, #64	@ 0x40
 800046c:	4870      	ldr	r0, [pc, #448]	@ (8000630 <display7SegLed+0x31c>)
 800046e:	f001 fbc8 	bl	8001c02 <HAL_GPIO_WritePin>
		break;
 8000472:	e0d8      	b.n	8000626 <display7SegLed+0x312>
	case 4:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , SET);
 8000474:	2201      	movs	r2, #1
 8000476:	2101      	movs	r1, #1
 8000478:	486d      	ldr	r0, [pc, #436]	@ (8000630 <display7SegLed+0x31c>)
 800047a:	f001 fbc2 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 800047e:	2200      	movs	r2, #0
 8000480:	2102      	movs	r1, #2
 8000482:	486b      	ldr	r0, [pc, #428]	@ (8000630 <display7SegLed+0x31c>)
 8000484:	f001 fbbd 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 8000488:	2200      	movs	r2, #0
 800048a:	2104      	movs	r1, #4
 800048c:	4868      	ldr	r0, [pc, #416]	@ (8000630 <display7SegLed+0x31c>)
 800048e:	f001 fbb8 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , SET);
 8000492:	2201      	movs	r2, #1
 8000494:	2108      	movs	r1, #8
 8000496:	4866      	ldr	r0, [pc, #408]	@ (8000630 <display7SegLed+0x31c>)
 8000498:	f001 fbb3 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , SET);
 800049c:	2201      	movs	r2, #1
 800049e:	2110      	movs	r1, #16
 80004a0:	4863      	ldr	r0, [pc, #396]	@ (8000630 <display7SegLed+0x31c>)
 80004a2:	f001 fbae 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , RESET);
 80004a6:	2200      	movs	r2, #0
 80004a8:	2120      	movs	r1, #32
 80004aa:	4861      	ldr	r0, [pc, #388]	@ (8000630 <display7SegLed+0x31c>)
 80004ac:	f001 fba9 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , RESET);
 80004b0:	2200      	movs	r2, #0
 80004b2:	2140      	movs	r1, #64	@ 0x40
 80004b4:	485e      	ldr	r0, [pc, #376]	@ (8000630 <display7SegLed+0x31c>)
 80004b6:	f001 fba4 	bl	8001c02 <HAL_GPIO_WritePin>
		break;
 80004ba:	e0b4      	b.n	8000626 <display7SegLed+0x312>
	case 5:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 80004bc:	2200      	movs	r2, #0
 80004be:	2101      	movs	r1, #1
 80004c0:	485b      	ldr	r0, [pc, #364]	@ (8000630 <display7SegLed+0x31c>)
 80004c2:	f001 fb9e 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , SET);
 80004c6:	2201      	movs	r2, #1
 80004c8:	2102      	movs	r1, #2
 80004ca:	4859      	ldr	r0, [pc, #356]	@ (8000630 <display7SegLed+0x31c>)
 80004cc:	f001 fb99 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 80004d0:	2200      	movs	r2, #0
 80004d2:	2104      	movs	r1, #4
 80004d4:	4856      	ldr	r0, [pc, #344]	@ (8000630 <display7SegLed+0x31c>)
 80004d6:	f001 fb94 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , RESET);
 80004da:	2200      	movs	r2, #0
 80004dc:	2108      	movs	r1, #8
 80004de:	4854      	ldr	r0, [pc, #336]	@ (8000630 <display7SegLed+0x31c>)
 80004e0:	f001 fb8f 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , SET);
 80004e4:	2201      	movs	r2, #1
 80004e6:	2110      	movs	r1, #16
 80004e8:	4851      	ldr	r0, [pc, #324]	@ (8000630 <display7SegLed+0x31c>)
 80004ea:	f001 fb8a 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , RESET);
 80004ee:	2200      	movs	r2, #0
 80004f0:	2120      	movs	r1, #32
 80004f2:	484f      	ldr	r0, [pc, #316]	@ (8000630 <display7SegLed+0x31c>)
 80004f4:	f001 fb85 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , RESET);
 80004f8:	2200      	movs	r2, #0
 80004fa:	2140      	movs	r1, #64	@ 0x40
 80004fc:	484c      	ldr	r0, [pc, #304]	@ (8000630 <display7SegLed+0x31c>)
 80004fe:	f001 fb80 	bl	8001c02 <HAL_GPIO_WritePin>
		break;
 8000502:	e090      	b.n	8000626 <display7SegLed+0x312>
	case 6:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 8000504:	2200      	movs	r2, #0
 8000506:	2101      	movs	r1, #1
 8000508:	4849      	ldr	r0, [pc, #292]	@ (8000630 <display7SegLed+0x31c>)
 800050a:	f001 fb7a 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , SET);
 800050e:	2201      	movs	r2, #1
 8000510:	2102      	movs	r1, #2
 8000512:	4847      	ldr	r0, [pc, #284]	@ (8000630 <display7SegLed+0x31c>)
 8000514:	f001 fb75 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 8000518:	2200      	movs	r2, #0
 800051a:	2104      	movs	r1, #4
 800051c:	4844      	ldr	r0, [pc, #272]	@ (8000630 <display7SegLed+0x31c>)
 800051e:	f001 fb70 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , RESET);
 8000522:	2200      	movs	r2, #0
 8000524:	2108      	movs	r1, #8
 8000526:	4842      	ldr	r0, [pc, #264]	@ (8000630 <display7SegLed+0x31c>)
 8000528:	f001 fb6b 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , RESET);
 800052c:	2200      	movs	r2, #0
 800052e:	2110      	movs	r1, #16
 8000530:	483f      	ldr	r0, [pc, #252]	@ (8000630 <display7SegLed+0x31c>)
 8000532:	f001 fb66 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , RESET);
 8000536:	2200      	movs	r2, #0
 8000538:	2120      	movs	r1, #32
 800053a:	483d      	ldr	r0, [pc, #244]	@ (8000630 <display7SegLed+0x31c>)
 800053c:	f001 fb61 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , RESET);
 8000540:	2200      	movs	r2, #0
 8000542:	2140      	movs	r1, #64	@ 0x40
 8000544:	483a      	ldr	r0, [pc, #232]	@ (8000630 <display7SegLed+0x31c>)
 8000546:	f001 fb5c 	bl	8001c02 <HAL_GPIO_WritePin>
		break;
 800054a:	e06c      	b.n	8000626 <display7SegLed+0x312>
	case 7:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 800054c:	2200      	movs	r2, #0
 800054e:	2101      	movs	r1, #1
 8000550:	4837      	ldr	r0, [pc, #220]	@ (8000630 <display7SegLed+0x31c>)
 8000552:	f001 fb56 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 8000556:	2200      	movs	r2, #0
 8000558:	2102      	movs	r1, #2
 800055a:	4835      	ldr	r0, [pc, #212]	@ (8000630 <display7SegLed+0x31c>)
 800055c:	f001 fb51 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 8000560:	2200      	movs	r2, #0
 8000562:	2104      	movs	r1, #4
 8000564:	4832      	ldr	r0, [pc, #200]	@ (8000630 <display7SegLed+0x31c>)
 8000566:	f001 fb4c 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , SET);
 800056a:	2201      	movs	r2, #1
 800056c:	2108      	movs	r1, #8
 800056e:	4830      	ldr	r0, [pc, #192]	@ (8000630 <display7SegLed+0x31c>)
 8000570:	f001 fb47 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , SET);
 8000574:	2201      	movs	r2, #1
 8000576:	2110      	movs	r1, #16
 8000578:	482d      	ldr	r0, [pc, #180]	@ (8000630 <display7SegLed+0x31c>)
 800057a:	f001 fb42 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , SET);
 800057e:	2201      	movs	r2, #1
 8000580:	2120      	movs	r1, #32
 8000582:	482b      	ldr	r0, [pc, #172]	@ (8000630 <display7SegLed+0x31c>)
 8000584:	f001 fb3d 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , SET);
 8000588:	2201      	movs	r2, #1
 800058a:	2140      	movs	r1, #64	@ 0x40
 800058c:	4828      	ldr	r0, [pc, #160]	@ (8000630 <display7SegLed+0x31c>)
 800058e:	f001 fb38 	bl	8001c02 <HAL_GPIO_WritePin>
		break;
 8000592:	e048      	b.n	8000626 <display7SegLed+0x312>
	case 8:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 8000594:	2200      	movs	r2, #0
 8000596:	2101      	movs	r1, #1
 8000598:	4825      	ldr	r0, [pc, #148]	@ (8000630 <display7SegLed+0x31c>)
 800059a:	f001 fb32 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 800059e:	2200      	movs	r2, #0
 80005a0:	2102      	movs	r1, #2
 80005a2:	4823      	ldr	r0, [pc, #140]	@ (8000630 <display7SegLed+0x31c>)
 80005a4:	f001 fb2d 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 80005a8:	2200      	movs	r2, #0
 80005aa:	2104      	movs	r1, #4
 80005ac:	4820      	ldr	r0, [pc, #128]	@ (8000630 <display7SegLed+0x31c>)
 80005ae:	f001 fb28 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , RESET);
 80005b2:	2200      	movs	r2, #0
 80005b4:	2108      	movs	r1, #8
 80005b6:	481e      	ldr	r0, [pc, #120]	@ (8000630 <display7SegLed+0x31c>)
 80005b8:	f001 fb23 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , RESET);
 80005bc:	2200      	movs	r2, #0
 80005be:	2110      	movs	r1, #16
 80005c0:	481b      	ldr	r0, [pc, #108]	@ (8000630 <display7SegLed+0x31c>)
 80005c2:	f001 fb1e 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , RESET);
 80005c6:	2200      	movs	r2, #0
 80005c8:	2120      	movs	r1, #32
 80005ca:	4819      	ldr	r0, [pc, #100]	@ (8000630 <display7SegLed+0x31c>)
 80005cc:	f001 fb19 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , RESET);
 80005d0:	2200      	movs	r2, #0
 80005d2:	2140      	movs	r1, #64	@ 0x40
 80005d4:	4816      	ldr	r0, [pc, #88]	@ (8000630 <display7SegLed+0x31c>)
 80005d6:	f001 fb14 	bl	8001c02 <HAL_GPIO_WritePin>
		break;
 80005da:	e024      	b.n	8000626 <display7SegLed+0x312>
	case 9:
		HAL_GPIO_WritePin(a_GPIO_Port , a_Pin , RESET);
 80005dc:	2200      	movs	r2, #0
 80005de:	2101      	movs	r1, #1
 80005e0:	4813      	ldr	r0, [pc, #76]	@ (8000630 <display7SegLed+0x31c>)
 80005e2:	f001 fb0e 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(b_GPIO_Port , b_Pin , RESET);
 80005e6:	2200      	movs	r2, #0
 80005e8:	2102      	movs	r1, #2
 80005ea:	4811      	ldr	r0, [pc, #68]	@ (8000630 <display7SegLed+0x31c>)
 80005ec:	f001 fb09 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(c_GPIO_Port , c_Pin , RESET);
 80005f0:	2200      	movs	r2, #0
 80005f2:	2104      	movs	r1, #4
 80005f4:	480e      	ldr	r0, [pc, #56]	@ (8000630 <display7SegLed+0x31c>)
 80005f6:	f001 fb04 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(d_GPIO_Port , d_Pin , RESET);
 80005fa:	2200      	movs	r2, #0
 80005fc:	2108      	movs	r1, #8
 80005fe:	480c      	ldr	r0, [pc, #48]	@ (8000630 <display7SegLed+0x31c>)
 8000600:	f001 faff 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(e_GPIO_Port , e_Pin , SET);
 8000604:	2201      	movs	r2, #1
 8000606:	2110      	movs	r1, #16
 8000608:	4809      	ldr	r0, [pc, #36]	@ (8000630 <display7SegLed+0x31c>)
 800060a:	f001 fafa 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(f_GPIO_Port , f_Pin , RESET);
 800060e:	2200      	movs	r2, #0
 8000610:	2120      	movs	r1, #32
 8000612:	4807      	ldr	r0, [pc, #28]	@ (8000630 <display7SegLed+0x31c>)
 8000614:	f001 faf5 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(g_GPIO_Port , g_Pin , RESET);
 8000618:	2200      	movs	r2, #0
 800061a:	2140      	movs	r1, #64	@ 0x40
 800061c:	4804      	ldr	r0, [pc, #16]	@ (8000630 <display7SegLed+0x31c>)
 800061e:	f001 faf0 	bl	8001c02 <HAL_GPIO_WritePin>
		break;
 8000622:	e000      	b.n	8000626 <display7SegLed+0x312>
	default:
		break;
 8000624:	bf00      	nop
	}
}
 8000626:	bf00      	nop
 8000628:	3708      	adds	r7, #8
 800062a:	46bd      	mov	sp, r7
 800062c:	bd80      	pop	{r7, pc}
 800062e:	bf00      	nop
 8000630:	40010c00 	.word	0x40010c00

08000634 <updateBufer>:

void updateBufer(){
 8000634:	b480      	push	{r7}
 8000636:	af00      	add	r7, sp, #0
    led_buffer[0] = (time13 > 99) ? 9 : (time13 / 10);
 8000638:	4b26      	ldr	r3, [pc, #152]	@ (80006d4 <updateBufer+0xa0>)
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	2b63      	cmp	r3, #99	@ 0x63
 800063e:	dc08      	bgt.n	8000652 <updateBufer+0x1e>
 8000640:	4b24      	ldr	r3, [pc, #144]	@ (80006d4 <updateBufer+0xa0>)
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	4a24      	ldr	r2, [pc, #144]	@ (80006d8 <updateBufer+0xa4>)
 8000646:	fb82 1203 	smull	r1, r2, r2, r3
 800064a:	1092      	asrs	r2, r2, #2
 800064c:	17db      	asrs	r3, r3, #31
 800064e:	1ad3      	subs	r3, r2, r3
 8000650:	e000      	b.n	8000654 <updateBufer+0x20>
 8000652:	2309      	movs	r3, #9
 8000654:	4a21      	ldr	r2, [pc, #132]	@ (80006dc <updateBufer+0xa8>)
 8000656:	6013      	str	r3, [r2, #0]
    led_buffer[1] = (time13 > 99) ? 9 : (time13 % 10);
 8000658:	4b1e      	ldr	r3, [pc, #120]	@ (80006d4 <updateBufer+0xa0>)
 800065a:	681b      	ldr	r3, [r3, #0]
 800065c:	2b63      	cmp	r3, #99	@ 0x63
 800065e:	dc0d      	bgt.n	800067c <updateBufer+0x48>
 8000660:	4b1c      	ldr	r3, [pc, #112]	@ (80006d4 <updateBufer+0xa0>)
 8000662:	6819      	ldr	r1, [r3, #0]
 8000664:	4b1c      	ldr	r3, [pc, #112]	@ (80006d8 <updateBufer+0xa4>)
 8000666:	fb83 2301 	smull	r2, r3, r3, r1
 800066a:	109a      	asrs	r2, r3, #2
 800066c:	17cb      	asrs	r3, r1, #31
 800066e:	1ad2      	subs	r2, r2, r3
 8000670:	4613      	mov	r3, r2
 8000672:	009b      	lsls	r3, r3, #2
 8000674:	4413      	add	r3, r2
 8000676:	005b      	lsls	r3, r3, #1
 8000678:	1aca      	subs	r2, r1, r3
 800067a:	e000      	b.n	800067e <updateBufer+0x4a>
 800067c:	2209      	movs	r2, #9
 800067e:	4b17      	ldr	r3, [pc, #92]	@ (80006dc <updateBufer+0xa8>)
 8000680:	605a      	str	r2, [r3, #4]

    led_buffer[2] = (time24 > 99) ? 9 : (time24 / 10);
 8000682:	4b17      	ldr	r3, [pc, #92]	@ (80006e0 <updateBufer+0xac>)
 8000684:	681b      	ldr	r3, [r3, #0]
 8000686:	2b63      	cmp	r3, #99	@ 0x63
 8000688:	dc08      	bgt.n	800069c <updateBufer+0x68>
 800068a:	4b15      	ldr	r3, [pc, #84]	@ (80006e0 <updateBufer+0xac>)
 800068c:	681b      	ldr	r3, [r3, #0]
 800068e:	4a12      	ldr	r2, [pc, #72]	@ (80006d8 <updateBufer+0xa4>)
 8000690:	fb82 1203 	smull	r1, r2, r2, r3
 8000694:	1092      	asrs	r2, r2, #2
 8000696:	17db      	asrs	r3, r3, #31
 8000698:	1ad3      	subs	r3, r2, r3
 800069a:	e000      	b.n	800069e <updateBufer+0x6a>
 800069c:	2309      	movs	r3, #9
 800069e:	4a0f      	ldr	r2, [pc, #60]	@ (80006dc <updateBufer+0xa8>)
 80006a0:	6093      	str	r3, [r2, #8]
    led_buffer[3] = (time24 > 99) ? 9 : (time24 % 10);
 80006a2:	4b0f      	ldr	r3, [pc, #60]	@ (80006e0 <updateBufer+0xac>)
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	2b63      	cmp	r3, #99	@ 0x63
 80006a8:	dc0d      	bgt.n	80006c6 <updateBufer+0x92>
 80006aa:	4b0d      	ldr	r3, [pc, #52]	@ (80006e0 <updateBufer+0xac>)
 80006ac:	6819      	ldr	r1, [r3, #0]
 80006ae:	4b0a      	ldr	r3, [pc, #40]	@ (80006d8 <updateBufer+0xa4>)
 80006b0:	fb83 2301 	smull	r2, r3, r3, r1
 80006b4:	109a      	asrs	r2, r3, #2
 80006b6:	17cb      	asrs	r3, r1, #31
 80006b8:	1ad2      	subs	r2, r2, r3
 80006ba:	4613      	mov	r3, r2
 80006bc:	009b      	lsls	r3, r3, #2
 80006be:	4413      	add	r3, r2
 80006c0:	005b      	lsls	r3, r3, #1
 80006c2:	1aca      	subs	r2, r1, r3
 80006c4:	e000      	b.n	80006c8 <updateBufer+0x94>
 80006c6:	2209      	movs	r2, #9
 80006c8:	4b04      	ldr	r3, [pc, #16]	@ (80006dc <updateBufer+0xa8>)
 80006ca:	60da      	str	r2, [r3, #12]
}
 80006cc:	bf00      	nop
 80006ce:	46bd      	mov	sp, r7
 80006d0:	bc80      	pop	{r7}
 80006d2:	4770      	bx	lr
 80006d4:	200000a8 	.word	0x200000a8
 80006d8:	66666667 	.word	0x66666667
 80006dc:	2000008c 	.word	0x2000008c
 80006e0:	200000ac 	.word	0x200000ac

080006e4 <update7SegLed>:

void update7SegLed(int index){
 80006e4:	b580      	push	{r7, lr}
 80006e6:	b082      	sub	sp, #8
 80006e8:	af00      	add	r7, sp, #0
 80006ea:	6078      	str	r0, [r7, #4]
    HAL_GPIO_WritePin(en1_GPIO_Port, en1_Pin, SET);
 80006ec:	2201      	movs	r2, #1
 80006ee:	2180      	movs	r1, #128	@ 0x80
 80006f0:	482b      	ldr	r0, [pc, #172]	@ (80007a0 <update7SegLed+0xbc>)
 80006f2:	f001 fa86 	bl	8001c02 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(en2_GPIO_Port, en2_Pin, SET);
 80006f6:	2201      	movs	r2, #1
 80006f8:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80006fc:	4828      	ldr	r0, [pc, #160]	@ (80007a0 <update7SegLed+0xbc>)
 80006fe:	f001 fa80 	bl	8001c02 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(en3_GPIO_Port, en3_Pin, SET);
 8000702:	2201      	movs	r2, #1
 8000704:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000708:	4825      	ldr	r0, [pc, #148]	@ (80007a0 <update7SegLed+0xbc>)
 800070a:	f001 fa7a 	bl	8001c02 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(en4_GPIO_Port, en4_Pin, SET);
 800070e:	2201      	movs	r2, #1
 8000710:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000714:	4822      	ldr	r0, [pc, #136]	@ (80007a0 <update7SegLed+0xbc>)
 8000716:	f001 fa74 	bl	8001c02 <HAL_GPIO_WritePin>

    switch(index){
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	2b03      	cmp	r3, #3
 800071e:	d83a      	bhi.n	8000796 <update7SegLed+0xb2>
 8000720:	a201      	add	r2, pc, #4	@ (adr r2, 8000728 <update7SegLed+0x44>)
 8000722:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000726:	bf00      	nop
 8000728:	08000739 	.word	0x08000739
 800072c:	0800074f 	.word	0x0800074f
 8000730:	08000767 	.word	0x08000767
 8000734:	0800077f 	.word	0x0800077f
    case 0:
    	HAL_GPIO_WritePin(en1_GPIO_Port , en1_Pin , RESET);
 8000738:	2200      	movs	r2, #0
 800073a:	2180      	movs	r1, #128	@ 0x80
 800073c:	4818      	ldr	r0, [pc, #96]	@ (80007a0 <update7SegLed+0xbc>)
 800073e:	f001 fa60 	bl	8001c02 <HAL_GPIO_WritePin>
    	display7SegLed(led_buffer[0]);
 8000742:	4b18      	ldr	r3, [pc, #96]	@ (80007a4 <update7SegLed+0xc0>)
 8000744:	681b      	ldr	r3, [r3, #0]
 8000746:	4618      	mov	r0, r3
 8000748:	f7ff fde4 	bl	8000314 <display7SegLed>
    	break;
 800074c:	e024      	b.n	8000798 <update7SegLed+0xb4>
    case 1:
    	HAL_GPIO_WritePin(en2_GPIO_Port , en2_Pin , RESET);
 800074e:	2200      	movs	r2, #0
 8000750:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000754:	4812      	ldr	r0, [pc, #72]	@ (80007a0 <update7SegLed+0xbc>)
 8000756:	f001 fa54 	bl	8001c02 <HAL_GPIO_WritePin>
    	display7SegLed(led_buffer[1]);
 800075a:	4b12      	ldr	r3, [pc, #72]	@ (80007a4 <update7SegLed+0xc0>)
 800075c:	685b      	ldr	r3, [r3, #4]
 800075e:	4618      	mov	r0, r3
 8000760:	f7ff fdd8 	bl	8000314 <display7SegLed>
    	break;
 8000764:	e018      	b.n	8000798 <update7SegLed+0xb4>
    case 2:
    	HAL_GPIO_WritePin(en3_GPIO_Port , en3_Pin , RESET);
 8000766:	2200      	movs	r2, #0
 8000768:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800076c:	480c      	ldr	r0, [pc, #48]	@ (80007a0 <update7SegLed+0xbc>)
 800076e:	f001 fa48 	bl	8001c02 <HAL_GPIO_WritePin>
    	display7SegLed(led_buffer[2]);
 8000772:	4b0c      	ldr	r3, [pc, #48]	@ (80007a4 <update7SegLed+0xc0>)
 8000774:	689b      	ldr	r3, [r3, #8]
 8000776:	4618      	mov	r0, r3
 8000778:	f7ff fdcc 	bl	8000314 <display7SegLed>
    	break;
 800077c:	e00c      	b.n	8000798 <update7SegLed+0xb4>
    case 3:
    	HAL_GPIO_WritePin(en4_GPIO_Port , en4_Pin , RESET);
 800077e:	2200      	movs	r2, #0
 8000780:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000784:	4806      	ldr	r0, [pc, #24]	@ (80007a0 <update7SegLed+0xbc>)
 8000786:	f001 fa3c 	bl	8001c02 <HAL_GPIO_WritePin>
    	display7SegLed(led_buffer[3]);
 800078a:	4b06      	ldr	r3, [pc, #24]	@ (80007a4 <update7SegLed+0xc0>)
 800078c:	68db      	ldr	r3, [r3, #12]
 800078e:	4618      	mov	r0, r3
 8000790:	f7ff fdc0 	bl	8000314 <display7SegLed>
    	break;
 8000794:	e000      	b.n	8000798 <update7SegLed+0xb4>
    default:
    	break;
 8000796:	bf00      	nop
    }
}
 8000798:	bf00      	nop
 800079a:	3708      	adds	r7, #8
 800079c:	46bd      	mov	sp, r7
 800079e:	bd80      	pop	{r7, pc}
 80007a0:	40010c00 	.word	0x40010c00
 80007a4:	2000008c 	.word	0x2000008c

080007a8 <updateTimeForState>:

void updateTimeForState(int status){
 80007a8:	b480      	push	{r7}
 80007aa:	b083      	sub	sp, #12
 80007ac:	af00      	add	r7, sp, #0
 80007ae:	6078      	str	r0, [r7, #4]
	switch(status){
 80007b0:	687b      	ldr	r3, [r7, #4]
 80007b2:	3b02      	subs	r3, #2
 80007b4:	2b03      	cmp	r3, #3
 80007b6:	d82f      	bhi.n	8000818 <updateTimeForState+0x70>
 80007b8:	a201      	add	r2, pc, #4	@ (adr r2, 80007c0 <updateTimeForState+0x18>)
 80007ba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80007be:	bf00      	nop
 80007c0:	080007d1 	.word	0x080007d1
 80007c4:	080007e3 	.word	0x080007e3
 80007c8:	080007f5 	.word	0x080007f5
 80007cc:	08000807 	.word	0x08000807
	case RED13_GREEN24:
		time13 = timeRed;
 80007d0:	4b14      	ldr	r3, [pc, #80]	@ (8000824 <updateTimeForState+0x7c>)
 80007d2:	681b      	ldr	r3, [r3, #0]
 80007d4:	4a14      	ldr	r2, [pc, #80]	@ (8000828 <updateTimeForState+0x80>)
 80007d6:	6013      	str	r3, [r2, #0]
		time24 = timeGreen;
 80007d8:	4b14      	ldr	r3, [pc, #80]	@ (800082c <updateTimeForState+0x84>)
 80007da:	681b      	ldr	r3, [r3, #0]
 80007dc:	4a14      	ldr	r2, [pc, #80]	@ (8000830 <updateTimeForState+0x88>)
 80007de:	6013      	str	r3, [r2, #0]
		break;
 80007e0:	e01b      	b.n	800081a <updateTimeForState+0x72>
	case RED13_YELLOW24:
		time13 = time13remain;
 80007e2:	4b14      	ldr	r3, [pc, #80]	@ (8000834 <updateTimeForState+0x8c>)
 80007e4:	681b      	ldr	r3, [r3, #0]
 80007e6:	4a10      	ldr	r2, [pc, #64]	@ (8000828 <updateTimeForState+0x80>)
 80007e8:	6013      	str	r3, [r2, #0]
		time24 = timeYellow;
 80007ea:	4b13      	ldr	r3, [pc, #76]	@ (8000838 <updateTimeForState+0x90>)
 80007ec:	681b      	ldr	r3, [r3, #0]
 80007ee:	4a10      	ldr	r2, [pc, #64]	@ (8000830 <updateTimeForState+0x88>)
 80007f0:	6013      	str	r3, [r2, #0]
		break;
 80007f2:	e012      	b.n	800081a <updateTimeForState+0x72>
	case GREEN13_RED24:
		time13 = timeGreen;
 80007f4:	4b0d      	ldr	r3, [pc, #52]	@ (800082c <updateTimeForState+0x84>)
 80007f6:	681b      	ldr	r3, [r3, #0]
 80007f8:	4a0b      	ldr	r2, [pc, #44]	@ (8000828 <updateTimeForState+0x80>)
 80007fa:	6013      	str	r3, [r2, #0]
		time24 = timeRed;
 80007fc:	4b09      	ldr	r3, [pc, #36]	@ (8000824 <updateTimeForState+0x7c>)
 80007fe:	681b      	ldr	r3, [r3, #0]
 8000800:	4a0b      	ldr	r2, [pc, #44]	@ (8000830 <updateTimeForState+0x88>)
 8000802:	6013      	str	r3, [r2, #0]
		break;
 8000804:	e009      	b.n	800081a <updateTimeForState+0x72>
	case YELLOW13_RED24:
		time13 = timeYellow;
 8000806:	4b0c      	ldr	r3, [pc, #48]	@ (8000838 <updateTimeForState+0x90>)
 8000808:	681b      	ldr	r3, [r3, #0]
 800080a:	4a07      	ldr	r2, [pc, #28]	@ (8000828 <updateTimeForState+0x80>)
 800080c:	6013      	str	r3, [r2, #0]
		time24 = time24remain;
 800080e:	4b0b      	ldr	r3, [pc, #44]	@ (800083c <updateTimeForState+0x94>)
 8000810:	681b      	ldr	r3, [r3, #0]
 8000812:	4a07      	ldr	r2, [pc, #28]	@ (8000830 <updateTimeForState+0x88>)
 8000814:	6013      	str	r3, [r2, #0]
		break;
 8000816:	e000      	b.n	800081a <updateTimeForState+0x72>
	default:
		break;
 8000818:	bf00      	nop
	}
}
 800081a:	bf00      	nop
 800081c:	370c      	adds	r7, #12
 800081e:	46bd      	mov	sp, r7
 8000820:	bc80      	pop	{r7}
 8000822:	4770      	bx	lr
 8000824:	20000040 	.word	0x20000040
 8000828:	200000a8 	.word	0x200000a8
 800082c:	20000044 	.word	0x20000044
 8000830:	200000ac 	.word	0x200000ac
 8000834:	200000b0 	.word	0x200000b0
 8000838:	20000048 	.word	0x20000048
 800083c:	200000b4 	.word	0x200000b4

08000840 <turnOffAll7Seg>:

void turnOffAll7Seg(){
 8000840:	b580      	push	{r7, lr}
 8000842:	af00      	add	r7, sp, #0
    HAL_GPIO_WritePin(en1_GPIO_Port, en1_Pin, SET);
 8000844:	2201      	movs	r2, #1
 8000846:	2180      	movs	r1, #128	@ 0x80
 8000848:	480b      	ldr	r0, [pc, #44]	@ (8000878 <turnOffAll7Seg+0x38>)
 800084a:	f001 f9da 	bl	8001c02 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(en2_GPIO_Port, en2_Pin, SET);
 800084e:	2201      	movs	r2, #1
 8000850:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000854:	4808      	ldr	r0, [pc, #32]	@ (8000878 <turnOffAll7Seg+0x38>)
 8000856:	f001 f9d4 	bl	8001c02 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(en3_GPIO_Port, en3_Pin, SET);
 800085a:	2201      	movs	r2, #1
 800085c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000860:	4805      	ldr	r0, [pc, #20]	@ (8000878 <turnOffAll7Seg+0x38>)
 8000862:	f001 f9ce 	bl	8001c02 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(en4_GPIO_Port, en4_Pin, SET);
 8000866:	2201      	movs	r2, #1
 8000868:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800086c:	4802      	ldr	r0, [pc, #8]	@ (8000878 <turnOffAll7Seg+0x38>)
 800086e:	f001 f9c8 	bl	8001c02 <HAL_GPIO_WritePin>
}
 8000872:	bf00      	nop
 8000874:	bd80      	pop	{r7, pc}
 8000876:	bf00      	nop
 8000878:	40010c00 	.word	0x40010c00

0800087c <fsm_automatic>:

#include "fsm_automatic.h"
#include "software_timer.h"
int led_index;

void fsm_automatic(){
 800087c:	b580      	push	{r7, lr}
 800087e:	af00      	add	r7, sp, #0
	switch(status){
 8000880:	4ba4      	ldr	r3, [pc, #656]	@ (8000b14 <fsm_automatic+0x298>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	3b01      	subs	r3, #1
 8000886:	2b04      	cmp	r3, #4
 8000888:	f200 826b 	bhi.w	8000d62 <fsm_automatic+0x4e6>
 800088c:	a201      	add	r2, pc, #4	@ (adr r2, 8000894 <fsm_automatic+0x18>)
 800088e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000892:	bf00      	nop
 8000894:	080008a9 	.word	0x080008a9
 8000898:	080008eb 	.word	0x080008eb
 800089c:	08000a05 	.word	0x08000a05
 80008a0:	08000b3d 	.word	0x08000b3d
 80008a4:	08000c55 	.word	0x08000c55
	case INIT:
		status = RED13_GREEN24;
 80008a8:	4b9a      	ldr	r3, [pc, #616]	@ (8000b14 <fsm_automatic+0x298>)
 80008aa:	2202      	movs	r2, #2
 80008ac:	601a      	str	r2, [r3, #0]
		led_index = 0;
 80008ae:	4b9a      	ldr	r3, [pc, #616]	@ (8000b18 <fsm_automatic+0x29c>)
 80008b0:	2200      	movs	r2, #0
 80008b2:	601a      	str	r2, [r3, #0]
		setTimer(1 , timeGreen*1000);
 80008b4:	4b99      	ldr	r3, [pc, #612]	@ (8000b1c <fsm_automatic+0x2a0>)
 80008b6:	681b      	ldr	r3, [r3, #0]
 80008b8:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80008bc:	fb02 f303 	mul.w	r3, r2, r3
 80008c0:	4619      	mov	r1, r3
 80008c2:	2001      	movs	r0, #1
 80008c4:	f000 fd6c 	bl	80013a0 <setTimer>
		timer_flag[2] = 1;
 80008c8:	4b95      	ldr	r3, [pc, #596]	@ (8000b20 <fsm_automatic+0x2a4>)
 80008ca:	2201      	movs	r2, #1
 80008cc:	609a      	str	r2, [r3, #8]
		timer_flag[3] = 1;
 80008ce:	4b94      	ldr	r3, [pc, #592]	@ (8000b20 <fsm_automatic+0x2a4>)
 80008d0:	2201      	movs	r2, #1
 80008d2:	60da      	str	r2, [r3, #12]
		time13 = timeRed;
 80008d4:	4b93      	ldr	r3, [pc, #588]	@ (8000b24 <fsm_automatic+0x2a8>)
 80008d6:	681b      	ldr	r3, [r3, #0]
 80008d8:	4a93      	ldr	r2, [pc, #588]	@ (8000b28 <fsm_automatic+0x2ac>)
 80008da:	6013      	str	r3, [r2, #0]
		time24 = timeGreen;
 80008dc:	4b8f      	ldr	r3, [pc, #572]	@ (8000b1c <fsm_automatic+0x2a0>)
 80008de:	681b      	ldr	r3, [r3, #0]
 80008e0:	4a92      	ldr	r2, [pc, #584]	@ (8000b2c <fsm_automatic+0x2b0>)
 80008e2:	6013      	str	r3, [r2, #0]
		updateBufer();
 80008e4:	f7ff fea6 	bl	8000634 <updateBufer>
		break;
 80008e8:	e244      	b.n	8000d74 <fsm_automatic+0x4f8>
////////////////////////////////////////////////
	case RED13_GREEN24:
		//set cho lane 13
		HAL_GPIO_WritePin(RED_13_GPIO_Port , RED_13_Pin , GPIO_PIN_RESET);
 80008ea:	2200      	movs	r2, #0
 80008ec:	2120      	movs	r1, #32
 80008ee:	4890      	ldr	r0, [pc, #576]	@ (8000b30 <fsm_automatic+0x2b4>)
 80008f0:	f001 f987 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_13_GPIO_Port , YELLOW_13_Pin , GPIO_PIN_SET);
 80008f4:	2201      	movs	r2, #1
 80008f6:	2140      	movs	r1, #64	@ 0x40
 80008f8:	488d      	ldr	r0, [pc, #564]	@ (8000b30 <fsm_automatic+0x2b4>)
 80008fa:	f001 f982 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_13_GPIO_Port , GREEN_13_Pin , GPIO_PIN_SET);
 80008fe:	2201      	movs	r2, #1
 8000900:	2180      	movs	r1, #128	@ 0x80
 8000902:	488b      	ldr	r0, [pc, #556]	@ (8000b30 <fsm_automatic+0x2b4>)
 8000904:	f001 f97d 	bl	8001c02 <HAL_GPIO_WritePin>
		//set cho lane 24
		HAL_GPIO_WritePin(RED_24_GPIO_Port , RED_24_Pin , GPIO_PIN_SET);
 8000908:	2201      	movs	r2, #1
 800090a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800090e:	4888      	ldr	r0, [pc, #544]	@ (8000b30 <fsm_automatic+0x2b4>)
 8000910:	f001 f977 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_24_GPIO_Port , YELLOW_24_Pin , GPIO_PIN_SET);
 8000914:	2201      	movs	r2, #1
 8000916:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800091a:	4885      	ldr	r0, [pc, #532]	@ (8000b30 <fsm_automatic+0x2b4>)
 800091c:	f001 f971 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_24_GPIO_Port , GREEN_24_Pin , GPIO_PIN_RESET);
 8000920:	2200      	movs	r2, #0
 8000922:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000926:	4882      	ldr	r0, [pc, #520]	@ (8000b30 <fsm_automatic+0x2b4>)
 8000928:	f001 f96b 	bl	8001c02 <HAL_GPIO_WritePin>

		if(isTimerFlagSet(1)){
 800092c:	2001      	movs	r0, #1
 800092e:	f000 fd5d 	bl	80013ec <isTimerFlagSet>
 8000932:	4603      	mov	r3, r0
 8000934:	2b00      	cmp	r3, #0
 8000936:	d015      	beq.n	8000964 <fsm_automatic+0xe8>
			time13remain = time13;
 8000938:	4b7b      	ldr	r3, [pc, #492]	@ (8000b28 <fsm_automatic+0x2ac>)
 800093a:	681b      	ldr	r3, [r3, #0]
 800093c:	4a7d      	ldr	r2, [pc, #500]	@ (8000b34 <fsm_automatic+0x2b8>)
 800093e:	6013      	str	r3, [r2, #0]
			status = RED13_YELLOW24;
 8000940:	4b74      	ldr	r3, [pc, #464]	@ (8000b14 <fsm_automatic+0x298>)
 8000942:	2203      	movs	r2, #3
 8000944:	601a      	str	r2, [r3, #0]
			setTimer(1 , timeYellow*1000);
 8000946:	4b7c      	ldr	r3, [pc, #496]	@ (8000b38 <fsm_automatic+0x2bc>)
 8000948:	681b      	ldr	r3, [r3, #0]
 800094a:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800094e:	fb02 f303 	mul.w	r3, r2, r3
 8000952:	4619      	mov	r1, r3
 8000954:	2001      	movs	r0, #1
 8000956:	f000 fd23 	bl	80013a0 <setTimer>
			updateTimeForState(status);
 800095a:	4b6e      	ldr	r3, [pc, #440]	@ (8000b14 <fsm_automatic+0x298>)
 800095c:	681b      	ldr	r3, [r3, #0]
 800095e:	4618      	mov	r0, r3
 8000960:	f7ff ff22 	bl	80007a8 <updateTimeForState>
		}
		if(isTimerFlagSet(2)){
 8000964:	2002      	movs	r0, #2
 8000966:	f000 fd41 	bl	80013ec <isTimerFlagSet>
 800096a:	4603      	mov	r3, r0
 800096c:	2b00      	cmp	r3, #0
 800096e:	d014      	beq.n	800099a <fsm_automatic+0x11e>
			update7SegLed(led_index);
 8000970:	4b69      	ldr	r3, [pc, #420]	@ (8000b18 <fsm_automatic+0x29c>)
 8000972:	681b      	ldr	r3, [r3, #0]
 8000974:	4618      	mov	r0, r3
 8000976:	f7ff feb5 	bl	80006e4 <update7SegLed>
			setTimer(2 , 250);
 800097a:	21fa      	movs	r1, #250	@ 0xfa
 800097c:	2002      	movs	r0, #2
 800097e:	f000 fd0f 	bl	80013a0 <setTimer>
			led_index++;
 8000982:	4b65      	ldr	r3, [pc, #404]	@ (8000b18 <fsm_automatic+0x29c>)
 8000984:	681b      	ldr	r3, [r3, #0]
 8000986:	3301      	adds	r3, #1
 8000988:	4a63      	ldr	r2, [pc, #396]	@ (8000b18 <fsm_automatic+0x29c>)
 800098a:	6013      	str	r3, [r2, #0]
			if(led_index >= 4){
 800098c:	4b62      	ldr	r3, [pc, #392]	@ (8000b18 <fsm_automatic+0x29c>)
 800098e:	681b      	ldr	r3, [r3, #0]
 8000990:	2b03      	cmp	r3, #3
 8000992:	dd02      	ble.n	800099a <fsm_automatic+0x11e>
				led_index = 0;
 8000994:	4b60      	ldr	r3, [pc, #384]	@ (8000b18 <fsm_automatic+0x29c>)
 8000996:	2200      	movs	r2, #0
 8000998:	601a      	str	r2, [r3, #0]
			}
		}
		if(isTimerFlagSet(3)){
 800099a:	2003      	movs	r0, #3
 800099c:	f000 fd26 	bl	80013ec <isTimerFlagSet>
 80009a0:	4603      	mov	r3, r0
 80009a2:	2b00      	cmp	r3, #0
 80009a4:	d010      	beq.n	80009c8 <fsm_automatic+0x14c>
			time13--;
 80009a6:	4b60      	ldr	r3, [pc, #384]	@ (8000b28 <fsm_automatic+0x2ac>)
 80009a8:	681b      	ldr	r3, [r3, #0]
 80009aa:	3b01      	subs	r3, #1
 80009ac:	4a5e      	ldr	r2, [pc, #376]	@ (8000b28 <fsm_automatic+0x2ac>)
 80009ae:	6013      	str	r3, [r2, #0]
			time24--;
 80009b0:	4b5e      	ldr	r3, [pc, #376]	@ (8000b2c <fsm_automatic+0x2b0>)
 80009b2:	681b      	ldr	r3, [r3, #0]
 80009b4:	3b01      	subs	r3, #1
 80009b6:	4a5d      	ldr	r2, [pc, #372]	@ (8000b2c <fsm_automatic+0x2b0>)
 80009b8:	6013      	str	r3, [r2, #0]
			updateBufer();
 80009ba:	f7ff fe3b 	bl	8000634 <updateBufer>
			setTimer(3 , 1000);
 80009be:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80009c2:	2003      	movs	r0, #3
 80009c4:	f000 fcec 	bl	80013a0 <setTimer>
		}

		if(isButtonPressed(MODE_BUTTON)==1){
 80009c8:	2000      	movs	r0, #0
 80009ca:	f7ff fbbf 	bl	800014c <isButtonPressed>
 80009ce:	4603      	mov	r3, r0
 80009d0:	2b01      	cmp	r3, #1
 80009d2:	f040 81c8 	bne.w	8000d66 <fsm_automatic+0x4ea>
			status = MODIFY_RED;
 80009d6:	4b4f      	ldr	r3, [pc, #316]	@ (8000b14 <fsm_automatic+0x298>)
 80009d8:	220b      	movs	r2, #11
 80009da:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 80009dc:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 80009e0:	2001      	movs	r0, #1
 80009e2:	f000 fcdd 	bl	80013a0 <setTimer>
			led_index = 0;
 80009e6:	4b4c      	ldr	r3, [pc, #304]	@ (8000b18 <fsm_automatic+0x29c>)
 80009e8:	2200      	movs	r2, #0
 80009ea:	601a      	str	r2, [r3, #0]
			timer_flag[2] = 1;
 80009ec:	4b4c      	ldr	r3, [pc, #304]	@ (8000b20 <fsm_automatic+0x2a4>)
 80009ee:	2201      	movs	r2, #1
 80009f0:	609a      	str	r2, [r3, #8]

			turnOffAll7Seg();
 80009f2:	f7ff ff25 	bl	8000840 <turnOffAll7Seg>
			turnoff_red();
 80009f6:	f000 fb71 	bl	80010dc <turnoff_red>
			turnoff_yellow();
 80009fa:	f000 fb81 	bl	8001100 <turnoff_yellow>
			turnoff_green();
 80009fe:	f000 fb91 	bl	8001124 <turnoff_green>
		}
		break;
 8000a02:	e1b0      	b.n	8000d66 <fsm_automatic+0x4ea>
//////////////////////////////////////////////
	case RED13_YELLOW24:
		updateTimeForState(status);
 8000a04:	4b43      	ldr	r3, [pc, #268]	@ (8000b14 <fsm_automatic+0x298>)
 8000a06:	681b      	ldr	r3, [r3, #0]
 8000a08:	4618      	mov	r0, r3
 8000a0a:	f7ff fecd 	bl	80007a8 <updateTimeForState>
		//set cho lane 13
		HAL_GPIO_WritePin(RED_13_GPIO_Port , RED_13_Pin , GPIO_PIN_RESET);
 8000a0e:	2200      	movs	r2, #0
 8000a10:	2120      	movs	r1, #32
 8000a12:	4847      	ldr	r0, [pc, #284]	@ (8000b30 <fsm_automatic+0x2b4>)
 8000a14:	f001 f8f5 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_13_GPIO_Port , YELLOW_13_Pin , GPIO_PIN_SET);
 8000a18:	2201      	movs	r2, #1
 8000a1a:	2140      	movs	r1, #64	@ 0x40
 8000a1c:	4844      	ldr	r0, [pc, #272]	@ (8000b30 <fsm_automatic+0x2b4>)
 8000a1e:	f001 f8f0 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_13_GPIO_Port , GREEN_13_Pin , GPIO_PIN_SET);
 8000a22:	2201      	movs	r2, #1
 8000a24:	2180      	movs	r1, #128	@ 0x80
 8000a26:	4842      	ldr	r0, [pc, #264]	@ (8000b30 <fsm_automatic+0x2b4>)
 8000a28:	f001 f8eb 	bl	8001c02 <HAL_GPIO_WritePin>
		//set cho lane 24
		HAL_GPIO_WritePin(RED_24_GPIO_Port , RED_24_Pin , GPIO_PIN_SET);
 8000a2c:	2201      	movs	r2, #1
 8000a2e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000a32:	483f      	ldr	r0, [pc, #252]	@ (8000b30 <fsm_automatic+0x2b4>)
 8000a34:	f001 f8e5 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_24_GPIO_Port , YELLOW_24_Pin , GPIO_PIN_RESET);
 8000a38:	2200      	movs	r2, #0
 8000a3a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000a3e:	483c      	ldr	r0, [pc, #240]	@ (8000b30 <fsm_automatic+0x2b4>)
 8000a40:	f001 f8df 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_24_GPIO_Port , GREEN_24_Pin , GPIO_PIN_SET);
 8000a44:	2201      	movs	r2, #1
 8000a46:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000a4a:	4839      	ldr	r0, [pc, #228]	@ (8000b30 <fsm_automatic+0x2b4>)
 8000a4c:	f001 f8d9 	bl	8001c02 <HAL_GPIO_WritePin>

		if(isTimerFlagSet(1) == 1){
 8000a50:	2001      	movs	r0, #1
 8000a52:	f000 fccb 	bl	80013ec <isTimerFlagSet>
 8000a56:	4603      	mov	r3, r0
 8000a58:	2b01      	cmp	r3, #1
 8000a5a:	d10c      	bne.n	8000a76 <fsm_automatic+0x1fa>
			status = GREEN13_RED24;
 8000a5c:	4b2d      	ldr	r3, [pc, #180]	@ (8000b14 <fsm_automatic+0x298>)
 8000a5e:	2204      	movs	r2, #4
 8000a60:	601a      	str	r2, [r3, #0]
			setTimer(1 , timeGreen*1000);
 8000a62:	4b2e      	ldr	r3, [pc, #184]	@ (8000b1c <fsm_automatic+0x2a0>)
 8000a64:	681b      	ldr	r3, [r3, #0]
 8000a66:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000a6a:	fb02 f303 	mul.w	r3, r2, r3
 8000a6e:	4619      	mov	r1, r3
 8000a70:	2001      	movs	r0, #1
 8000a72:	f000 fc95 	bl	80013a0 <setTimer>
		}
		if(isTimerFlagSet(2)){
 8000a76:	2002      	movs	r0, #2
 8000a78:	f000 fcb8 	bl	80013ec <isTimerFlagSet>
 8000a7c:	4603      	mov	r3, r0
 8000a7e:	2b00      	cmp	r3, #0
 8000a80:	d014      	beq.n	8000aac <fsm_automatic+0x230>
			update7SegLed(led_index);
 8000a82:	4b25      	ldr	r3, [pc, #148]	@ (8000b18 <fsm_automatic+0x29c>)
 8000a84:	681b      	ldr	r3, [r3, #0]
 8000a86:	4618      	mov	r0, r3
 8000a88:	f7ff fe2c 	bl	80006e4 <update7SegLed>
			setTimer(2 , 250);
 8000a8c:	21fa      	movs	r1, #250	@ 0xfa
 8000a8e:	2002      	movs	r0, #2
 8000a90:	f000 fc86 	bl	80013a0 <setTimer>
			led_index++;
 8000a94:	4b20      	ldr	r3, [pc, #128]	@ (8000b18 <fsm_automatic+0x29c>)
 8000a96:	681b      	ldr	r3, [r3, #0]
 8000a98:	3301      	adds	r3, #1
 8000a9a:	4a1f      	ldr	r2, [pc, #124]	@ (8000b18 <fsm_automatic+0x29c>)
 8000a9c:	6013      	str	r3, [r2, #0]
			if(led_index >= 4){
 8000a9e:	4b1e      	ldr	r3, [pc, #120]	@ (8000b18 <fsm_automatic+0x29c>)
 8000aa0:	681b      	ldr	r3, [r3, #0]
 8000aa2:	2b03      	cmp	r3, #3
 8000aa4:	dd02      	ble.n	8000aac <fsm_automatic+0x230>
				led_index = 0;
 8000aa6:	4b1c      	ldr	r3, [pc, #112]	@ (8000b18 <fsm_automatic+0x29c>)
 8000aa8:	2200      	movs	r2, #0
 8000aaa:	601a      	str	r2, [r3, #0]
			}
		}
		if(isTimerFlagSet(3)){
 8000aac:	2003      	movs	r0, #3
 8000aae:	f000 fc9d 	bl	80013ec <isTimerFlagSet>
 8000ab2:	4603      	mov	r3, r0
 8000ab4:	2b00      	cmp	r3, #0
 8000ab6:	d015      	beq.n	8000ae4 <fsm_automatic+0x268>
			time13--;
 8000ab8:	4b1b      	ldr	r3, [pc, #108]	@ (8000b28 <fsm_automatic+0x2ac>)
 8000aba:	681b      	ldr	r3, [r3, #0]
 8000abc:	3b01      	subs	r3, #1
 8000abe:	4a1a      	ldr	r2, [pc, #104]	@ (8000b28 <fsm_automatic+0x2ac>)
 8000ac0:	6013      	str	r3, [r2, #0]
			time24--;
 8000ac2:	4b1a      	ldr	r3, [pc, #104]	@ (8000b2c <fsm_automatic+0x2b0>)
 8000ac4:	681b      	ldr	r3, [r3, #0]
 8000ac6:	3b01      	subs	r3, #1
 8000ac8:	4a18      	ldr	r2, [pc, #96]	@ (8000b2c <fsm_automatic+0x2b0>)
 8000aca:	6013      	str	r3, [r2, #0]
			updateBufer();
 8000acc:	f7ff fdb2 	bl	8000634 <updateBufer>
			updateTimeForState(status);
 8000ad0:	4b10      	ldr	r3, [pc, #64]	@ (8000b14 <fsm_automatic+0x298>)
 8000ad2:	681b      	ldr	r3, [r3, #0]
 8000ad4:	4618      	mov	r0, r3
 8000ad6:	f7ff fe67 	bl	80007a8 <updateTimeForState>
			setTimer(3 , 1000);
 8000ada:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8000ade:	2003      	movs	r0, #3
 8000ae0:	f000 fc5e 	bl	80013a0 <setTimer>
		}
		if(isButtonPressed(MODE_BUTTON)==1){
 8000ae4:	2000      	movs	r0, #0
 8000ae6:	f7ff fb31 	bl	800014c <isButtonPressed>
 8000aea:	4603      	mov	r3, r0
 8000aec:	2b01      	cmp	r3, #1
 8000aee:	f040 813c 	bne.w	8000d6a <fsm_automatic+0x4ee>
			status = MODIFY_RED;
 8000af2:	4b08      	ldr	r3, [pc, #32]	@ (8000b14 <fsm_automatic+0x298>)
 8000af4:	220b      	movs	r2, #11
 8000af6:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 8000af8:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000afc:	2001      	movs	r0, #1
 8000afe:	f000 fc4f 	bl	80013a0 <setTimer>

			turnOffAll7Seg();
 8000b02:	f7ff fe9d 	bl	8000840 <turnOffAll7Seg>
			turnoff_red();
 8000b06:	f000 fae9 	bl	80010dc <turnoff_red>
			turnoff_yellow();
 8000b0a:	f000 faf9 	bl	8001100 <turnoff_yellow>
			turnoff_green();
 8000b0e:	f000 fb09 	bl	8001124 <turnoff_green>
		}
		break;
 8000b12:	e12a      	b.n	8000d6a <fsm_automatic+0x4ee>
 8000b14:	200000a4 	.word	0x200000a4
 8000b18:	2000009c 	.word	0x2000009c
 8000b1c:	20000044 	.word	0x20000044
 8000b20:	2000010c 	.word	0x2000010c
 8000b24:	20000040 	.word	0x20000040
 8000b28:	200000a8 	.word	0x200000a8
 8000b2c:	200000ac 	.word	0x200000ac
 8000b30:	40010800 	.word	0x40010800
 8000b34:	200000b0 	.word	0x200000b0
 8000b38:	20000048 	.word	0x20000048
/////////////////////////////////////////////////
	case GREEN13_RED24:
		updateTimeForState(status);
 8000b3c:	4b8e      	ldr	r3, [pc, #568]	@ (8000d78 <fsm_automatic+0x4fc>)
 8000b3e:	681b      	ldr	r3, [r3, #0]
 8000b40:	4618      	mov	r0, r3
 8000b42:	f7ff fe31 	bl	80007a8 <updateTimeForState>
		//set cho lane 13
		HAL_GPIO_WritePin(RED_13_GPIO_Port , RED_13_Pin , GPIO_PIN_SET);
 8000b46:	2201      	movs	r2, #1
 8000b48:	2120      	movs	r1, #32
 8000b4a:	488c      	ldr	r0, [pc, #560]	@ (8000d7c <fsm_automatic+0x500>)
 8000b4c:	f001 f859 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_13_GPIO_Port , YELLOW_13_Pin , GPIO_PIN_SET);
 8000b50:	2201      	movs	r2, #1
 8000b52:	2140      	movs	r1, #64	@ 0x40
 8000b54:	4889      	ldr	r0, [pc, #548]	@ (8000d7c <fsm_automatic+0x500>)
 8000b56:	f001 f854 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_13_GPIO_Port , GREEN_13_Pin , GPIO_PIN_RESET);
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	2180      	movs	r1, #128	@ 0x80
 8000b5e:	4887      	ldr	r0, [pc, #540]	@ (8000d7c <fsm_automatic+0x500>)
 8000b60:	f001 f84f 	bl	8001c02 <HAL_GPIO_WritePin>
		//set cho lane 24
		HAL_GPIO_WritePin(RED_24_GPIO_Port , RED_24_Pin , GPIO_PIN_RESET);
 8000b64:	2200      	movs	r2, #0
 8000b66:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000b6a:	4884      	ldr	r0, [pc, #528]	@ (8000d7c <fsm_automatic+0x500>)
 8000b6c:	f001 f849 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_24_GPIO_Port , YELLOW_24_Pin , GPIO_PIN_SET);
 8000b70:	2201      	movs	r2, #1
 8000b72:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000b76:	4881      	ldr	r0, [pc, #516]	@ (8000d7c <fsm_automatic+0x500>)
 8000b78:	f001 f843 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_24_GPIO_Port , GREEN_24_Pin , GPIO_PIN_SET);
 8000b7c:	2201      	movs	r2, #1
 8000b7e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000b82:	487e      	ldr	r0, [pc, #504]	@ (8000d7c <fsm_automatic+0x500>)
 8000b84:	f001 f83d 	bl	8001c02 <HAL_GPIO_WritePin>

		if(isTimerFlagSet(1) == 1){
 8000b88:	2001      	movs	r0, #1
 8000b8a:	f000 fc2f 	bl	80013ec <isTimerFlagSet>
 8000b8e:	4603      	mov	r3, r0
 8000b90:	2b01      	cmp	r3, #1
 8000b92:	d110      	bne.n	8000bb6 <fsm_automatic+0x33a>
			time24remain = time24;
 8000b94:	4b7a      	ldr	r3, [pc, #488]	@ (8000d80 <fsm_automatic+0x504>)
 8000b96:	681b      	ldr	r3, [r3, #0]
 8000b98:	4a7a      	ldr	r2, [pc, #488]	@ (8000d84 <fsm_automatic+0x508>)
 8000b9a:	6013      	str	r3, [r2, #0]
			status = YELLOW13_RED24;
 8000b9c:	4b76      	ldr	r3, [pc, #472]	@ (8000d78 <fsm_automatic+0x4fc>)
 8000b9e:	2205      	movs	r2, #5
 8000ba0:	601a      	str	r2, [r3, #0]
			setTimer(1 , timeYellow*1000);
 8000ba2:	4b79      	ldr	r3, [pc, #484]	@ (8000d88 <fsm_automatic+0x50c>)
 8000ba4:	681b      	ldr	r3, [r3, #0]
 8000ba6:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000baa:	fb02 f303 	mul.w	r3, r2, r3
 8000bae:	4619      	mov	r1, r3
 8000bb0:	2001      	movs	r0, #1
 8000bb2:	f000 fbf5 	bl	80013a0 <setTimer>
		}
		if(isTimerFlagSet(2)){
 8000bb6:	2002      	movs	r0, #2
 8000bb8:	f000 fc18 	bl	80013ec <isTimerFlagSet>
 8000bbc:	4603      	mov	r3, r0
 8000bbe:	2b00      	cmp	r3, #0
 8000bc0:	d014      	beq.n	8000bec <fsm_automatic+0x370>
			update7SegLed(led_index);
 8000bc2:	4b72      	ldr	r3, [pc, #456]	@ (8000d8c <fsm_automatic+0x510>)
 8000bc4:	681b      	ldr	r3, [r3, #0]
 8000bc6:	4618      	mov	r0, r3
 8000bc8:	f7ff fd8c 	bl	80006e4 <update7SegLed>
			setTimer(2 , 250);
 8000bcc:	21fa      	movs	r1, #250	@ 0xfa
 8000bce:	2002      	movs	r0, #2
 8000bd0:	f000 fbe6 	bl	80013a0 <setTimer>
			led_index++;
 8000bd4:	4b6d      	ldr	r3, [pc, #436]	@ (8000d8c <fsm_automatic+0x510>)
 8000bd6:	681b      	ldr	r3, [r3, #0]
 8000bd8:	3301      	adds	r3, #1
 8000bda:	4a6c      	ldr	r2, [pc, #432]	@ (8000d8c <fsm_automatic+0x510>)
 8000bdc:	6013      	str	r3, [r2, #0]
			if(led_index >= 4){
 8000bde:	4b6b      	ldr	r3, [pc, #428]	@ (8000d8c <fsm_automatic+0x510>)
 8000be0:	681b      	ldr	r3, [r3, #0]
 8000be2:	2b03      	cmp	r3, #3
 8000be4:	dd02      	ble.n	8000bec <fsm_automatic+0x370>
				led_index = 0;
 8000be6:	4b69      	ldr	r3, [pc, #420]	@ (8000d8c <fsm_automatic+0x510>)
 8000be8:	2200      	movs	r2, #0
 8000bea:	601a      	str	r2, [r3, #0]
			}
		}
		if(isTimerFlagSet(3)){
 8000bec:	2003      	movs	r0, #3
 8000bee:	f000 fbfd 	bl	80013ec <isTimerFlagSet>
 8000bf2:	4603      	mov	r3, r0
 8000bf4:	2b00      	cmp	r3, #0
 8000bf6:	d015      	beq.n	8000c24 <fsm_automatic+0x3a8>
			time13--;
 8000bf8:	4b65      	ldr	r3, [pc, #404]	@ (8000d90 <fsm_automatic+0x514>)
 8000bfa:	681b      	ldr	r3, [r3, #0]
 8000bfc:	3b01      	subs	r3, #1
 8000bfe:	4a64      	ldr	r2, [pc, #400]	@ (8000d90 <fsm_automatic+0x514>)
 8000c00:	6013      	str	r3, [r2, #0]
			time24--;
 8000c02:	4b5f      	ldr	r3, [pc, #380]	@ (8000d80 <fsm_automatic+0x504>)
 8000c04:	681b      	ldr	r3, [r3, #0]
 8000c06:	3b01      	subs	r3, #1
 8000c08:	4a5d      	ldr	r2, [pc, #372]	@ (8000d80 <fsm_automatic+0x504>)
 8000c0a:	6013      	str	r3, [r2, #0]
			updateBufer();
 8000c0c:	f7ff fd12 	bl	8000634 <updateBufer>
			updateTimeForState(status);
 8000c10:	4b59      	ldr	r3, [pc, #356]	@ (8000d78 <fsm_automatic+0x4fc>)
 8000c12:	681b      	ldr	r3, [r3, #0]
 8000c14:	4618      	mov	r0, r3
 8000c16:	f7ff fdc7 	bl	80007a8 <updateTimeForState>
			setTimer(3 , 1000);
 8000c1a:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8000c1e:	2003      	movs	r0, #3
 8000c20:	f000 fbbe 	bl	80013a0 <setTimer>
		}
		if(isButtonPressed(MODE_BUTTON)==1){
 8000c24:	2000      	movs	r0, #0
 8000c26:	f7ff fa91 	bl	800014c <isButtonPressed>
 8000c2a:	4603      	mov	r3, r0
 8000c2c:	2b01      	cmp	r3, #1
 8000c2e:	f040 809e 	bne.w	8000d6e <fsm_automatic+0x4f2>
			status = MODIFY_RED;
 8000c32:	4b51      	ldr	r3, [pc, #324]	@ (8000d78 <fsm_automatic+0x4fc>)
 8000c34:	220b      	movs	r2, #11
 8000c36:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 8000c38:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000c3c:	2001      	movs	r0, #1
 8000c3e:	f000 fbaf 	bl	80013a0 <setTimer>
			turnOffAll7Seg();
 8000c42:	f7ff fdfd 	bl	8000840 <turnOffAll7Seg>
			turnoff_red();
 8000c46:	f000 fa49 	bl	80010dc <turnoff_red>
			turnoff_yellow();
 8000c4a:	f000 fa59 	bl	8001100 <turnoff_yellow>
			turnoff_green();
 8000c4e:	f000 fa69 	bl	8001124 <turnoff_green>
		}
		break;
 8000c52:	e08c      	b.n	8000d6e <fsm_automatic+0x4f2>
///////////////////////////////////////////////////
	case YELLOW13_RED24:
		updateTimeForState(status);
 8000c54:	4b48      	ldr	r3, [pc, #288]	@ (8000d78 <fsm_automatic+0x4fc>)
 8000c56:	681b      	ldr	r3, [r3, #0]
 8000c58:	4618      	mov	r0, r3
 8000c5a:	f7ff fda5 	bl	80007a8 <updateTimeForState>
		//set cho lane 13
		HAL_GPIO_WritePin(RED_13_GPIO_Port , RED_13_Pin , GPIO_PIN_SET);
 8000c5e:	2201      	movs	r2, #1
 8000c60:	2120      	movs	r1, #32
 8000c62:	4846      	ldr	r0, [pc, #280]	@ (8000d7c <fsm_automatic+0x500>)
 8000c64:	f000 ffcd 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_13_GPIO_Port , YELLOW_13_Pin , GPIO_PIN_RESET);
 8000c68:	2200      	movs	r2, #0
 8000c6a:	2140      	movs	r1, #64	@ 0x40
 8000c6c:	4843      	ldr	r0, [pc, #268]	@ (8000d7c <fsm_automatic+0x500>)
 8000c6e:	f000 ffc8 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_13_GPIO_Port , GREEN_13_Pin , GPIO_PIN_SET);
 8000c72:	2201      	movs	r2, #1
 8000c74:	2180      	movs	r1, #128	@ 0x80
 8000c76:	4841      	ldr	r0, [pc, #260]	@ (8000d7c <fsm_automatic+0x500>)
 8000c78:	f000 ffc3 	bl	8001c02 <HAL_GPIO_WritePin>
		//set cho lane 24
		HAL_GPIO_WritePin(RED_24_GPIO_Port , RED_24_Pin , GPIO_PIN_RESET);
 8000c7c:	2200      	movs	r2, #0
 8000c7e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000c82:	483e      	ldr	r0, [pc, #248]	@ (8000d7c <fsm_automatic+0x500>)
 8000c84:	f000 ffbd 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(YELLOW_24_GPIO_Port , YELLOW_24_Pin , GPIO_PIN_SET);
 8000c88:	2201      	movs	r2, #1
 8000c8a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000c8e:	483b      	ldr	r0, [pc, #236]	@ (8000d7c <fsm_automatic+0x500>)
 8000c90:	f000 ffb7 	bl	8001c02 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GREEN_24_GPIO_Port , GREEN_24_Pin , GPIO_PIN_SET);
 8000c94:	2201      	movs	r2, #1
 8000c96:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000c9a:	4838      	ldr	r0, [pc, #224]	@ (8000d7c <fsm_automatic+0x500>)
 8000c9c:	f000 ffb1 	bl	8001c02 <HAL_GPIO_WritePin>

		if(isTimerFlagSet(1) == 1){
 8000ca0:	2001      	movs	r0, #1
 8000ca2:	f000 fba3 	bl	80013ec <isTimerFlagSet>
 8000ca6:	4603      	mov	r3, r0
 8000ca8:	2b01      	cmp	r3, #1
 8000caa:	d10c      	bne.n	8000cc6 <fsm_automatic+0x44a>
			status = RED13_GREEN24;
 8000cac:	4b32      	ldr	r3, [pc, #200]	@ (8000d78 <fsm_automatic+0x4fc>)
 8000cae:	2202      	movs	r2, #2
 8000cb0:	601a      	str	r2, [r3, #0]
			setTimer(1 , timeGreen*1000);
 8000cb2:	4b38      	ldr	r3, [pc, #224]	@ (8000d94 <fsm_automatic+0x518>)
 8000cb4:	681b      	ldr	r3, [r3, #0]
 8000cb6:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000cba:	fb02 f303 	mul.w	r3, r2, r3
 8000cbe:	4619      	mov	r1, r3
 8000cc0:	2001      	movs	r0, #1
 8000cc2:	f000 fb6d 	bl	80013a0 <setTimer>
		}
		if(isTimerFlagSet(2)){
 8000cc6:	2002      	movs	r0, #2
 8000cc8:	f000 fb90 	bl	80013ec <isTimerFlagSet>
 8000ccc:	4603      	mov	r3, r0
 8000cce:	2b00      	cmp	r3, #0
 8000cd0:	d014      	beq.n	8000cfc <fsm_automatic+0x480>
			update7SegLed(led_index);
 8000cd2:	4b2e      	ldr	r3, [pc, #184]	@ (8000d8c <fsm_automatic+0x510>)
 8000cd4:	681b      	ldr	r3, [r3, #0]
 8000cd6:	4618      	mov	r0, r3
 8000cd8:	f7ff fd04 	bl	80006e4 <update7SegLed>
			setTimer(2 , 250);
 8000cdc:	21fa      	movs	r1, #250	@ 0xfa
 8000cde:	2002      	movs	r0, #2
 8000ce0:	f000 fb5e 	bl	80013a0 <setTimer>
			led_index++;
 8000ce4:	4b29      	ldr	r3, [pc, #164]	@ (8000d8c <fsm_automatic+0x510>)
 8000ce6:	681b      	ldr	r3, [r3, #0]
 8000ce8:	3301      	adds	r3, #1
 8000cea:	4a28      	ldr	r2, [pc, #160]	@ (8000d8c <fsm_automatic+0x510>)
 8000cec:	6013      	str	r3, [r2, #0]
			if(led_index >= 4){
 8000cee:	4b27      	ldr	r3, [pc, #156]	@ (8000d8c <fsm_automatic+0x510>)
 8000cf0:	681b      	ldr	r3, [r3, #0]
 8000cf2:	2b03      	cmp	r3, #3
 8000cf4:	dd02      	ble.n	8000cfc <fsm_automatic+0x480>
				led_index = 0;
 8000cf6:	4b25      	ldr	r3, [pc, #148]	@ (8000d8c <fsm_automatic+0x510>)
 8000cf8:	2200      	movs	r2, #0
 8000cfa:	601a      	str	r2, [r3, #0]
			}
		}
		if(isTimerFlagSet(3)){
 8000cfc:	2003      	movs	r0, #3
 8000cfe:	f000 fb75 	bl	80013ec <isTimerFlagSet>
 8000d02:	4603      	mov	r3, r0
 8000d04:	2b00      	cmp	r3, #0
 8000d06:	d015      	beq.n	8000d34 <fsm_automatic+0x4b8>
			time13--;
 8000d08:	4b21      	ldr	r3, [pc, #132]	@ (8000d90 <fsm_automatic+0x514>)
 8000d0a:	681b      	ldr	r3, [r3, #0]
 8000d0c:	3b01      	subs	r3, #1
 8000d0e:	4a20      	ldr	r2, [pc, #128]	@ (8000d90 <fsm_automatic+0x514>)
 8000d10:	6013      	str	r3, [r2, #0]
			time24--;
 8000d12:	4b1b      	ldr	r3, [pc, #108]	@ (8000d80 <fsm_automatic+0x504>)
 8000d14:	681b      	ldr	r3, [r3, #0]
 8000d16:	3b01      	subs	r3, #1
 8000d18:	4a19      	ldr	r2, [pc, #100]	@ (8000d80 <fsm_automatic+0x504>)
 8000d1a:	6013      	str	r3, [r2, #0]
			updateBufer();
 8000d1c:	f7ff fc8a 	bl	8000634 <updateBufer>
			updateTimeForState(status);
 8000d20:	4b15      	ldr	r3, [pc, #84]	@ (8000d78 <fsm_automatic+0x4fc>)
 8000d22:	681b      	ldr	r3, [r3, #0]
 8000d24:	4618      	mov	r0, r3
 8000d26:	f7ff fd3f 	bl	80007a8 <updateTimeForState>
			setTimer(3 , 1000);
 8000d2a:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8000d2e:	2003      	movs	r0, #3
 8000d30:	f000 fb36 	bl	80013a0 <setTimer>
		}
		if(isButtonPressed(MODE_BUTTON)==1){
 8000d34:	2000      	movs	r0, #0
 8000d36:	f7ff fa09 	bl	800014c <isButtonPressed>
 8000d3a:	4603      	mov	r3, r0
 8000d3c:	2b01      	cmp	r3, #1
 8000d3e:	d118      	bne.n	8000d72 <fsm_automatic+0x4f6>
			status = MODIFY_RED;
 8000d40:	4b0d      	ldr	r3, [pc, #52]	@ (8000d78 <fsm_automatic+0x4fc>)
 8000d42:	220b      	movs	r2, #11
 8000d44:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 8000d46:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000d4a:	2001      	movs	r0, #1
 8000d4c:	f000 fb28 	bl	80013a0 <setTimer>
			turnOffAll7Seg();
 8000d50:	f7ff fd76 	bl	8000840 <turnOffAll7Seg>
			turnoff_red();
 8000d54:	f000 f9c2 	bl	80010dc <turnoff_red>
			turnoff_yellow();
 8000d58:	f000 f9d2 	bl	8001100 <turnoff_yellow>
			turnoff_green();
 8000d5c:	f000 f9e2 	bl	8001124 <turnoff_green>
		}
		break;
 8000d60:	e007      	b.n	8000d72 <fsm_automatic+0x4f6>
	default:
		break;
 8000d62:	bf00      	nop
 8000d64:	e006      	b.n	8000d74 <fsm_automatic+0x4f8>
		break;
 8000d66:	bf00      	nop
 8000d68:	e004      	b.n	8000d74 <fsm_automatic+0x4f8>
		break;
 8000d6a:	bf00      	nop
 8000d6c:	e002      	b.n	8000d74 <fsm_automatic+0x4f8>
		break;
 8000d6e:	bf00      	nop
 8000d70:	e000      	b.n	8000d74 <fsm_automatic+0x4f8>
		break;
 8000d72:	bf00      	nop
	}
}
 8000d74:	bf00      	nop
 8000d76:	bd80      	pop	{r7, pc}
 8000d78:	200000a4 	.word	0x200000a4
 8000d7c:	40010800 	.word	0x40010800
 8000d80:	200000ac 	.word	0x200000ac
 8000d84:	200000b4 	.word	0x200000b4
 8000d88:	20000048 	.word	0x20000048
 8000d8c:	2000009c 	.word	0x2000009c
 8000d90:	200000a8 	.word	0x200000a8
 8000d94:	20000044 	.word	0x20000044

08000d98 <fsm_manual>:
#include "fsm_manual.h"
#include "fsm_automatic.h"

int index = 0;
int temp_time = 1;
void fsm_manual(){
 8000d98:	b580      	push	{r7, lr}
 8000d9a:	af00      	add	r7, sp, #0
	switch(status){
 8000d9c:	4b80      	ldr	r3, [pc, #512]	@ (8000fa0 <fsm_manual+0x208>)
 8000d9e:	681b      	ldr	r3, [r3, #0]
 8000da0:	2b0d      	cmp	r3, #13
 8000da2:	f000 810d 	beq.w	8000fc0 <fsm_manual+0x228>
 8000da6:	2b0d      	cmp	r3, #13
 8000da8:	f300 817e 	bgt.w	80010a8 <fsm_manual+0x310>
 8000dac:	2b0b      	cmp	r3, #11
 8000dae:	d002      	beq.n	8000db6 <fsm_manual+0x1e>
 8000db0:	2b0c      	cmp	r3, #12
 8000db2:	d07a      	beq.n	8000eaa <fsm_manual+0x112>
			turnoff_green();
			status = INIT;
		}
		break;
	default:
		break;
 8000db4:	e178      	b.n	80010a8 <fsm_manual+0x310>
		time13 = temp_time;
 8000db6:	4b7b      	ldr	r3, [pc, #492]	@ (8000fa4 <fsm_manual+0x20c>)
 8000db8:	681b      	ldr	r3, [r3, #0]
 8000dba:	4a7b      	ldr	r2, [pc, #492]	@ (8000fa8 <fsm_manual+0x210>)
 8000dbc:	6013      	str	r3, [r2, #0]
		time24 = 2;
 8000dbe:	4b7b      	ldr	r3, [pc, #492]	@ (8000fac <fsm_manual+0x214>)
 8000dc0:	2202      	movs	r2, #2
 8000dc2:	601a      	str	r2, [r3, #0]
		if(isTimerFlagSet(1)==1){
 8000dc4:	2001      	movs	r0, #1
 8000dc6:	f000 fb11 	bl	80013ec <isTimerFlagSet>
 8000dca:	4603      	mov	r3, r0
 8000dcc:	2b01      	cmp	r3, #1
 8000dce:	d10d      	bne.n	8000dec <fsm_manual+0x54>
			HAL_GPIO_TogglePin(RED_13_GPIO_Port , RED_13_Pin);
 8000dd0:	2120      	movs	r1, #32
 8000dd2:	4877      	ldr	r0, [pc, #476]	@ (8000fb0 <fsm_manual+0x218>)
 8000dd4:	f000 ff2d 	bl	8001c32 <HAL_GPIO_TogglePin>
			HAL_GPIO_TogglePin(RED_24_GPIO_Port , RED_24_Pin);
 8000dd8:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000ddc:	4874      	ldr	r0, [pc, #464]	@ (8000fb0 <fsm_manual+0x218>)
 8000dde:	f000 ff28 	bl	8001c32 <HAL_GPIO_TogglePin>
			setTimer(1 , 500);
 8000de2:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000de6:	2001      	movs	r0, #1
 8000de8:	f000 fada 	bl	80013a0 <setTimer>
		if(isTimerFlagSet(2)){
 8000dec:	2002      	movs	r0, #2
 8000dee:	f000 fafd 	bl	80013ec <isTimerFlagSet>
 8000df2:	4603      	mov	r3, r0
 8000df4:	2b00      	cmp	r3, #0
 8000df6:	d016      	beq.n	8000e26 <fsm_manual+0x8e>
			setTimer(2 , 250);
 8000df8:	21fa      	movs	r1, #250	@ 0xfa
 8000dfa:	2002      	movs	r0, #2
 8000dfc:	f000 fad0 	bl	80013a0 <setTimer>
			updateBufer();
 8000e00:	f7ff fc18 	bl	8000634 <updateBufer>
			update7SegLed(index);
 8000e04:	4b6b      	ldr	r3, [pc, #428]	@ (8000fb4 <fsm_manual+0x21c>)
 8000e06:	681b      	ldr	r3, [r3, #0]
 8000e08:	4618      	mov	r0, r3
 8000e0a:	f7ff fc6b 	bl	80006e4 <update7SegLed>
			index++;
 8000e0e:	4b69      	ldr	r3, [pc, #420]	@ (8000fb4 <fsm_manual+0x21c>)
 8000e10:	681b      	ldr	r3, [r3, #0]
 8000e12:	3301      	adds	r3, #1
 8000e14:	4a67      	ldr	r2, [pc, #412]	@ (8000fb4 <fsm_manual+0x21c>)
 8000e16:	6013      	str	r3, [r2, #0]
			if(index >= 4){
 8000e18:	4b66      	ldr	r3, [pc, #408]	@ (8000fb4 <fsm_manual+0x21c>)
 8000e1a:	681b      	ldr	r3, [r3, #0]
 8000e1c:	2b03      	cmp	r3, #3
 8000e1e:	dd02      	ble.n	8000e26 <fsm_manual+0x8e>
				index = 0;
 8000e20:	4b64      	ldr	r3, [pc, #400]	@ (8000fb4 <fsm_manual+0x21c>)
 8000e22:	2200      	movs	r2, #0
 8000e24:	601a      	str	r2, [r3, #0]
		if(isButtonPressed(MODIFY_BUTTON)){   // nhan tha --> +1
 8000e26:	2001      	movs	r0, #1
 8000e28:	f7ff f990 	bl	800014c <isButtonPressed>
 8000e2c:	4603      	mov	r3, r0
 8000e2e:	2b00      	cmp	r3, #0
 8000e30:	d004      	beq.n	8000e3c <fsm_manual+0xa4>
			temp_time++;
 8000e32:	4b5c      	ldr	r3, [pc, #368]	@ (8000fa4 <fsm_manual+0x20c>)
 8000e34:	681b      	ldr	r3, [r3, #0]
 8000e36:	3301      	adds	r3, #1
 8000e38:	4a5a      	ldr	r2, [pc, #360]	@ (8000fa4 <fsm_manual+0x20c>)
 8000e3a:	6013      	str	r3, [r2, #0]
		if(isButtonLongPressed(MODIFY_BUTTON)){ // nhan de --> +5
 8000e3c:	2001      	movs	r0, #1
 8000e3e:	f7ff f99f 	bl	8000180 <isButtonLongPressed>
 8000e42:	4603      	mov	r3, r0
 8000e44:	2b00      	cmp	r3, #0
 8000e46:	d004      	beq.n	8000e52 <fsm_manual+0xba>
			temp_time += 5;
 8000e48:	4b56      	ldr	r3, [pc, #344]	@ (8000fa4 <fsm_manual+0x20c>)
 8000e4a:	681b      	ldr	r3, [r3, #0]
 8000e4c:	3305      	adds	r3, #5
 8000e4e:	4a55      	ldr	r2, [pc, #340]	@ (8000fa4 <fsm_manual+0x20c>)
 8000e50:	6013      	str	r3, [r2, #0]
		if(isButtonPressed(SET_BUTTON)){
 8000e52:	2002      	movs	r0, #2
 8000e54:	f7ff f97a 	bl	800014c <isButtonPressed>
 8000e58:	4603      	mov	r3, r0
 8000e5a:	2b00      	cmp	r3, #0
 8000e5c:	d010      	beq.n	8000e80 <fsm_manual+0xe8>
			turnoff_red();
 8000e5e:	f000 f93d 	bl	80010dc <turnoff_red>
			status = MODIFY_YELLOW;
 8000e62:	4b4f      	ldr	r3, [pc, #316]	@ (8000fa0 <fsm_manual+0x208>)
 8000e64:	220c      	movs	r2, #12
 8000e66:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 8000e68:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000e6c:	2001      	movs	r0, #1
 8000e6e:	f000 fa97 	bl	80013a0 <setTimer>
			timeRed = temp_time;
 8000e72:	4b4c      	ldr	r3, [pc, #304]	@ (8000fa4 <fsm_manual+0x20c>)
 8000e74:	681b      	ldr	r3, [r3, #0]
 8000e76:	4a50      	ldr	r2, [pc, #320]	@ (8000fb8 <fsm_manual+0x220>)
 8000e78:	6013      	str	r3, [r2, #0]
			temp_time = 1;
 8000e7a:	4b4a      	ldr	r3, [pc, #296]	@ (8000fa4 <fsm_manual+0x20c>)
 8000e7c:	2201      	movs	r2, #1
 8000e7e:	601a      	str	r2, [r3, #0]
		if(isButtonPressed(MODE_BUTTON)){
 8000e80:	2000      	movs	r0, #0
 8000e82:	f7ff f963 	bl	800014c <isButtonPressed>
 8000e86:	4603      	mov	r3, r0
 8000e88:	2b00      	cmp	r3, #0
 8000e8a:	f000 810f 	beq.w	80010ac <fsm_manual+0x314>
			turnoff_red();
 8000e8e:	f000 f925 	bl	80010dc <turnoff_red>
			status = MODIFY_YELLOW;
 8000e92:	4b43      	ldr	r3, [pc, #268]	@ (8000fa0 <fsm_manual+0x208>)
 8000e94:	220c      	movs	r2, #12
 8000e96:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 8000e98:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000e9c:	2001      	movs	r0, #1
 8000e9e:	f000 fa7f 	bl	80013a0 <setTimer>
			temp_time = 1;
 8000ea2:	4b40      	ldr	r3, [pc, #256]	@ (8000fa4 <fsm_manual+0x20c>)
 8000ea4:	2201      	movs	r2, #1
 8000ea6:	601a      	str	r2, [r3, #0]
		break;
 8000ea8:	e100      	b.n	80010ac <fsm_manual+0x314>
		time13 = temp_time;
 8000eaa:	4b3e      	ldr	r3, [pc, #248]	@ (8000fa4 <fsm_manual+0x20c>)
 8000eac:	681b      	ldr	r3, [r3, #0]
 8000eae:	4a3e      	ldr	r2, [pc, #248]	@ (8000fa8 <fsm_manual+0x210>)
 8000eb0:	6013      	str	r3, [r2, #0]
		time24 = 3;
 8000eb2:	4b3e      	ldr	r3, [pc, #248]	@ (8000fac <fsm_manual+0x214>)
 8000eb4:	2203      	movs	r2, #3
 8000eb6:	601a      	str	r2, [r3, #0]
		if(isTimerFlagSet(1)==1){
 8000eb8:	2001      	movs	r0, #1
 8000eba:	f000 fa97 	bl	80013ec <isTimerFlagSet>
 8000ebe:	4603      	mov	r3, r0
 8000ec0:	2b01      	cmp	r3, #1
 8000ec2:	d10d      	bne.n	8000ee0 <fsm_manual+0x148>
			HAL_GPIO_TogglePin(YELLOW_13_GPIO_Port , YELLOW_13_Pin);
 8000ec4:	2140      	movs	r1, #64	@ 0x40
 8000ec6:	483a      	ldr	r0, [pc, #232]	@ (8000fb0 <fsm_manual+0x218>)
 8000ec8:	f000 feb3 	bl	8001c32 <HAL_GPIO_TogglePin>
			HAL_GPIO_TogglePin(YELLOW_24_GPIO_Port , YELLOW_24_Pin);
 8000ecc:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000ed0:	4837      	ldr	r0, [pc, #220]	@ (8000fb0 <fsm_manual+0x218>)
 8000ed2:	f000 feae 	bl	8001c32 <HAL_GPIO_TogglePin>
			setTimer(1 , 500);
 8000ed6:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000eda:	2001      	movs	r0, #1
 8000edc:	f000 fa60 	bl	80013a0 <setTimer>
		if(isTimerFlagSet(2)){
 8000ee0:	2002      	movs	r0, #2
 8000ee2:	f000 fa83 	bl	80013ec <isTimerFlagSet>
 8000ee6:	4603      	mov	r3, r0
 8000ee8:	2b00      	cmp	r3, #0
 8000eea:	d016      	beq.n	8000f1a <fsm_manual+0x182>
			setTimer(2 , 250);
 8000eec:	21fa      	movs	r1, #250	@ 0xfa
 8000eee:	2002      	movs	r0, #2
 8000ef0:	f000 fa56 	bl	80013a0 <setTimer>
			updateBufer();
 8000ef4:	f7ff fb9e 	bl	8000634 <updateBufer>
			update7SegLed(index);
 8000ef8:	4b2e      	ldr	r3, [pc, #184]	@ (8000fb4 <fsm_manual+0x21c>)
 8000efa:	681b      	ldr	r3, [r3, #0]
 8000efc:	4618      	mov	r0, r3
 8000efe:	f7ff fbf1 	bl	80006e4 <update7SegLed>
			index++;
 8000f02:	4b2c      	ldr	r3, [pc, #176]	@ (8000fb4 <fsm_manual+0x21c>)
 8000f04:	681b      	ldr	r3, [r3, #0]
 8000f06:	3301      	adds	r3, #1
 8000f08:	4a2a      	ldr	r2, [pc, #168]	@ (8000fb4 <fsm_manual+0x21c>)
 8000f0a:	6013      	str	r3, [r2, #0]
			if(index >= 4){
 8000f0c:	4b29      	ldr	r3, [pc, #164]	@ (8000fb4 <fsm_manual+0x21c>)
 8000f0e:	681b      	ldr	r3, [r3, #0]
 8000f10:	2b03      	cmp	r3, #3
 8000f12:	dd02      	ble.n	8000f1a <fsm_manual+0x182>
				index = 0;
 8000f14:	4b27      	ldr	r3, [pc, #156]	@ (8000fb4 <fsm_manual+0x21c>)
 8000f16:	2200      	movs	r2, #0
 8000f18:	601a      	str	r2, [r3, #0]
		if(isButtonPressed(MODIFY_BUTTON)){   // nhan tha --> +1
 8000f1a:	2001      	movs	r0, #1
 8000f1c:	f7ff f916 	bl	800014c <isButtonPressed>
 8000f20:	4603      	mov	r3, r0
 8000f22:	2b00      	cmp	r3, #0
 8000f24:	d004      	beq.n	8000f30 <fsm_manual+0x198>
			temp_time++;
 8000f26:	4b1f      	ldr	r3, [pc, #124]	@ (8000fa4 <fsm_manual+0x20c>)
 8000f28:	681b      	ldr	r3, [r3, #0]
 8000f2a:	3301      	adds	r3, #1
 8000f2c:	4a1d      	ldr	r2, [pc, #116]	@ (8000fa4 <fsm_manual+0x20c>)
 8000f2e:	6013      	str	r3, [r2, #0]
		if(isButtonLongPressed(MODIFY_BUTTON)){ // nhan de --> +5
 8000f30:	2001      	movs	r0, #1
 8000f32:	f7ff f925 	bl	8000180 <isButtonLongPressed>
 8000f36:	4603      	mov	r3, r0
 8000f38:	2b00      	cmp	r3, #0
 8000f3a:	d004      	beq.n	8000f46 <fsm_manual+0x1ae>
			temp_time += 5;
 8000f3c:	4b19      	ldr	r3, [pc, #100]	@ (8000fa4 <fsm_manual+0x20c>)
 8000f3e:	681b      	ldr	r3, [r3, #0]
 8000f40:	3305      	adds	r3, #5
 8000f42:	4a18      	ldr	r2, [pc, #96]	@ (8000fa4 <fsm_manual+0x20c>)
 8000f44:	6013      	str	r3, [r2, #0]
		if(isButtonPressed(SET_BUTTON)){
 8000f46:	2002      	movs	r0, #2
 8000f48:	f7ff f900 	bl	800014c <isButtonPressed>
 8000f4c:	4603      	mov	r3, r0
 8000f4e:	2b00      	cmp	r3, #0
 8000f50:	d013      	beq.n	8000f7a <fsm_manual+0x1e2>
			turnoff_yellow();
 8000f52:	f000 f8d5 	bl	8001100 <turnoff_yellow>
			status = MODIFY_GREEN;
 8000f56:	4b12      	ldr	r3, [pc, #72]	@ (8000fa0 <fsm_manual+0x208>)
 8000f58:	220d      	movs	r2, #13
 8000f5a:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 8000f5c:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000f60:	2001      	movs	r0, #1
 8000f62:	f000 fa1d 	bl	80013a0 <setTimer>
			timeYellow = temp_time;
 8000f66:	4b0f      	ldr	r3, [pc, #60]	@ (8000fa4 <fsm_manual+0x20c>)
 8000f68:	681b      	ldr	r3, [r3, #0]
 8000f6a:	4a14      	ldr	r2, [pc, #80]	@ (8000fbc <fsm_manual+0x224>)
 8000f6c:	6013      	str	r3, [r2, #0]
			temp_time = 1;
 8000f6e:	4b0d      	ldr	r3, [pc, #52]	@ (8000fa4 <fsm_manual+0x20c>)
 8000f70:	2201      	movs	r2, #1
 8000f72:	601a      	str	r2, [r3, #0]
			time13 = 1;
 8000f74:	4b0c      	ldr	r3, [pc, #48]	@ (8000fa8 <fsm_manual+0x210>)
 8000f76:	2201      	movs	r2, #1
 8000f78:	601a      	str	r2, [r3, #0]
		if(isButtonPressed(MODE_BUTTON)==1){
 8000f7a:	2000      	movs	r0, #0
 8000f7c:	f7ff f8e6 	bl	800014c <isButtonPressed>
 8000f80:	4603      	mov	r3, r0
 8000f82:	2b01      	cmp	r3, #1
 8000f84:	f040 8094 	bne.w	80010b0 <fsm_manual+0x318>
			turnoff_yellow();
 8000f88:	f000 f8ba 	bl	8001100 <turnoff_yellow>
			status = MODIFY_GREEN;
 8000f8c:	4b04      	ldr	r3, [pc, #16]	@ (8000fa0 <fsm_manual+0x208>)
 8000f8e:	220d      	movs	r2, #13
 8000f90:	601a      	str	r2, [r3, #0]
			setTimer(1 , 500);
 8000f92:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000f96:	2001      	movs	r0, #1
 8000f98:	f000 fa02 	bl	80013a0 <setTimer>
		break;
 8000f9c:	e088      	b.n	80010b0 <fsm_manual+0x318>
 8000f9e:	bf00      	nop
 8000fa0:	200000a4 	.word	0x200000a4
 8000fa4:	2000003c 	.word	0x2000003c
 8000fa8:	200000a8 	.word	0x200000a8
 8000fac:	200000ac 	.word	0x200000ac
 8000fb0:	40010800 	.word	0x40010800
 8000fb4:	200000a0 	.word	0x200000a0
 8000fb8:	20000040 	.word	0x20000040
 8000fbc:	20000048 	.word	0x20000048
		time13 = temp_time;
 8000fc0:	4b3e      	ldr	r3, [pc, #248]	@ (80010bc <fsm_manual+0x324>)
 8000fc2:	681b      	ldr	r3, [r3, #0]
 8000fc4:	4a3e      	ldr	r2, [pc, #248]	@ (80010c0 <fsm_manual+0x328>)
 8000fc6:	6013      	str	r3, [r2, #0]
		time24 = 4;
 8000fc8:	4b3e      	ldr	r3, [pc, #248]	@ (80010c4 <fsm_manual+0x32c>)
 8000fca:	2204      	movs	r2, #4
 8000fcc:	601a      	str	r2, [r3, #0]
		if(isTimerFlagSet(1)==1){
 8000fce:	2001      	movs	r0, #1
 8000fd0:	f000 fa0c 	bl	80013ec <isTimerFlagSet>
 8000fd4:	4603      	mov	r3, r0
 8000fd6:	2b01      	cmp	r3, #1
 8000fd8:	d10d      	bne.n	8000ff6 <fsm_manual+0x25e>
			HAL_GPIO_TogglePin(GREEN_13_GPIO_Port , GREEN_13_Pin);
 8000fda:	2180      	movs	r1, #128	@ 0x80
 8000fdc:	483a      	ldr	r0, [pc, #232]	@ (80010c8 <fsm_manual+0x330>)
 8000fde:	f000 fe28 	bl	8001c32 <HAL_GPIO_TogglePin>
			HAL_GPIO_TogglePin(GREEN_24_GPIO_Port , GREEN_24_Pin);
 8000fe2:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000fe6:	4838      	ldr	r0, [pc, #224]	@ (80010c8 <fsm_manual+0x330>)
 8000fe8:	f000 fe23 	bl	8001c32 <HAL_GPIO_TogglePin>
			setTimer(1 , 500);
 8000fec:	f44f 71fa 	mov.w	r1, #500	@ 0x1f4
 8000ff0:	2001      	movs	r0, #1
 8000ff2:	f000 f9d5 	bl	80013a0 <setTimer>
		if(isTimerFlagSet(2)){
 8000ff6:	2002      	movs	r0, #2
 8000ff8:	f000 f9f8 	bl	80013ec <isTimerFlagSet>
 8000ffc:	4603      	mov	r3, r0
 8000ffe:	2b00      	cmp	r3, #0
 8001000:	d016      	beq.n	8001030 <fsm_manual+0x298>
			setTimer(2 , 250);
 8001002:	21fa      	movs	r1, #250	@ 0xfa
 8001004:	2002      	movs	r0, #2
 8001006:	f000 f9cb 	bl	80013a0 <setTimer>
			updateBufer();
 800100a:	f7ff fb13 	bl	8000634 <updateBufer>
			update7SegLed(index);
 800100e:	4b2f      	ldr	r3, [pc, #188]	@ (80010cc <fsm_manual+0x334>)
 8001010:	681b      	ldr	r3, [r3, #0]
 8001012:	4618      	mov	r0, r3
 8001014:	f7ff fb66 	bl	80006e4 <update7SegLed>
			index++;
 8001018:	4b2c      	ldr	r3, [pc, #176]	@ (80010cc <fsm_manual+0x334>)
 800101a:	681b      	ldr	r3, [r3, #0]
 800101c:	3301      	adds	r3, #1
 800101e:	4a2b      	ldr	r2, [pc, #172]	@ (80010cc <fsm_manual+0x334>)
 8001020:	6013      	str	r3, [r2, #0]
			if(index >= 4){
 8001022:	4b2a      	ldr	r3, [pc, #168]	@ (80010cc <fsm_manual+0x334>)
 8001024:	681b      	ldr	r3, [r3, #0]
 8001026:	2b03      	cmp	r3, #3
 8001028:	dd02      	ble.n	8001030 <fsm_manual+0x298>
				index = 0;
 800102a:	4b28      	ldr	r3, [pc, #160]	@ (80010cc <fsm_manual+0x334>)
 800102c:	2200      	movs	r2, #0
 800102e:	601a      	str	r2, [r3, #0]
		if(isButtonPressed(MODIFY_BUTTON)){   // nhan tha --> +1
 8001030:	2001      	movs	r0, #1
 8001032:	f7ff f88b 	bl	800014c <isButtonPressed>
 8001036:	4603      	mov	r3, r0
 8001038:	2b00      	cmp	r3, #0
 800103a:	d004      	beq.n	8001046 <fsm_manual+0x2ae>
			temp_time++;
 800103c:	4b1f      	ldr	r3, [pc, #124]	@ (80010bc <fsm_manual+0x324>)
 800103e:	681b      	ldr	r3, [r3, #0]
 8001040:	3301      	adds	r3, #1
 8001042:	4a1e      	ldr	r2, [pc, #120]	@ (80010bc <fsm_manual+0x324>)
 8001044:	6013      	str	r3, [r2, #0]
		if(isButtonLongPressed(MODIFY_BUTTON)){ // nhan de --> +5
 8001046:	2001      	movs	r0, #1
 8001048:	f7ff f89a 	bl	8000180 <isButtonLongPressed>
 800104c:	4603      	mov	r3, r0
 800104e:	2b00      	cmp	r3, #0
 8001050:	d004      	beq.n	800105c <fsm_manual+0x2c4>
			temp_time += 5;
 8001052:	4b1a      	ldr	r3, [pc, #104]	@ (80010bc <fsm_manual+0x324>)
 8001054:	681b      	ldr	r3, [r3, #0]
 8001056:	3305      	adds	r3, #5
 8001058:	4a18      	ldr	r2, [pc, #96]	@ (80010bc <fsm_manual+0x324>)
 800105a:	6013      	str	r3, [r2, #0]
		if(isButtonPressed(SET_BUTTON)){
 800105c:	2002      	movs	r0, #2
 800105e:	f7ff f875 	bl	800014c <isButtonPressed>
 8001062:	4603      	mov	r3, r0
 8001064:	2b00      	cmp	r3, #0
 8001066:	d013      	beq.n	8001090 <fsm_manual+0x2f8>
			turnoff_green();
 8001068:	f000 f85c 	bl	8001124 <turnoff_green>
			status = INIT;
 800106c:	4b18      	ldr	r3, [pc, #96]	@ (80010d0 <fsm_manual+0x338>)
 800106e:	2201      	movs	r2, #1
 8001070:	601a      	str	r2, [r3, #0]
			timeGreen = temp_time;
 8001072:	4b12      	ldr	r3, [pc, #72]	@ (80010bc <fsm_manual+0x324>)
 8001074:	681b      	ldr	r3, [r3, #0]
 8001076:	4a17      	ldr	r2, [pc, #92]	@ (80010d4 <fsm_manual+0x33c>)
 8001078:	6013      	str	r3, [r2, #0]
			temp_time = 1;
 800107a:	4b10      	ldr	r3, [pc, #64]	@ (80010bc <fsm_manual+0x324>)
 800107c:	2201      	movs	r2, #1
 800107e:	601a      	str	r2, [r3, #0]
			time13 = timeRed;
 8001080:	4b15      	ldr	r3, [pc, #84]	@ (80010d8 <fsm_manual+0x340>)
 8001082:	681b      	ldr	r3, [r3, #0]
 8001084:	4a0e      	ldr	r2, [pc, #56]	@ (80010c0 <fsm_manual+0x328>)
 8001086:	6013      	str	r3, [r2, #0]
			time24 = timeGreen;
 8001088:	4b12      	ldr	r3, [pc, #72]	@ (80010d4 <fsm_manual+0x33c>)
 800108a:	681b      	ldr	r3, [r3, #0]
 800108c:	4a0d      	ldr	r2, [pc, #52]	@ (80010c4 <fsm_manual+0x32c>)
 800108e:	6013      	str	r3, [r2, #0]
		if(isButtonPressed(MODE_BUTTON)==1){
 8001090:	2000      	movs	r0, #0
 8001092:	f7ff f85b 	bl	800014c <isButtonPressed>
 8001096:	4603      	mov	r3, r0
 8001098:	2b01      	cmp	r3, #1
 800109a:	d10b      	bne.n	80010b4 <fsm_manual+0x31c>
			turnoff_green();
 800109c:	f000 f842 	bl	8001124 <turnoff_green>
			status = INIT;
 80010a0:	4b0b      	ldr	r3, [pc, #44]	@ (80010d0 <fsm_manual+0x338>)
 80010a2:	2201      	movs	r2, #1
 80010a4:	601a      	str	r2, [r3, #0]
		break;
 80010a6:	e005      	b.n	80010b4 <fsm_manual+0x31c>
		break;
 80010a8:	bf00      	nop
 80010aa:	e004      	b.n	80010b6 <fsm_manual+0x31e>
		break;
 80010ac:	bf00      	nop
 80010ae:	e002      	b.n	80010b6 <fsm_manual+0x31e>
		break;
 80010b0:	bf00      	nop
 80010b2:	e000      	b.n	80010b6 <fsm_manual+0x31e>
		break;
 80010b4:	bf00      	nop
	}
}
 80010b6:	bf00      	nop
 80010b8:	bd80      	pop	{r7, pc}
 80010ba:	bf00      	nop
 80010bc:	2000003c 	.word	0x2000003c
 80010c0:	200000a8 	.word	0x200000a8
 80010c4:	200000ac 	.word	0x200000ac
 80010c8:	40010800 	.word	0x40010800
 80010cc:	200000a0 	.word	0x200000a0
 80010d0:	200000a4 	.word	0x200000a4
 80010d4:	20000044 	.word	0x20000044
 80010d8:	20000040 	.word	0x20000040

080010dc <turnoff_red>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void turnoff_red(){
 80010dc:	b580      	push	{r7, lr}
 80010de:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RED_13_GPIO_Port , RED_13_Pin , GPIO_PIN_SET);
 80010e0:	2201      	movs	r2, #1
 80010e2:	2120      	movs	r1, #32
 80010e4:	4805      	ldr	r0, [pc, #20]	@ (80010fc <turnoff_red+0x20>)
 80010e6:	f000 fd8c 	bl	8001c02 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(RED_24_GPIO_Port , RED_24_Pin , GPIO_PIN_SET);
 80010ea:	2201      	movs	r2, #1
 80010ec:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80010f0:	4802      	ldr	r0, [pc, #8]	@ (80010fc <turnoff_red+0x20>)
 80010f2:	f000 fd86 	bl	8001c02 <HAL_GPIO_WritePin>
}
 80010f6:	bf00      	nop
 80010f8:	bd80      	pop	{r7, pc}
 80010fa:	bf00      	nop
 80010fc:	40010800 	.word	0x40010800

08001100 <turnoff_yellow>:
void turnoff_yellow(){
 8001100:	b580      	push	{r7, lr}
 8001102:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(YELLOW_13_GPIO_Port , YELLOW_13_Pin , GPIO_PIN_SET);
 8001104:	2201      	movs	r2, #1
 8001106:	2140      	movs	r1, #64	@ 0x40
 8001108:	4805      	ldr	r0, [pc, #20]	@ (8001120 <turnoff_yellow+0x20>)
 800110a:	f000 fd7a 	bl	8001c02 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(YELLOW_24_GPIO_Port , YELLOW_24_Pin , GPIO_PIN_SET);
 800110e:	2201      	movs	r2, #1
 8001110:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001114:	4802      	ldr	r0, [pc, #8]	@ (8001120 <turnoff_yellow+0x20>)
 8001116:	f000 fd74 	bl	8001c02 <HAL_GPIO_WritePin>
}
 800111a:	bf00      	nop
 800111c:	bd80      	pop	{r7, pc}
 800111e:	bf00      	nop
 8001120:	40010800 	.word	0x40010800

08001124 <turnoff_green>:
void turnoff_green(){
 8001124:	b580      	push	{r7, lr}
 8001126:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GREEN_13_GPIO_Port , GREEN_13_Pin , GPIO_PIN_SET);
 8001128:	2201      	movs	r2, #1
 800112a:	2180      	movs	r1, #128	@ 0x80
 800112c:	4805      	ldr	r0, [pc, #20]	@ (8001144 <turnoff_green+0x20>)
 800112e:	f000 fd68 	bl	8001c02 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GREEN_24_GPIO_Port , GREEN_24_Pin , GPIO_PIN_SET);
 8001132:	2201      	movs	r2, #1
 8001134:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001138:	4802      	ldr	r0, [pc, #8]	@ (8001144 <turnoff_green+0x20>)
 800113a:	f000 fd62 	bl	8001c02 <HAL_GPIO_WritePin>
}
 800113e:	bf00      	nop
 8001140:	bd80      	pop	{r7, pc}
 8001142:	bf00      	nop
 8001144:	40010800 	.word	0x40010800

08001148 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001148:	b580      	push	{r7, lr}
 800114a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800114c:	f000 fa56 	bl	80015fc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001150:	f000 f82a 	bl	80011a8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001154:	f000 f8b0 	bl	80012b8 <MX_GPIO_Init>
  MX_TIM2_Init();
 8001158:	f000 f862 	bl	8001220 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 800115c:	480f      	ldr	r0, [pc, #60]	@ (800119c <main+0x54>)
 800115e:	f001 f9af 	bl	80024c0 <HAL_TIM_Base_Start_IT>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

  HAL_GPIO_WritePin(RED_13_GPIO_Port , RED_13_Pin , SET);
 8001162:	2201      	movs	r2, #1
 8001164:	2120      	movs	r1, #32
 8001166:	480e      	ldr	r0, [pc, #56]	@ (80011a0 <main+0x58>)
 8001168:	f000 fd4b 	bl	8001c02 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(YELLOW_13_GPIO_Port , YELLOW_13_Pin , SET);
 800116c:	2201      	movs	r2, #1
 800116e:	2140      	movs	r1, #64	@ 0x40
 8001170:	480b      	ldr	r0, [pc, #44]	@ (80011a0 <main+0x58>)
 8001172:	f000 fd46 	bl	8001c02 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GREEN_13_GPIO_Port , GREEN_13_Pin , SET);
 8001176:	2201      	movs	r2, #1
 8001178:	2180      	movs	r1, #128	@ 0x80
 800117a:	4809      	ldr	r0, [pc, #36]	@ (80011a0 <main+0x58>)
 800117c:	f000 fd41 	bl	8001c02 <HAL_GPIO_WritePin>

  status = 1;
 8001180:	4b08      	ldr	r3, [pc, #32]	@ (80011a4 <main+0x5c>)
 8001182:	2201      	movs	r2, #1
 8001184:	601a      	str	r2, [r3, #0]
  setTimer(1 , 2000);
 8001186:	f44f 61fa 	mov.w	r1, #2000	@ 0x7d0
 800118a:	2001      	movs	r0, #1
 800118c:	f000 f908 	bl	80013a0 <setTimer>
  while (1)
  {
	 fsm_automatic();
 8001190:	f7ff fb74 	bl	800087c <fsm_automatic>
	 fsm_manual();
 8001194:	f7ff fe00 	bl	8000d98 <fsm_manual>
  {
 8001198:	bf00      	nop
 800119a:	e7f9      	b.n	8001190 <main+0x48>
 800119c:	200000b8 	.word	0x200000b8
 80011a0:	40010800 	.word	0x40010800
 80011a4:	200000a4 	.word	0x200000a4

080011a8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80011a8:	b580      	push	{r7, lr}
 80011aa:	b090      	sub	sp, #64	@ 0x40
 80011ac:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80011ae:	f107 0318 	add.w	r3, r7, #24
 80011b2:	2228      	movs	r2, #40	@ 0x28
 80011b4:	2100      	movs	r1, #0
 80011b6:	4618      	mov	r0, r3
 80011b8:	f001 fd0e 	bl	8002bd8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80011bc:	1d3b      	adds	r3, r7, #4
 80011be:	2200      	movs	r2, #0
 80011c0:	601a      	str	r2, [r3, #0]
 80011c2:	605a      	str	r2, [r3, #4]
 80011c4:	609a      	str	r2, [r3, #8]
 80011c6:	60da      	str	r2, [r3, #12]
 80011c8:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80011ca:	2302      	movs	r3, #2
 80011cc:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80011ce:	2301      	movs	r3, #1
 80011d0:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80011d2:	2310      	movs	r3, #16
 80011d4:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80011d6:	2300      	movs	r3, #0
 80011d8:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011da:	f107 0318 	add.w	r3, r7, #24
 80011de:	4618      	mov	r0, r3
 80011e0:	f000 fd40 	bl	8001c64 <HAL_RCC_OscConfig>
 80011e4:	4603      	mov	r3, r0
 80011e6:	2b00      	cmp	r3, #0
 80011e8:	d001      	beq.n	80011ee <SystemClock_Config+0x46>
  {
    Error_Handler();
 80011ea:	f000 f8d3 	bl	8001394 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80011ee:	230f      	movs	r3, #15
 80011f0:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80011f2:	2300      	movs	r3, #0
 80011f4:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80011f6:	2300      	movs	r3, #0
 80011f8:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80011fa:	2300      	movs	r3, #0
 80011fc:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80011fe:	2300      	movs	r3, #0
 8001200:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8001202:	1d3b      	adds	r3, r7, #4
 8001204:	2100      	movs	r1, #0
 8001206:	4618      	mov	r0, r3
 8001208:	f000 ffae 	bl	8002168 <HAL_RCC_ClockConfig>
 800120c:	4603      	mov	r3, r0
 800120e:	2b00      	cmp	r3, #0
 8001210:	d001      	beq.n	8001216 <SystemClock_Config+0x6e>
  {
    Error_Handler();
 8001212:	f000 f8bf 	bl	8001394 <Error_Handler>
  }
}
 8001216:	bf00      	nop
 8001218:	3740      	adds	r7, #64	@ 0x40
 800121a:	46bd      	mov	sp, r7
 800121c:	bd80      	pop	{r7, pc}
	...

08001220 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001220:	b580      	push	{r7, lr}
 8001222:	b086      	sub	sp, #24
 8001224:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001226:	f107 0308 	add.w	r3, r7, #8
 800122a:	2200      	movs	r2, #0
 800122c:	601a      	str	r2, [r3, #0]
 800122e:	605a      	str	r2, [r3, #4]
 8001230:	609a      	str	r2, [r3, #8]
 8001232:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001234:	463b      	mov	r3, r7
 8001236:	2200      	movs	r2, #0
 8001238:	601a      	str	r2, [r3, #0]
 800123a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800123c:	4b1d      	ldr	r3, [pc, #116]	@ (80012b4 <MX_TIM2_Init+0x94>)
 800123e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001242:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7999;
 8001244:	4b1b      	ldr	r3, [pc, #108]	@ (80012b4 <MX_TIM2_Init+0x94>)
 8001246:	f641 723f 	movw	r2, #7999	@ 0x1f3f
 800124a:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800124c:	4b19      	ldr	r3, [pc, #100]	@ (80012b4 <MX_TIM2_Init+0x94>)
 800124e:	2200      	movs	r2, #0
 8001250:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9;
 8001252:	4b18      	ldr	r3, [pc, #96]	@ (80012b4 <MX_TIM2_Init+0x94>)
 8001254:	2209      	movs	r2, #9
 8001256:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001258:	4b16      	ldr	r3, [pc, #88]	@ (80012b4 <MX_TIM2_Init+0x94>)
 800125a:	2200      	movs	r2, #0
 800125c:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800125e:	4b15      	ldr	r3, [pc, #84]	@ (80012b4 <MX_TIM2_Init+0x94>)
 8001260:	2200      	movs	r2, #0
 8001262:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001264:	4813      	ldr	r0, [pc, #76]	@ (80012b4 <MX_TIM2_Init+0x94>)
 8001266:	f001 f8db 	bl	8002420 <HAL_TIM_Base_Init>
 800126a:	4603      	mov	r3, r0
 800126c:	2b00      	cmp	r3, #0
 800126e:	d001      	beq.n	8001274 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8001270:	f000 f890 	bl	8001394 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001274:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001278:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800127a:	f107 0308 	add.w	r3, r7, #8
 800127e:	4619      	mov	r1, r3
 8001280:	480c      	ldr	r0, [pc, #48]	@ (80012b4 <MX_TIM2_Init+0x94>)
 8001282:	f001 fa59 	bl	8002738 <HAL_TIM_ConfigClockSource>
 8001286:	4603      	mov	r3, r0
 8001288:	2b00      	cmp	r3, #0
 800128a:	d001      	beq.n	8001290 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 800128c:	f000 f882 	bl	8001394 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001290:	2300      	movs	r3, #0
 8001292:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001294:	2300      	movs	r3, #0
 8001296:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001298:	463b      	mov	r3, r7
 800129a:	4619      	mov	r1, r3
 800129c:	4805      	ldr	r0, [pc, #20]	@ (80012b4 <MX_TIM2_Init+0x94>)
 800129e:	f001 fc31 	bl	8002b04 <HAL_TIMEx_MasterConfigSynchronization>
 80012a2:	4603      	mov	r3, r0
 80012a4:	2b00      	cmp	r3, #0
 80012a6:	d001      	beq.n	80012ac <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 80012a8:	f000 f874 	bl	8001394 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80012ac:	bf00      	nop
 80012ae:	3718      	adds	r7, #24
 80012b0:	46bd      	mov	sp, r7
 80012b2:	bd80      	pop	{r7, pc}
 80012b4:	200000b8 	.word	0x200000b8

080012b8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80012b8:	b580      	push	{r7, lr}
 80012ba:	b086      	sub	sp, #24
 80012bc:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012be:	f107 0308 	add.w	r3, r7, #8
 80012c2:	2200      	movs	r2, #0
 80012c4:	601a      	str	r2, [r3, #0]
 80012c6:	605a      	str	r2, [r3, #4]
 80012c8:	609a      	str	r2, [r3, #8]
 80012ca:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80012cc:	4b28      	ldr	r3, [pc, #160]	@ (8001370 <MX_GPIO_Init+0xb8>)
 80012ce:	699b      	ldr	r3, [r3, #24]
 80012d0:	4a27      	ldr	r2, [pc, #156]	@ (8001370 <MX_GPIO_Init+0xb8>)
 80012d2:	f043 0304 	orr.w	r3, r3, #4
 80012d6:	6193      	str	r3, [r2, #24]
 80012d8:	4b25      	ldr	r3, [pc, #148]	@ (8001370 <MX_GPIO_Init+0xb8>)
 80012da:	699b      	ldr	r3, [r3, #24]
 80012dc:	f003 0304 	and.w	r3, r3, #4
 80012e0:	607b      	str	r3, [r7, #4]
 80012e2:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80012e4:	4b22      	ldr	r3, [pc, #136]	@ (8001370 <MX_GPIO_Init+0xb8>)
 80012e6:	699b      	ldr	r3, [r3, #24]
 80012e8:	4a21      	ldr	r2, [pc, #132]	@ (8001370 <MX_GPIO_Init+0xb8>)
 80012ea:	f043 0308 	orr.w	r3, r3, #8
 80012ee:	6193      	str	r3, [r2, #24]
 80012f0:	4b1f      	ldr	r3, [pc, #124]	@ (8001370 <MX_GPIO_Init+0xb8>)
 80012f2:	699b      	ldr	r3, [r3, #24]
 80012f4:	f003 0308 	and.w	r3, r3, #8
 80012f8:	603b      	str	r3, [r7, #0]
 80012fa:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, RED_13_Pin|YELLOW_13_Pin|GREEN_13_Pin|RED_24_Pin
 80012fc:	2200      	movs	r2, #0
 80012fe:	f44f 61fc 	mov.w	r1, #2016	@ 0x7e0
 8001302:	481c      	ldr	r0, [pc, #112]	@ (8001374 <MX_GPIO_Init+0xbc>)
 8001304:	f000 fc7d 	bl	8001c02 <HAL_GPIO_WritePin>
                          |YELLOW_24_Pin|GREEN_24_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, a_Pin|b_Pin|c_Pin|en4_Pin
 8001308:	2200      	movs	r2, #0
 800130a:	f240 71ff 	movw	r1, #2047	@ 0x7ff
 800130e:	481a      	ldr	r0, [pc, #104]	@ (8001378 <MX_GPIO_Init+0xc0>)
 8001310:	f000 fc77 	bl	8001c02 <HAL_GPIO_WritePin>
                          |d_Pin|e_Pin|f_Pin|g_Pin
                          |en1_Pin|en2_Pin|en3_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : MODE_BUTTON_Pin MODIFY_BUTTON_Pin SET_BUTTON_Pin */
  GPIO_InitStruct.Pin = MODE_BUTTON_Pin|MODIFY_BUTTON_Pin|SET_BUTTON_Pin;
 8001314:	231c      	movs	r3, #28
 8001316:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001318:	2300      	movs	r3, #0
 800131a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800131c:	2301      	movs	r3, #1
 800131e:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001320:	f107 0308 	add.w	r3, r7, #8
 8001324:	4619      	mov	r1, r3
 8001326:	4813      	ldr	r0, [pc, #76]	@ (8001374 <MX_GPIO_Init+0xbc>)
 8001328:	f000 fad8 	bl	80018dc <HAL_GPIO_Init>

  /*Configure GPIO pins : RED_13_Pin YELLOW_13_Pin GREEN_13_Pin RED_24_Pin
                           YELLOW_24_Pin GREEN_24_Pin */
  GPIO_InitStruct.Pin = RED_13_Pin|YELLOW_13_Pin|GREEN_13_Pin|RED_24_Pin
 800132c:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 8001330:	60bb      	str	r3, [r7, #8]
                          |YELLOW_24_Pin|GREEN_24_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001332:	2301      	movs	r3, #1
 8001334:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001336:	2300      	movs	r3, #0
 8001338:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800133a:	2302      	movs	r3, #2
 800133c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800133e:	f107 0308 	add.w	r3, r7, #8
 8001342:	4619      	mov	r1, r3
 8001344:	480b      	ldr	r0, [pc, #44]	@ (8001374 <MX_GPIO_Init+0xbc>)
 8001346:	f000 fac9 	bl	80018dc <HAL_GPIO_Init>

  /*Configure GPIO pins : a_Pin b_Pin c_Pin en4_Pin
                           d_Pin e_Pin f_Pin g_Pin
                           en1_Pin en2_Pin en3_Pin */
  GPIO_InitStruct.Pin = a_Pin|b_Pin|c_Pin|en4_Pin
 800134a:	f240 73ff 	movw	r3, #2047	@ 0x7ff
 800134e:	60bb      	str	r3, [r7, #8]
                          |d_Pin|e_Pin|f_Pin|g_Pin
                          |en1_Pin|en2_Pin|en3_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001350:	2301      	movs	r3, #1
 8001352:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001354:	2300      	movs	r3, #0
 8001356:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001358:	2302      	movs	r3, #2
 800135a:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800135c:	f107 0308 	add.w	r3, r7, #8
 8001360:	4619      	mov	r1, r3
 8001362:	4805      	ldr	r0, [pc, #20]	@ (8001378 <MX_GPIO_Init+0xc0>)
 8001364:	f000 faba 	bl	80018dc <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001368:	bf00      	nop
 800136a:	3718      	adds	r7, #24
 800136c:	46bd      	mov	sp, r7
 800136e:	bd80      	pop	{r7, pc}
 8001370:	40021000 	.word	0x40021000
 8001374:	40010800 	.word	0x40010800
 8001378:	40010c00 	.word	0x40010c00

0800137c <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 800137c:	b580      	push	{r7, lr}
 800137e:	b082      	sub	sp, #8
 8001380:	af00      	add	r7, sp, #0
 8001382:	6078      	str	r0, [r7, #4]
	timerRun();
 8001384:	f000 f852 	bl	800142c <timerRun>
	getKeyInput();
 8001388:	f7fe ff14 	bl	80001b4 <getKeyInput>
}
 800138c:	bf00      	nop
 800138e:	3708      	adds	r7, #8
 8001390:	46bd      	mov	sp, r7
 8001392:	bd80      	pop	{r7, pc}

08001394 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001394:	b480      	push	{r7}
 8001396:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001398:	b672      	cpsid	i
}
 800139a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800139c:	bf00      	nop
 800139e:	e7fd      	b.n	800139c <Error_Handler+0x8>

080013a0 <setTimer>:

int timer_counter[NUM_OF_TIMERS] = {0};
int timer_flag[NUM_OF_TIMERS] = {0};


void setTimer(int index, int duration) {
 80013a0:	b480      	push	{r7}
 80013a2:	b083      	sub	sp, #12
 80013a4:	af00      	add	r7, sp, #0
 80013a6:	6078      	str	r0, [r7, #4]
 80013a8:	6039      	str	r1, [r7, #0]
	if (index >= 0 && index < NUM_OF_TIMERS) {
 80013aa:	687b      	ldr	r3, [r7, #4]
 80013ac:	2b00      	cmp	r3, #0
 80013ae:	db12      	blt.n	80013d6 <setTimer+0x36>
 80013b0:	687b      	ldr	r3, [r7, #4]
 80013b2:	2b02      	cmp	r3, #2
 80013b4:	dc0f      	bgt.n	80013d6 <setTimer+0x36>
		timer_counter[index] = duration / TIMER_CYCLE;
 80013b6:	683b      	ldr	r3, [r7, #0]
 80013b8:	4a09      	ldr	r2, [pc, #36]	@ (80013e0 <setTimer+0x40>)
 80013ba:	fb82 1203 	smull	r1, r2, r2, r3
 80013be:	1092      	asrs	r2, r2, #2
 80013c0:	17db      	asrs	r3, r3, #31
 80013c2:	1ad2      	subs	r2, r2, r3
 80013c4:	4907      	ldr	r1, [pc, #28]	@ (80013e4 <setTimer+0x44>)
 80013c6:	687b      	ldr	r3, [r7, #4]
 80013c8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		timer_flag[index] = 0;
 80013cc:	4a06      	ldr	r2, [pc, #24]	@ (80013e8 <setTimer+0x48>)
 80013ce:	687b      	ldr	r3, [r7, #4]
 80013d0:	2100      	movs	r1, #0
 80013d2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	}
}
 80013d6:	bf00      	nop
 80013d8:	370c      	adds	r7, #12
 80013da:	46bd      	mov	sp, r7
 80013dc:	bc80      	pop	{r7}
 80013de:	4770      	bx	lr
 80013e0:	66666667 	.word	0x66666667
 80013e4:	20000100 	.word	0x20000100
 80013e8:	2000010c 	.word	0x2000010c

080013ec <isTimerFlagSet>:


int isTimerFlagSet(int index) {
 80013ec:	b480      	push	{r7}
 80013ee:	b083      	sub	sp, #12
 80013f0:	af00      	add	r7, sp, #0
 80013f2:	6078      	str	r0, [r7, #4]
	if (index >= 0 && index < NUM_OF_TIMERS) {
 80013f4:	687b      	ldr	r3, [r7, #4]
 80013f6:	2b00      	cmp	r3, #0
 80013f8:	db0f      	blt.n	800141a <isTimerFlagSet+0x2e>
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	2b02      	cmp	r3, #2
 80013fe:	dc0c      	bgt.n	800141a <isTimerFlagSet+0x2e>
		if (timer_flag[index] == 1) {
 8001400:	4a09      	ldr	r2, [pc, #36]	@ (8001428 <isTimerFlagSet+0x3c>)
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001408:	2b01      	cmp	r3, #1
 800140a:	d106      	bne.n	800141a <isTimerFlagSet+0x2e>
			timer_flag[index] = 0;
 800140c:	4a06      	ldr	r2, [pc, #24]	@ (8001428 <isTimerFlagSet+0x3c>)
 800140e:	687b      	ldr	r3, [r7, #4]
 8001410:	2100      	movs	r1, #0
 8001412:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			return 1;
 8001416:	2301      	movs	r3, #1
 8001418:	e000      	b.n	800141c <isTimerFlagSet+0x30>
		}
	}
	return 0;
 800141a:	2300      	movs	r3, #0
}
 800141c:	4618      	mov	r0, r3
 800141e:	370c      	adds	r7, #12
 8001420:	46bd      	mov	sp, r7
 8001422:	bc80      	pop	{r7}
 8001424:	4770      	bx	lr
 8001426:	bf00      	nop
 8001428:	2000010c 	.word	0x2000010c

0800142c <timerRun>:


void timerRun() {
 800142c:	b480      	push	{r7}
 800142e:	b083      	sub	sp, #12
 8001430:	af00      	add	r7, sp, #0
	for (int i = 0; i < NUM_OF_TIMERS; i++) {
 8001432:	2300      	movs	r3, #0
 8001434:	607b      	str	r3, [r7, #4]
 8001436:	e01c      	b.n	8001472 <timerRun+0x46>
		if (timer_counter[i] > 0) {
 8001438:	4a12      	ldr	r2, [pc, #72]	@ (8001484 <timerRun+0x58>)
 800143a:	687b      	ldr	r3, [r7, #4]
 800143c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001440:	2b00      	cmp	r3, #0
 8001442:	dd13      	ble.n	800146c <timerRun+0x40>
			timer_counter[i]--;
 8001444:	4a0f      	ldr	r2, [pc, #60]	@ (8001484 <timerRun+0x58>)
 8001446:	687b      	ldr	r3, [r7, #4]
 8001448:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800144c:	1e5a      	subs	r2, r3, #1
 800144e:	490d      	ldr	r1, [pc, #52]	@ (8001484 <timerRun+0x58>)
 8001450:	687b      	ldr	r3, [r7, #4]
 8001452:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
			if (timer_counter[i] <= 0) {
 8001456:	4a0b      	ldr	r2, [pc, #44]	@ (8001484 <timerRun+0x58>)
 8001458:	687b      	ldr	r3, [r7, #4]
 800145a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800145e:	2b00      	cmp	r3, #0
 8001460:	dc04      	bgt.n	800146c <timerRun+0x40>
				timer_flag[i] = 1;
 8001462:	4a09      	ldr	r2, [pc, #36]	@ (8001488 <timerRun+0x5c>)
 8001464:	687b      	ldr	r3, [r7, #4]
 8001466:	2101      	movs	r1, #1
 8001468:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for (int i = 0; i < NUM_OF_TIMERS; i++) {
 800146c:	687b      	ldr	r3, [r7, #4]
 800146e:	3301      	adds	r3, #1
 8001470:	607b      	str	r3, [r7, #4]
 8001472:	687b      	ldr	r3, [r7, #4]
 8001474:	2b02      	cmp	r3, #2
 8001476:	dddf      	ble.n	8001438 <timerRun+0xc>
			}
		}
	}
}
 8001478:	bf00      	nop
 800147a:	bf00      	nop
 800147c:	370c      	adds	r7, #12
 800147e:	46bd      	mov	sp, r7
 8001480:	bc80      	pop	{r7}
 8001482:	4770      	bx	lr
 8001484:	20000100 	.word	0x20000100
 8001488:	2000010c 	.word	0x2000010c

0800148c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800148c:	b480      	push	{r7}
 800148e:	b085      	sub	sp, #20
 8001490:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8001492:	4b15      	ldr	r3, [pc, #84]	@ (80014e8 <HAL_MspInit+0x5c>)
 8001494:	699b      	ldr	r3, [r3, #24]
 8001496:	4a14      	ldr	r2, [pc, #80]	@ (80014e8 <HAL_MspInit+0x5c>)
 8001498:	f043 0301 	orr.w	r3, r3, #1
 800149c:	6193      	str	r3, [r2, #24]
 800149e:	4b12      	ldr	r3, [pc, #72]	@ (80014e8 <HAL_MspInit+0x5c>)
 80014a0:	699b      	ldr	r3, [r3, #24]
 80014a2:	f003 0301 	and.w	r3, r3, #1
 80014a6:	60bb      	str	r3, [r7, #8]
 80014a8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 80014aa:	4b0f      	ldr	r3, [pc, #60]	@ (80014e8 <HAL_MspInit+0x5c>)
 80014ac:	69db      	ldr	r3, [r3, #28]
 80014ae:	4a0e      	ldr	r2, [pc, #56]	@ (80014e8 <HAL_MspInit+0x5c>)
 80014b0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80014b4:	61d3      	str	r3, [r2, #28]
 80014b6:	4b0c      	ldr	r3, [pc, #48]	@ (80014e8 <HAL_MspInit+0x5c>)
 80014b8:	69db      	ldr	r3, [r3, #28]
 80014ba:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80014be:	607b      	str	r3, [r7, #4]
 80014c0:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** DISABLE: JTAG-DP Disabled and SW-DP Disabled
  */
  __HAL_AFIO_REMAP_SWJ_DISABLE();
 80014c2:	4b0a      	ldr	r3, [pc, #40]	@ (80014ec <HAL_MspInit+0x60>)
 80014c4:	685b      	ldr	r3, [r3, #4]
 80014c6:	60fb      	str	r3, [r7, #12]
 80014c8:	68fb      	ldr	r3, [r7, #12]
 80014ca:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 80014ce:	60fb      	str	r3, [r7, #12]
 80014d0:	68fb      	ldr	r3, [r7, #12]
 80014d2:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80014d6:	60fb      	str	r3, [r7, #12]
 80014d8:	4a04      	ldr	r2, [pc, #16]	@ (80014ec <HAL_MspInit+0x60>)
 80014da:	68fb      	ldr	r3, [r7, #12]
 80014dc:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80014de:	bf00      	nop
 80014e0:	3714      	adds	r7, #20
 80014e2:	46bd      	mov	sp, r7
 80014e4:	bc80      	pop	{r7}
 80014e6:	4770      	bx	lr
 80014e8:	40021000 	.word	0x40021000
 80014ec:	40010000 	.word	0x40010000

080014f0 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80014f0:	b580      	push	{r7, lr}
 80014f2:	b084      	sub	sp, #16
 80014f4:	af00      	add	r7, sp, #0
 80014f6:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 80014f8:	687b      	ldr	r3, [r7, #4]
 80014fa:	681b      	ldr	r3, [r3, #0]
 80014fc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001500:	d113      	bne.n	800152a <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001502:	4b0c      	ldr	r3, [pc, #48]	@ (8001534 <HAL_TIM_Base_MspInit+0x44>)
 8001504:	69db      	ldr	r3, [r3, #28]
 8001506:	4a0b      	ldr	r2, [pc, #44]	@ (8001534 <HAL_TIM_Base_MspInit+0x44>)
 8001508:	f043 0301 	orr.w	r3, r3, #1
 800150c:	61d3      	str	r3, [r2, #28]
 800150e:	4b09      	ldr	r3, [pc, #36]	@ (8001534 <HAL_TIM_Base_MspInit+0x44>)
 8001510:	69db      	ldr	r3, [r3, #28]
 8001512:	f003 0301 	and.w	r3, r3, #1
 8001516:	60fb      	str	r3, [r7, #12]
 8001518:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 800151a:	2200      	movs	r2, #0
 800151c:	2100      	movs	r1, #0
 800151e:	201c      	movs	r0, #28
 8001520:	f000 f9a5 	bl	800186e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001524:	201c      	movs	r0, #28
 8001526:	f000 f9be 	bl	80018a6 <HAL_NVIC_EnableIRQ>

  /* USER CODE END TIM2_MspInit 1 */

  }

}
 800152a:	bf00      	nop
 800152c:	3710      	adds	r7, #16
 800152e:	46bd      	mov	sp, r7
 8001530:	bd80      	pop	{r7, pc}
 8001532:	bf00      	nop
 8001534:	40021000 	.word	0x40021000

08001538 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001538:	b480      	push	{r7}
 800153a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800153c:	bf00      	nop
 800153e:	e7fd      	b.n	800153c <NMI_Handler+0x4>

08001540 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001540:	b480      	push	{r7}
 8001542:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001544:	bf00      	nop
 8001546:	e7fd      	b.n	8001544 <HardFault_Handler+0x4>

08001548 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001548:	b480      	push	{r7}
 800154a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800154c:	bf00      	nop
 800154e:	e7fd      	b.n	800154c <MemManage_Handler+0x4>

08001550 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001550:	b480      	push	{r7}
 8001552:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001554:	bf00      	nop
 8001556:	e7fd      	b.n	8001554 <BusFault_Handler+0x4>

08001558 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001558:	b480      	push	{r7}
 800155a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800155c:	bf00      	nop
 800155e:	e7fd      	b.n	800155c <UsageFault_Handler+0x4>

08001560 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001560:	b480      	push	{r7}
 8001562:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001564:	bf00      	nop
 8001566:	46bd      	mov	sp, r7
 8001568:	bc80      	pop	{r7}
 800156a:	4770      	bx	lr

0800156c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800156c:	b480      	push	{r7}
 800156e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001570:	bf00      	nop
 8001572:	46bd      	mov	sp, r7
 8001574:	bc80      	pop	{r7}
 8001576:	4770      	bx	lr

08001578 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001578:	b480      	push	{r7}
 800157a:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800157c:	bf00      	nop
 800157e:	46bd      	mov	sp, r7
 8001580:	bc80      	pop	{r7}
 8001582:	4770      	bx	lr

08001584 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001584:	b580      	push	{r7, lr}
 8001586:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001588:	f000 f87e 	bl	8001688 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800158c:	bf00      	nop
 800158e:	bd80      	pop	{r7, pc}

08001590 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001590:	b580      	push	{r7, lr}
 8001592:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001594:	4802      	ldr	r0, [pc, #8]	@ (80015a0 <TIM2_IRQHandler+0x10>)
 8001596:	f000 ffdf 	bl	8002558 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 800159a:	bf00      	nop
 800159c:	bd80      	pop	{r7, pc}
 800159e:	bf00      	nop
 80015a0:	200000b8 	.word	0x200000b8

080015a4 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80015a4:	b480      	push	{r7}
 80015a6:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80015a8:	bf00      	nop
 80015aa:	46bd      	mov	sp, r7
 80015ac:	bc80      	pop	{r7}
 80015ae:	4770      	bx	lr

080015b0 <Reset_Handler>:
 80015b0:	f7ff fff8 	bl	80015a4 <SystemInit>
 80015b4:	480b      	ldr	r0, [pc, #44]	@ (80015e4 <LoopFillZerobss+0xe>)
 80015b6:	490c      	ldr	r1, [pc, #48]	@ (80015e8 <LoopFillZerobss+0x12>)
 80015b8:	4a0c      	ldr	r2, [pc, #48]	@ (80015ec <LoopFillZerobss+0x16>)
 80015ba:	2300      	movs	r3, #0
 80015bc:	e002      	b.n	80015c4 <LoopCopyDataInit>

080015be <CopyDataInit>:
 80015be:	58d4      	ldr	r4, [r2, r3]
 80015c0:	50c4      	str	r4, [r0, r3]
 80015c2:	3304      	adds	r3, #4

080015c4 <LoopCopyDataInit>:
 80015c4:	18c4      	adds	r4, r0, r3
 80015c6:	428c      	cmp	r4, r1
 80015c8:	d3f9      	bcc.n	80015be <CopyDataInit>
 80015ca:	4a09      	ldr	r2, [pc, #36]	@ (80015f0 <LoopFillZerobss+0x1a>)
 80015cc:	4c09      	ldr	r4, [pc, #36]	@ (80015f4 <LoopFillZerobss+0x1e>)
 80015ce:	2300      	movs	r3, #0
 80015d0:	e001      	b.n	80015d6 <LoopFillZerobss>

080015d2 <FillZerobss>:
 80015d2:	6013      	str	r3, [r2, #0]
 80015d4:	3204      	adds	r2, #4

080015d6 <LoopFillZerobss>:
 80015d6:	42a2      	cmp	r2, r4
 80015d8:	d3fb      	bcc.n	80015d2 <FillZerobss>
 80015da:	f001 fb05 	bl	8002be8 <__libc_init_array>
 80015de:	f7ff fdb3 	bl	8001148 <main>
 80015e2:	4770      	bx	lr
 80015e4:	20000000 	.word	0x20000000
 80015e8:	20000058 	.word	0x20000058
 80015ec:	08002c74 	.word	0x08002c74
 80015f0:	20000058 	.word	0x20000058
 80015f4:	2000011c 	.word	0x2000011c

080015f8 <ADC1_2_IRQHandler>:
 80015f8:	e7fe      	b.n	80015f8 <ADC1_2_IRQHandler>
	...

080015fc <HAL_Init>:
 80015fc:	b580      	push	{r7, lr}
 80015fe:	af00      	add	r7, sp, #0
 8001600:	4b08      	ldr	r3, [pc, #32]	@ (8001624 <HAL_Init+0x28>)
 8001602:	681b      	ldr	r3, [r3, #0]
 8001604:	4a07      	ldr	r2, [pc, #28]	@ (8001624 <HAL_Init+0x28>)
 8001606:	f043 0310 	orr.w	r3, r3, #16
 800160a:	6013      	str	r3, [r2, #0]
 800160c:	2003      	movs	r0, #3
 800160e:	f000 f923 	bl	8001858 <HAL_NVIC_SetPriorityGrouping>
 8001612:	200f      	movs	r0, #15
 8001614:	f000 f808 	bl	8001628 <HAL_InitTick>
 8001618:	f7ff ff38 	bl	800148c <HAL_MspInit>
 800161c:	2300      	movs	r3, #0
 800161e:	4618      	mov	r0, r3
 8001620:	bd80      	pop	{r7, pc}
 8001622:	bf00      	nop
 8001624:	40022000 	.word	0x40022000

08001628 <HAL_InitTick>:
 8001628:	b580      	push	{r7, lr}
 800162a:	b082      	sub	sp, #8
 800162c:	af00      	add	r7, sp, #0
 800162e:	6078      	str	r0, [r7, #4]
 8001630:	4b12      	ldr	r3, [pc, #72]	@ (800167c <HAL_InitTick+0x54>)
 8001632:	681a      	ldr	r2, [r3, #0]
 8001634:	4b12      	ldr	r3, [pc, #72]	@ (8001680 <HAL_InitTick+0x58>)
 8001636:	781b      	ldrb	r3, [r3, #0]
 8001638:	4619      	mov	r1, r3
 800163a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800163e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001642:	fbb2 f3f3 	udiv	r3, r2, r3
 8001646:	4618      	mov	r0, r3
 8001648:	f000 f93b 	bl	80018c2 <HAL_SYSTICK_Config>
 800164c:	4603      	mov	r3, r0
 800164e:	2b00      	cmp	r3, #0
 8001650:	d001      	beq.n	8001656 <HAL_InitTick+0x2e>
 8001652:	2301      	movs	r3, #1
 8001654:	e00e      	b.n	8001674 <HAL_InitTick+0x4c>
 8001656:	687b      	ldr	r3, [r7, #4]
 8001658:	2b0f      	cmp	r3, #15
 800165a:	d80a      	bhi.n	8001672 <HAL_InitTick+0x4a>
 800165c:	2200      	movs	r2, #0
 800165e:	6879      	ldr	r1, [r7, #4]
 8001660:	f04f 30ff 	mov.w	r0, #4294967295
 8001664:	f000 f903 	bl	800186e <HAL_NVIC_SetPriority>
 8001668:	4a06      	ldr	r2, [pc, #24]	@ (8001684 <HAL_InitTick+0x5c>)
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	6013      	str	r3, [r2, #0]
 800166e:	2300      	movs	r3, #0
 8001670:	e000      	b.n	8001674 <HAL_InitTick+0x4c>
 8001672:	2301      	movs	r3, #1
 8001674:	4618      	mov	r0, r3
 8001676:	3708      	adds	r7, #8
 8001678:	46bd      	mov	sp, r7
 800167a:	bd80      	pop	{r7, pc}
 800167c:	2000004c 	.word	0x2000004c
 8001680:	20000054 	.word	0x20000054
 8001684:	20000050 	.word	0x20000050

08001688 <HAL_IncTick>:
 8001688:	b480      	push	{r7}
 800168a:	af00      	add	r7, sp, #0
 800168c:	4b05      	ldr	r3, [pc, #20]	@ (80016a4 <HAL_IncTick+0x1c>)
 800168e:	781b      	ldrb	r3, [r3, #0]
 8001690:	461a      	mov	r2, r3
 8001692:	4b05      	ldr	r3, [pc, #20]	@ (80016a8 <HAL_IncTick+0x20>)
 8001694:	681b      	ldr	r3, [r3, #0]
 8001696:	4413      	add	r3, r2
 8001698:	4a03      	ldr	r2, [pc, #12]	@ (80016a8 <HAL_IncTick+0x20>)
 800169a:	6013      	str	r3, [r2, #0]
 800169c:	bf00      	nop
 800169e:	46bd      	mov	sp, r7
 80016a0:	bc80      	pop	{r7}
 80016a2:	4770      	bx	lr
 80016a4:	20000054 	.word	0x20000054
 80016a8:	20000118 	.word	0x20000118

080016ac <HAL_GetTick>:
 80016ac:	b480      	push	{r7}
 80016ae:	af00      	add	r7, sp, #0
 80016b0:	4b02      	ldr	r3, [pc, #8]	@ (80016bc <HAL_GetTick+0x10>)
 80016b2:	681b      	ldr	r3, [r3, #0]
 80016b4:	4618      	mov	r0, r3
 80016b6:	46bd      	mov	sp, r7
 80016b8:	bc80      	pop	{r7}
 80016ba:	4770      	bx	lr
 80016bc:	20000118 	.word	0x20000118

080016c0 <__NVIC_SetPriorityGrouping>:
 80016c0:	b480      	push	{r7}
 80016c2:	b085      	sub	sp, #20
 80016c4:	af00      	add	r7, sp, #0
 80016c6:	6078      	str	r0, [r7, #4]
 80016c8:	687b      	ldr	r3, [r7, #4]
 80016ca:	f003 0307 	and.w	r3, r3, #7
 80016ce:	60fb      	str	r3, [r7, #12]
 80016d0:	4b0c      	ldr	r3, [pc, #48]	@ (8001704 <__NVIC_SetPriorityGrouping+0x44>)
 80016d2:	68db      	ldr	r3, [r3, #12]
 80016d4:	60bb      	str	r3, [r7, #8]
 80016d6:	68ba      	ldr	r2, [r7, #8]
 80016d8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80016dc:	4013      	ands	r3, r2
 80016de:	60bb      	str	r3, [r7, #8]
 80016e0:	68fb      	ldr	r3, [r7, #12]
 80016e2:	021a      	lsls	r2, r3, #8
 80016e4:	68bb      	ldr	r3, [r7, #8]
 80016e6:	4313      	orrs	r3, r2
 80016e8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80016ec:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80016f0:	60bb      	str	r3, [r7, #8]
 80016f2:	4a04      	ldr	r2, [pc, #16]	@ (8001704 <__NVIC_SetPriorityGrouping+0x44>)
 80016f4:	68bb      	ldr	r3, [r7, #8]
 80016f6:	60d3      	str	r3, [r2, #12]
 80016f8:	bf00      	nop
 80016fa:	3714      	adds	r7, #20
 80016fc:	46bd      	mov	sp, r7
 80016fe:	bc80      	pop	{r7}
 8001700:	4770      	bx	lr
 8001702:	bf00      	nop
 8001704:	e000ed00 	.word	0xe000ed00

08001708 <__NVIC_GetPriorityGrouping>:
 8001708:	b480      	push	{r7}
 800170a:	af00      	add	r7, sp, #0
 800170c:	4b04      	ldr	r3, [pc, #16]	@ (8001720 <__NVIC_GetPriorityGrouping+0x18>)
 800170e:	68db      	ldr	r3, [r3, #12]
 8001710:	0a1b      	lsrs	r3, r3, #8
 8001712:	f003 0307 	and.w	r3, r3, #7
 8001716:	4618      	mov	r0, r3
 8001718:	46bd      	mov	sp, r7
 800171a:	bc80      	pop	{r7}
 800171c:	4770      	bx	lr
 800171e:	bf00      	nop
 8001720:	e000ed00 	.word	0xe000ed00

08001724 <__NVIC_EnableIRQ>:
 8001724:	b480      	push	{r7}
 8001726:	b083      	sub	sp, #12
 8001728:	af00      	add	r7, sp, #0
 800172a:	4603      	mov	r3, r0
 800172c:	71fb      	strb	r3, [r7, #7]
 800172e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001732:	2b00      	cmp	r3, #0
 8001734:	db0b      	blt.n	800174e <__NVIC_EnableIRQ+0x2a>
 8001736:	79fb      	ldrb	r3, [r7, #7]
 8001738:	f003 021f 	and.w	r2, r3, #31
 800173c:	4906      	ldr	r1, [pc, #24]	@ (8001758 <__NVIC_EnableIRQ+0x34>)
 800173e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001742:	095b      	lsrs	r3, r3, #5
 8001744:	2001      	movs	r0, #1
 8001746:	fa00 f202 	lsl.w	r2, r0, r2
 800174a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800174e:	bf00      	nop
 8001750:	370c      	adds	r7, #12
 8001752:	46bd      	mov	sp, r7
 8001754:	bc80      	pop	{r7}
 8001756:	4770      	bx	lr
 8001758:	e000e100 	.word	0xe000e100

0800175c <__NVIC_SetPriority>:
 800175c:	b480      	push	{r7}
 800175e:	b083      	sub	sp, #12
 8001760:	af00      	add	r7, sp, #0
 8001762:	4603      	mov	r3, r0
 8001764:	6039      	str	r1, [r7, #0]
 8001766:	71fb      	strb	r3, [r7, #7]
 8001768:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800176c:	2b00      	cmp	r3, #0
 800176e:	db0a      	blt.n	8001786 <__NVIC_SetPriority+0x2a>
 8001770:	683b      	ldr	r3, [r7, #0]
 8001772:	b2da      	uxtb	r2, r3
 8001774:	490c      	ldr	r1, [pc, #48]	@ (80017a8 <__NVIC_SetPriority+0x4c>)
 8001776:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800177a:	0112      	lsls	r2, r2, #4
 800177c:	b2d2      	uxtb	r2, r2
 800177e:	440b      	add	r3, r1
 8001780:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001784:	e00a      	b.n	800179c <__NVIC_SetPriority+0x40>
 8001786:	683b      	ldr	r3, [r7, #0]
 8001788:	b2da      	uxtb	r2, r3
 800178a:	4908      	ldr	r1, [pc, #32]	@ (80017ac <__NVIC_SetPriority+0x50>)
 800178c:	79fb      	ldrb	r3, [r7, #7]
 800178e:	f003 030f 	and.w	r3, r3, #15
 8001792:	3b04      	subs	r3, #4
 8001794:	0112      	lsls	r2, r2, #4
 8001796:	b2d2      	uxtb	r2, r2
 8001798:	440b      	add	r3, r1
 800179a:	761a      	strb	r2, [r3, #24]
 800179c:	bf00      	nop
 800179e:	370c      	adds	r7, #12
 80017a0:	46bd      	mov	sp, r7
 80017a2:	bc80      	pop	{r7}
 80017a4:	4770      	bx	lr
 80017a6:	bf00      	nop
 80017a8:	e000e100 	.word	0xe000e100
 80017ac:	e000ed00 	.word	0xe000ed00

080017b0 <NVIC_EncodePriority>:
 80017b0:	b480      	push	{r7}
 80017b2:	b089      	sub	sp, #36	@ 0x24
 80017b4:	af00      	add	r7, sp, #0
 80017b6:	60f8      	str	r0, [r7, #12]
 80017b8:	60b9      	str	r1, [r7, #8]
 80017ba:	607a      	str	r2, [r7, #4]
 80017bc:	68fb      	ldr	r3, [r7, #12]
 80017be:	f003 0307 	and.w	r3, r3, #7
 80017c2:	61fb      	str	r3, [r7, #28]
 80017c4:	69fb      	ldr	r3, [r7, #28]
 80017c6:	f1c3 0307 	rsb	r3, r3, #7
 80017ca:	2b04      	cmp	r3, #4
 80017cc:	bf28      	it	cs
 80017ce:	2304      	movcs	r3, #4
 80017d0:	61bb      	str	r3, [r7, #24]
 80017d2:	69fb      	ldr	r3, [r7, #28]
 80017d4:	3304      	adds	r3, #4
 80017d6:	2b06      	cmp	r3, #6
 80017d8:	d902      	bls.n	80017e0 <NVIC_EncodePriority+0x30>
 80017da:	69fb      	ldr	r3, [r7, #28]
 80017dc:	3b03      	subs	r3, #3
 80017de:	e000      	b.n	80017e2 <NVIC_EncodePriority+0x32>
 80017e0:	2300      	movs	r3, #0
 80017e2:	617b      	str	r3, [r7, #20]
 80017e4:	f04f 32ff 	mov.w	r2, #4294967295
 80017e8:	69bb      	ldr	r3, [r7, #24]
 80017ea:	fa02 f303 	lsl.w	r3, r2, r3
 80017ee:	43da      	mvns	r2, r3
 80017f0:	68bb      	ldr	r3, [r7, #8]
 80017f2:	401a      	ands	r2, r3
 80017f4:	697b      	ldr	r3, [r7, #20]
 80017f6:	409a      	lsls	r2, r3
 80017f8:	f04f 31ff 	mov.w	r1, #4294967295
 80017fc:	697b      	ldr	r3, [r7, #20]
 80017fe:	fa01 f303 	lsl.w	r3, r1, r3
 8001802:	43d9      	mvns	r1, r3
 8001804:	687b      	ldr	r3, [r7, #4]
 8001806:	400b      	ands	r3, r1
 8001808:	4313      	orrs	r3, r2
 800180a:	4618      	mov	r0, r3
 800180c:	3724      	adds	r7, #36	@ 0x24
 800180e:	46bd      	mov	sp, r7
 8001810:	bc80      	pop	{r7}
 8001812:	4770      	bx	lr

08001814 <SysTick_Config>:
 8001814:	b580      	push	{r7, lr}
 8001816:	b082      	sub	sp, #8
 8001818:	af00      	add	r7, sp, #0
 800181a:	6078      	str	r0, [r7, #4]
 800181c:	687b      	ldr	r3, [r7, #4]
 800181e:	3b01      	subs	r3, #1
 8001820:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001824:	d301      	bcc.n	800182a <SysTick_Config+0x16>
 8001826:	2301      	movs	r3, #1
 8001828:	e00f      	b.n	800184a <SysTick_Config+0x36>
 800182a:	4a0a      	ldr	r2, [pc, #40]	@ (8001854 <SysTick_Config+0x40>)
 800182c:	687b      	ldr	r3, [r7, #4]
 800182e:	3b01      	subs	r3, #1
 8001830:	6053      	str	r3, [r2, #4]
 8001832:	210f      	movs	r1, #15
 8001834:	f04f 30ff 	mov.w	r0, #4294967295
 8001838:	f7ff ff90 	bl	800175c <__NVIC_SetPriority>
 800183c:	4b05      	ldr	r3, [pc, #20]	@ (8001854 <SysTick_Config+0x40>)
 800183e:	2200      	movs	r2, #0
 8001840:	609a      	str	r2, [r3, #8]
 8001842:	4b04      	ldr	r3, [pc, #16]	@ (8001854 <SysTick_Config+0x40>)
 8001844:	2207      	movs	r2, #7
 8001846:	601a      	str	r2, [r3, #0]
 8001848:	2300      	movs	r3, #0
 800184a:	4618      	mov	r0, r3
 800184c:	3708      	adds	r7, #8
 800184e:	46bd      	mov	sp, r7
 8001850:	bd80      	pop	{r7, pc}
 8001852:	bf00      	nop
 8001854:	e000e010 	.word	0xe000e010

08001858 <HAL_NVIC_SetPriorityGrouping>:
 8001858:	b580      	push	{r7, lr}
 800185a:	b082      	sub	sp, #8
 800185c:	af00      	add	r7, sp, #0
 800185e:	6078      	str	r0, [r7, #4]
 8001860:	6878      	ldr	r0, [r7, #4]
 8001862:	f7ff ff2d 	bl	80016c0 <__NVIC_SetPriorityGrouping>
 8001866:	bf00      	nop
 8001868:	3708      	adds	r7, #8
 800186a:	46bd      	mov	sp, r7
 800186c:	bd80      	pop	{r7, pc}

0800186e <HAL_NVIC_SetPriority>:
 800186e:	b580      	push	{r7, lr}
 8001870:	b086      	sub	sp, #24
 8001872:	af00      	add	r7, sp, #0
 8001874:	4603      	mov	r3, r0
 8001876:	60b9      	str	r1, [r7, #8]
 8001878:	607a      	str	r2, [r7, #4]
 800187a:	73fb      	strb	r3, [r7, #15]
 800187c:	2300      	movs	r3, #0
 800187e:	617b      	str	r3, [r7, #20]
 8001880:	f7ff ff42 	bl	8001708 <__NVIC_GetPriorityGrouping>
 8001884:	6178      	str	r0, [r7, #20]
 8001886:	687a      	ldr	r2, [r7, #4]
 8001888:	68b9      	ldr	r1, [r7, #8]
 800188a:	6978      	ldr	r0, [r7, #20]
 800188c:	f7ff ff90 	bl	80017b0 <NVIC_EncodePriority>
 8001890:	4602      	mov	r2, r0
 8001892:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001896:	4611      	mov	r1, r2
 8001898:	4618      	mov	r0, r3
 800189a:	f7ff ff5f 	bl	800175c <__NVIC_SetPriority>
 800189e:	bf00      	nop
 80018a0:	3718      	adds	r7, #24
 80018a2:	46bd      	mov	sp, r7
 80018a4:	bd80      	pop	{r7, pc}

080018a6 <HAL_NVIC_EnableIRQ>:
 80018a6:	b580      	push	{r7, lr}
 80018a8:	b082      	sub	sp, #8
 80018aa:	af00      	add	r7, sp, #0
 80018ac:	4603      	mov	r3, r0
 80018ae:	71fb      	strb	r3, [r7, #7]
 80018b0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80018b4:	4618      	mov	r0, r3
 80018b6:	f7ff ff35 	bl	8001724 <__NVIC_EnableIRQ>
 80018ba:	bf00      	nop
 80018bc:	3708      	adds	r7, #8
 80018be:	46bd      	mov	sp, r7
 80018c0:	bd80      	pop	{r7, pc}

080018c2 <HAL_SYSTICK_Config>:
 80018c2:	b580      	push	{r7, lr}
 80018c4:	b082      	sub	sp, #8
 80018c6:	af00      	add	r7, sp, #0
 80018c8:	6078      	str	r0, [r7, #4]
 80018ca:	6878      	ldr	r0, [r7, #4]
 80018cc:	f7ff ffa2 	bl	8001814 <SysTick_Config>
 80018d0:	4603      	mov	r3, r0
 80018d2:	4618      	mov	r0, r3
 80018d4:	3708      	adds	r7, #8
 80018d6:	46bd      	mov	sp, r7
 80018d8:	bd80      	pop	{r7, pc}
	...

080018dc <HAL_GPIO_Init>:
 80018dc:	b480      	push	{r7}
 80018de:	b08b      	sub	sp, #44	@ 0x2c
 80018e0:	af00      	add	r7, sp, #0
 80018e2:	6078      	str	r0, [r7, #4]
 80018e4:	6039      	str	r1, [r7, #0]
 80018e6:	2300      	movs	r3, #0
 80018e8:	627b      	str	r3, [r7, #36]	@ 0x24
 80018ea:	2300      	movs	r3, #0
 80018ec:	623b      	str	r3, [r7, #32]
 80018ee:	e161      	b.n	8001bb4 <HAL_GPIO_Init+0x2d8>
 80018f0:	2201      	movs	r2, #1
 80018f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80018f4:	fa02 f303 	lsl.w	r3, r2, r3
 80018f8:	61fb      	str	r3, [r7, #28]
 80018fa:	683b      	ldr	r3, [r7, #0]
 80018fc:	681b      	ldr	r3, [r3, #0]
 80018fe:	69fa      	ldr	r2, [r7, #28]
 8001900:	4013      	ands	r3, r2
 8001902:	61bb      	str	r3, [r7, #24]
 8001904:	69ba      	ldr	r2, [r7, #24]
 8001906:	69fb      	ldr	r3, [r7, #28]
 8001908:	429a      	cmp	r2, r3
 800190a:	f040 8150 	bne.w	8001bae <HAL_GPIO_Init+0x2d2>
 800190e:	683b      	ldr	r3, [r7, #0]
 8001910:	685b      	ldr	r3, [r3, #4]
 8001912:	4a97      	ldr	r2, [pc, #604]	@ (8001b70 <HAL_GPIO_Init+0x294>)
 8001914:	4293      	cmp	r3, r2
 8001916:	d05e      	beq.n	80019d6 <HAL_GPIO_Init+0xfa>
 8001918:	4a95      	ldr	r2, [pc, #596]	@ (8001b70 <HAL_GPIO_Init+0x294>)
 800191a:	4293      	cmp	r3, r2
 800191c:	d875      	bhi.n	8001a0a <HAL_GPIO_Init+0x12e>
 800191e:	4a95      	ldr	r2, [pc, #596]	@ (8001b74 <HAL_GPIO_Init+0x298>)
 8001920:	4293      	cmp	r3, r2
 8001922:	d058      	beq.n	80019d6 <HAL_GPIO_Init+0xfa>
 8001924:	4a93      	ldr	r2, [pc, #588]	@ (8001b74 <HAL_GPIO_Init+0x298>)
 8001926:	4293      	cmp	r3, r2
 8001928:	d86f      	bhi.n	8001a0a <HAL_GPIO_Init+0x12e>
 800192a:	4a93      	ldr	r2, [pc, #588]	@ (8001b78 <HAL_GPIO_Init+0x29c>)
 800192c:	4293      	cmp	r3, r2
 800192e:	d052      	beq.n	80019d6 <HAL_GPIO_Init+0xfa>
 8001930:	4a91      	ldr	r2, [pc, #580]	@ (8001b78 <HAL_GPIO_Init+0x29c>)
 8001932:	4293      	cmp	r3, r2
 8001934:	d869      	bhi.n	8001a0a <HAL_GPIO_Init+0x12e>
 8001936:	4a91      	ldr	r2, [pc, #580]	@ (8001b7c <HAL_GPIO_Init+0x2a0>)
 8001938:	4293      	cmp	r3, r2
 800193a:	d04c      	beq.n	80019d6 <HAL_GPIO_Init+0xfa>
 800193c:	4a8f      	ldr	r2, [pc, #572]	@ (8001b7c <HAL_GPIO_Init+0x2a0>)
 800193e:	4293      	cmp	r3, r2
 8001940:	d863      	bhi.n	8001a0a <HAL_GPIO_Init+0x12e>
 8001942:	4a8f      	ldr	r2, [pc, #572]	@ (8001b80 <HAL_GPIO_Init+0x2a4>)
 8001944:	4293      	cmp	r3, r2
 8001946:	d046      	beq.n	80019d6 <HAL_GPIO_Init+0xfa>
 8001948:	4a8d      	ldr	r2, [pc, #564]	@ (8001b80 <HAL_GPIO_Init+0x2a4>)
 800194a:	4293      	cmp	r3, r2
 800194c:	d85d      	bhi.n	8001a0a <HAL_GPIO_Init+0x12e>
 800194e:	2b12      	cmp	r3, #18
 8001950:	d82a      	bhi.n	80019a8 <HAL_GPIO_Init+0xcc>
 8001952:	2b12      	cmp	r3, #18
 8001954:	d859      	bhi.n	8001a0a <HAL_GPIO_Init+0x12e>
 8001956:	a201      	add	r2, pc, #4	@ (adr r2, 800195c <HAL_GPIO_Init+0x80>)
 8001958:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800195c:	080019d7 	.word	0x080019d7
 8001960:	080019b1 	.word	0x080019b1
 8001964:	080019c3 	.word	0x080019c3
 8001968:	08001a05 	.word	0x08001a05
 800196c:	08001a0b 	.word	0x08001a0b
 8001970:	08001a0b 	.word	0x08001a0b
 8001974:	08001a0b 	.word	0x08001a0b
 8001978:	08001a0b 	.word	0x08001a0b
 800197c:	08001a0b 	.word	0x08001a0b
 8001980:	08001a0b 	.word	0x08001a0b
 8001984:	08001a0b 	.word	0x08001a0b
 8001988:	08001a0b 	.word	0x08001a0b
 800198c:	08001a0b 	.word	0x08001a0b
 8001990:	08001a0b 	.word	0x08001a0b
 8001994:	08001a0b 	.word	0x08001a0b
 8001998:	08001a0b 	.word	0x08001a0b
 800199c:	08001a0b 	.word	0x08001a0b
 80019a0:	080019b9 	.word	0x080019b9
 80019a4:	080019cd 	.word	0x080019cd
 80019a8:	4a76      	ldr	r2, [pc, #472]	@ (8001b84 <HAL_GPIO_Init+0x2a8>)
 80019aa:	4293      	cmp	r3, r2
 80019ac:	d013      	beq.n	80019d6 <HAL_GPIO_Init+0xfa>
 80019ae:	e02c      	b.n	8001a0a <HAL_GPIO_Init+0x12e>
 80019b0:	683b      	ldr	r3, [r7, #0]
 80019b2:	68db      	ldr	r3, [r3, #12]
 80019b4:	623b      	str	r3, [r7, #32]
 80019b6:	e029      	b.n	8001a0c <HAL_GPIO_Init+0x130>
 80019b8:	683b      	ldr	r3, [r7, #0]
 80019ba:	68db      	ldr	r3, [r3, #12]
 80019bc:	3304      	adds	r3, #4
 80019be:	623b      	str	r3, [r7, #32]
 80019c0:	e024      	b.n	8001a0c <HAL_GPIO_Init+0x130>
 80019c2:	683b      	ldr	r3, [r7, #0]
 80019c4:	68db      	ldr	r3, [r3, #12]
 80019c6:	3308      	adds	r3, #8
 80019c8:	623b      	str	r3, [r7, #32]
 80019ca:	e01f      	b.n	8001a0c <HAL_GPIO_Init+0x130>
 80019cc:	683b      	ldr	r3, [r7, #0]
 80019ce:	68db      	ldr	r3, [r3, #12]
 80019d0:	330c      	adds	r3, #12
 80019d2:	623b      	str	r3, [r7, #32]
 80019d4:	e01a      	b.n	8001a0c <HAL_GPIO_Init+0x130>
 80019d6:	683b      	ldr	r3, [r7, #0]
 80019d8:	689b      	ldr	r3, [r3, #8]
 80019da:	2b00      	cmp	r3, #0
 80019dc:	d102      	bne.n	80019e4 <HAL_GPIO_Init+0x108>
 80019de:	2304      	movs	r3, #4
 80019e0:	623b      	str	r3, [r7, #32]
 80019e2:	e013      	b.n	8001a0c <HAL_GPIO_Init+0x130>
 80019e4:	683b      	ldr	r3, [r7, #0]
 80019e6:	689b      	ldr	r3, [r3, #8]
 80019e8:	2b01      	cmp	r3, #1
 80019ea:	d105      	bne.n	80019f8 <HAL_GPIO_Init+0x11c>
 80019ec:	2308      	movs	r3, #8
 80019ee:	623b      	str	r3, [r7, #32]
 80019f0:	687b      	ldr	r3, [r7, #4]
 80019f2:	69fa      	ldr	r2, [r7, #28]
 80019f4:	611a      	str	r2, [r3, #16]
 80019f6:	e009      	b.n	8001a0c <HAL_GPIO_Init+0x130>
 80019f8:	2308      	movs	r3, #8
 80019fa:	623b      	str	r3, [r7, #32]
 80019fc:	687b      	ldr	r3, [r7, #4]
 80019fe:	69fa      	ldr	r2, [r7, #28]
 8001a00:	615a      	str	r2, [r3, #20]
 8001a02:	e003      	b.n	8001a0c <HAL_GPIO_Init+0x130>
 8001a04:	2300      	movs	r3, #0
 8001a06:	623b      	str	r3, [r7, #32]
 8001a08:	e000      	b.n	8001a0c <HAL_GPIO_Init+0x130>
 8001a0a:	bf00      	nop
 8001a0c:	69bb      	ldr	r3, [r7, #24]
 8001a0e:	2bff      	cmp	r3, #255	@ 0xff
 8001a10:	d801      	bhi.n	8001a16 <HAL_GPIO_Init+0x13a>
 8001a12:	687b      	ldr	r3, [r7, #4]
 8001a14:	e001      	b.n	8001a1a <HAL_GPIO_Init+0x13e>
 8001a16:	687b      	ldr	r3, [r7, #4]
 8001a18:	3304      	adds	r3, #4
 8001a1a:	617b      	str	r3, [r7, #20]
 8001a1c:	69bb      	ldr	r3, [r7, #24]
 8001a1e:	2bff      	cmp	r3, #255	@ 0xff
 8001a20:	d802      	bhi.n	8001a28 <HAL_GPIO_Init+0x14c>
 8001a22:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a24:	009b      	lsls	r3, r3, #2
 8001a26:	e002      	b.n	8001a2e <HAL_GPIO_Init+0x152>
 8001a28:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a2a:	3b08      	subs	r3, #8
 8001a2c:	009b      	lsls	r3, r3, #2
 8001a2e:	613b      	str	r3, [r7, #16]
 8001a30:	697b      	ldr	r3, [r7, #20]
 8001a32:	681a      	ldr	r2, [r3, #0]
 8001a34:	210f      	movs	r1, #15
 8001a36:	693b      	ldr	r3, [r7, #16]
 8001a38:	fa01 f303 	lsl.w	r3, r1, r3
 8001a3c:	43db      	mvns	r3, r3
 8001a3e:	401a      	ands	r2, r3
 8001a40:	6a39      	ldr	r1, [r7, #32]
 8001a42:	693b      	ldr	r3, [r7, #16]
 8001a44:	fa01 f303 	lsl.w	r3, r1, r3
 8001a48:	431a      	orrs	r2, r3
 8001a4a:	697b      	ldr	r3, [r7, #20]
 8001a4c:	601a      	str	r2, [r3, #0]
 8001a4e:	683b      	ldr	r3, [r7, #0]
 8001a50:	685b      	ldr	r3, [r3, #4]
 8001a52:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001a56:	2b00      	cmp	r3, #0
 8001a58:	f000 80a9 	beq.w	8001bae <HAL_GPIO_Init+0x2d2>
 8001a5c:	4b4a      	ldr	r3, [pc, #296]	@ (8001b88 <HAL_GPIO_Init+0x2ac>)
 8001a5e:	699b      	ldr	r3, [r3, #24]
 8001a60:	4a49      	ldr	r2, [pc, #292]	@ (8001b88 <HAL_GPIO_Init+0x2ac>)
 8001a62:	f043 0301 	orr.w	r3, r3, #1
 8001a66:	6193      	str	r3, [r2, #24]
 8001a68:	4b47      	ldr	r3, [pc, #284]	@ (8001b88 <HAL_GPIO_Init+0x2ac>)
 8001a6a:	699b      	ldr	r3, [r3, #24]
 8001a6c:	f003 0301 	and.w	r3, r3, #1
 8001a70:	60bb      	str	r3, [r7, #8]
 8001a72:	68bb      	ldr	r3, [r7, #8]
 8001a74:	4a45      	ldr	r2, [pc, #276]	@ (8001b8c <HAL_GPIO_Init+0x2b0>)
 8001a76:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a78:	089b      	lsrs	r3, r3, #2
 8001a7a:	3302      	adds	r3, #2
 8001a7c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001a80:	60fb      	str	r3, [r7, #12]
 8001a82:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a84:	f003 0303 	and.w	r3, r3, #3
 8001a88:	009b      	lsls	r3, r3, #2
 8001a8a:	220f      	movs	r2, #15
 8001a8c:	fa02 f303 	lsl.w	r3, r2, r3
 8001a90:	43db      	mvns	r3, r3
 8001a92:	68fa      	ldr	r2, [r7, #12]
 8001a94:	4013      	ands	r3, r2
 8001a96:	60fb      	str	r3, [r7, #12]
 8001a98:	687b      	ldr	r3, [r7, #4]
 8001a9a:	4a3d      	ldr	r2, [pc, #244]	@ (8001b90 <HAL_GPIO_Init+0x2b4>)
 8001a9c:	4293      	cmp	r3, r2
 8001a9e:	d00d      	beq.n	8001abc <HAL_GPIO_Init+0x1e0>
 8001aa0:	687b      	ldr	r3, [r7, #4]
 8001aa2:	4a3c      	ldr	r2, [pc, #240]	@ (8001b94 <HAL_GPIO_Init+0x2b8>)
 8001aa4:	4293      	cmp	r3, r2
 8001aa6:	d007      	beq.n	8001ab8 <HAL_GPIO_Init+0x1dc>
 8001aa8:	687b      	ldr	r3, [r7, #4]
 8001aaa:	4a3b      	ldr	r2, [pc, #236]	@ (8001b98 <HAL_GPIO_Init+0x2bc>)
 8001aac:	4293      	cmp	r3, r2
 8001aae:	d101      	bne.n	8001ab4 <HAL_GPIO_Init+0x1d8>
 8001ab0:	2302      	movs	r3, #2
 8001ab2:	e004      	b.n	8001abe <HAL_GPIO_Init+0x1e2>
 8001ab4:	2303      	movs	r3, #3
 8001ab6:	e002      	b.n	8001abe <HAL_GPIO_Init+0x1e2>
 8001ab8:	2301      	movs	r3, #1
 8001aba:	e000      	b.n	8001abe <HAL_GPIO_Init+0x1e2>
 8001abc:	2300      	movs	r3, #0
 8001abe:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001ac0:	f002 0203 	and.w	r2, r2, #3
 8001ac4:	0092      	lsls	r2, r2, #2
 8001ac6:	4093      	lsls	r3, r2
 8001ac8:	68fa      	ldr	r2, [r7, #12]
 8001aca:	4313      	orrs	r3, r2
 8001acc:	60fb      	str	r3, [r7, #12]
 8001ace:	492f      	ldr	r1, [pc, #188]	@ (8001b8c <HAL_GPIO_Init+0x2b0>)
 8001ad0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001ad2:	089b      	lsrs	r3, r3, #2
 8001ad4:	3302      	adds	r3, #2
 8001ad6:	68fa      	ldr	r2, [r7, #12]
 8001ad8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001adc:	683b      	ldr	r3, [r7, #0]
 8001ade:	685b      	ldr	r3, [r3, #4]
 8001ae0:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001ae4:	2b00      	cmp	r3, #0
 8001ae6:	d006      	beq.n	8001af6 <HAL_GPIO_Init+0x21a>
 8001ae8:	4b2c      	ldr	r3, [pc, #176]	@ (8001b9c <HAL_GPIO_Init+0x2c0>)
 8001aea:	689a      	ldr	r2, [r3, #8]
 8001aec:	492b      	ldr	r1, [pc, #172]	@ (8001b9c <HAL_GPIO_Init+0x2c0>)
 8001aee:	69bb      	ldr	r3, [r7, #24]
 8001af0:	4313      	orrs	r3, r2
 8001af2:	608b      	str	r3, [r1, #8]
 8001af4:	e006      	b.n	8001b04 <HAL_GPIO_Init+0x228>
 8001af6:	4b29      	ldr	r3, [pc, #164]	@ (8001b9c <HAL_GPIO_Init+0x2c0>)
 8001af8:	689a      	ldr	r2, [r3, #8]
 8001afa:	69bb      	ldr	r3, [r7, #24]
 8001afc:	43db      	mvns	r3, r3
 8001afe:	4927      	ldr	r1, [pc, #156]	@ (8001b9c <HAL_GPIO_Init+0x2c0>)
 8001b00:	4013      	ands	r3, r2
 8001b02:	608b      	str	r3, [r1, #8]
 8001b04:	683b      	ldr	r3, [r7, #0]
 8001b06:	685b      	ldr	r3, [r3, #4]
 8001b08:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001b0c:	2b00      	cmp	r3, #0
 8001b0e:	d006      	beq.n	8001b1e <HAL_GPIO_Init+0x242>
 8001b10:	4b22      	ldr	r3, [pc, #136]	@ (8001b9c <HAL_GPIO_Init+0x2c0>)
 8001b12:	68da      	ldr	r2, [r3, #12]
 8001b14:	4921      	ldr	r1, [pc, #132]	@ (8001b9c <HAL_GPIO_Init+0x2c0>)
 8001b16:	69bb      	ldr	r3, [r7, #24]
 8001b18:	4313      	orrs	r3, r2
 8001b1a:	60cb      	str	r3, [r1, #12]
 8001b1c:	e006      	b.n	8001b2c <HAL_GPIO_Init+0x250>
 8001b1e:	4b1f      	ldr	r3, [pc, #124]	@ (8001b9c <HAL_GPIO_Init+0x2c0>)
 8001b20:	68da      	ldr	r2, [r3, #12]
 8001b22:	69bb      	ldr	r3, [r7, #24]
 8001b24:	43db      	mvns	r3, r3
 8001b26:	491d      	ldr	r1, [pc, #116]	@ (8001b9c <HAL_GPIO_Init+0x2c0>)
 8001b28:	4013      	ands	r3, r2
 8001b2a:	60cb      	str	r3, [r1, #12]
 8001b2c:	683b      	ldr	r3, [r7, #0]
 8001b2e:	685b      	ldr	r3, [r3, #4]
 8001b30:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001b34:	2b00      	cmp	r3, #0
 8001b36:	d006      	beq.n	8001b46 <HAL_GPIO_Init+0x26a>
 8001b38:	4b18      	ldr	r3, [pc, #96]	@ (8001b9c <HAL_GPIO_Init+0x2c0>)
 8001b3a:	685a      	ldr	r2, [r3, #4]
 8001b3c:	4917      	ldr	r1, [pc, #92]	@ (8001b9c <HAL_GPIO_Init+0x2c0>)
 8001b3e:	69bb      	ldr	r3, [r7, #24]
 8001b40:	4313      	orrs	r3, r2
 8001b42:	604b      	str	r3, [r1, #4]
 8001b44:	e006      	b.n	8001b54 <HAL_GPIO_Init+0x278>
 8001b46:	4b15      	ldr	r3, [pc, #84]	@ (8001b9c <HAL_GPIO_Init+0x2c0>)
 8001b48:	685a      	ldr	r2, [r3, #4]
 8001b4a:	69bb      	ldr	r3, [r7, #24]
 8001b4c:	43db      	mvns	r3, r3
 8001b4e:	4913      	ldr	r1, [pc, #76]	@ (8001b9c <HAL_GPIO_Init+0x2c0>)
 8001b50:	4013      	ands	r3, r2
 8001b52:	604b      	str	r3, [r1, #4]
 8001b54:	683b      	ldr	r3, [r7, #0]
 8001b56:	685b      	ldr	r3, [r3, #4]
 8001b58:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001b5c:	2b00      	cmp	r3, #0
 8001b5e:	d01f      	beq.n	8001ba0 <HAL_GPIO_Init+0x2c4>
 8001b60:	4b0e      	ldr	r3, [pc, #56]	@ (8001b9c <HAL_GPIO_Init+0x2c0>)
 8001b62:	681a      	ldr	r2, [r3, #0]
 8001b64:	490d      	ldr	r1, [pc, #52]	@ (8001b9c <HAL_GPIO_Init+0x2c0>)
 8001b66:	69bb      	ldr	r3, [r7, #24]
 8001b68:	4313      	orrs	r3, r2
 8001b6a:	600b      	str	r3, [r1, #0]
 8001b6c:	e01f      	b.n	8001bae <HAL_GPIO_Init+0x2d2>
 8001b6e:	bf00      	nop
 8001b70:	10320000 	.word	0x10320000
 8001b74:	10310000 	.word	0x10310000
 8001b78:	10220000 	.word	0x10220000
 8001b7c:	10210000 	.word	0x10210000
 8001b80:	10120000 	.word	0x10120000
 8001b84:	10110000 	.word	0x10110000
 8001b88:	40021000 	.word	0x40021000
 8001b8c:	40010000 	.word	0x40010000
 8001b90:	40010800 	.word	0x40010800
 8001b94:	40010c00 	.word	0x40010c00
 8001b98:	40011000 	.word	0x40011000
 8001b9c:	40010400 	.word	0x40010400
 8001ba0:	4b0b      	ldr	r3, [pc, #44]	@ (8001bd0 <HAL_GPIO_Init+0x2f4>)
 8001ba2:	681a      	ldr	r2, [r3, #0]
 8001ba4:	69bb      	ldr	r3, [r7, #24]
 8001ba6:	43db      	mvns	r3, r3
 8001ba8:	4909      	ldr	r1, [pc, #36]	@ (8001bd0 <HAL_GPIO_Init+0x2f4>)
 8001baa:	4013      	ands	r3, r2
 8001bac:	600b      	str	r3, [r1, #0]
 8001bae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001bb0:	3301      	adds	r3, #1
 8001bb2:	627b      	str	r3, [r7, #36]	@ 0x24
 8001bb4:	683b      	ldr	r3, [r7, #0]
 8001bb6:	681a      	ldr	r2, [r3, #0]
 8001bb8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001bba:	fa22 f303 	lsr.w	r3, r2, r3
 8001bbe:	2b00      	cmp	r3, #0
 8001bc0:	f47f ae96 	bne.w	80018f0 <HAL_GPIO_Init+0x14>
 8001bc4:	bf00      	nop
 8001bc6:	bf00      	nop
 8001bc8:	372c      	adds	r7, #44	@ 0x2c
 8001bca:	46bd      	mov	sp, r7
 8001bcc:	bc80      	pop	{r7}
 8001bce:	4770      	bx	lr
 8001bd0:	40010400 	.word	0x40010400

08001bd4 <HAL_GPIO_ReadPin>:
 8001bd4:	b480      	push	{r7}
 8001bd6:	b085      	sub	sp, #20
 8001bd8:	af00      	add	r7, sp, #0
 8001bda:	6078      	str	r0, [r7, #4]
 8001bdc:	460b      	mov	r3, r1
 8001bde:	807b      	strh	r3, [r7, #2]
 8001be0:	687b      	ldr	r3, [r7, #4]
 8001be2:	689a      	ldr	r2, [r3, #8]
 8001be4:	887b      	ldrh	r3, [r7, #2]
 8001be6:	4013      	ands	r3, r2
 8001be8:	2b00      	cmp	r3, #0
 8001bea:	d002      	beq.n	8001bf2 <HAL_GPIO_ReadPin+0x1e>
 8001bec:	2301      	movs	r3, #1
 8001bee:	73fb      	strb	r3, [r7, #15]
 8001bf0:	e001      	b.n	8001bf6 <HAL_GPIO_ReadPin+0x22>
 8001bf2:	2300      	movs	r3, #0
 8001bf4:	73fb      	strb	r3, [r7, #15]
 8001bf6:	7bfb      	ldrb	r3, [r7, #15]
 8001bf8:	4618      	mov	r0, r3
 8001bfa:	3714      	adds	r7, #20
 8001bfc:	46bd      	mov	sp, r7
 8001bfe:	bc80      	pop	{r7}
 8001c00:	4770      	bx	lr

08001c02 <HAL_GPIO_WritePin>:
 8001c02:	b480      	push	{r7}
 8001c04:	b083      	sub	sp, #12
 8001c06:	af00      	add	r7, sp, #0
 8001c08:	6078      	str	r0, [r7, #4]
 8001c0a:	460b      	mov	r3, r1
 8001c0c:	807b      	strh	r3, [r7, #2]
 8001c0e:	4613      	mov	r3, r2
 8001c10:	707b      	strb	r3, [r7, #1]
 8001c12:	787b      	ldrb	r3, [r7, #1]
 8001c14:	2b00      	cmp	r3, #0
 8001c16:	d003      	beq.n	8001c20 <HAL_GPIO_WritePin+0x1e>
 8001c18:	887a      	ldrh	r2, [r7, #2]
 8001c1a:	687b      	ldr	r3, [r7, #4]
 8001c1c:	611a      	str	r2, [r3, #16]
 8001c1e:	e003      	b.n	8001c28 <HAL_GPIO_WritePin+0x26>
 8001c20:	887b      	ldrh	r3, [r7, #2]
 8001c22:	041a      	lsls	r2, r3, #16
 8001c24:	687b      	ldr	r3, [r7, #4]
 8001c26:	611a      	str	r2, [r3, #16]
 8001c28:	bf00      	nop
 8001c2a:	370c      	adds	r7, #12
 8001c2c:	46bd      	mov	sp, r7
 8001c2e:	bc80      	pop	{r7}
 8001c30:	4770      	bx	lr

08001c32 <HAL_GPIO_TogglePin>:
 8001c32:	b480      	push	{r7}
 8001c34:	b085      	sub	sp, #20
 8001c36:	af00      	add	r7, sp, #0
 8001c38:	6078      	str	r0, [r7, #4]
 8001c3a:	460b      	mov	r3, r1
 8001c3c:	807b      	strh	r3, [r7, #2]
 8001c3e:	687b      	ldr	r3, [r7, #4]
 8001c40:	68db      	ldr	r3, [r3, #12]
 8001c42:	60fb      	str	r3, [r7, #12]
 8001c44:	887a      	ldrh	r2, [r7, #2]
 8001c46:	68fb      	ldr	r3, [r7, #12]
 8001c48:	4013      	ands	r3, r2
 8001c4a:	041a      	lsls	r2, r3, #16
 8001c4c:	68fb      	ldr	r3, [r7, #12]
 8001c4e:	43d9      	mvns	r1, r3
 8001c50:	887b      	ldrh	r3, [r7, #2]
 8001c52:	400b      	ands	r3, r1
 8001c54:	431a      	orrs	r2, r3
 8001c56:	687b      	ldr	r3, [r7, #4]
 8001c58:	611a      	str	r2, [r3, #16]
 8001c5a:	bf00      	nop
 8001c5c:	3714      	adds	r7, #20
 8001c5e:	46bd      	mov	sp, r7
 8001c60:	bc80      	pop	{r7}
 8001c62:	4770      	bx	lr

08001c64 <HAL_RCC_OscConfig>:
 8001c64:	b580      	push	{r7, lr}
 8001c66:	b086      	sub	sp, #24
 8001c68:	af00      	add	r7, sp, #0
 8001c6a:	6078      	str	r0, [r7, #4]
 8001c6c:	687b      	ldr	r3, [r7, #4]
 8001c6e:	2b00      	cmp	r3, #0
 8001c70:	d101      	bne.n	8001c76 <HAL_RCC_OscConfig+0x12>
 8001c72:	2301      	movs	r3, #1
 8001c74:	e272      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	681b      	ldr	r3, [r3, #0]
 8001c7a:	f003 0301 	and.w	r3, r3, #1
 8001c7e:	2b00      	cmp	r3, #0
 8001c80:	f000 8087 	beq.w	8001d92 <HAL_RCC_OscConfig+0x12e>
 8001c84:	4b92      	ldr	r3, [pc, #584]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001c86:	685b      	ldr	r3, [r3, #4]
 8001c88:	f003 030c 	and.w	r3, r3, #12
 8001c8c:	2b04      	cmp	r3, #4
 8001c8e:	d00c      	beq.n	8001caa <HAL_RCC_OscConfig+0x46>
 8001c90:	4b8f      	ldr	r3, [pc, #572]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001c92:	685b      	ldr	r3, [r3, #4]
 8001c94:	f003 030c 	and.w	r3, r3, #12
 8001c98:	2b08      	cmp	r3, #8
 8001c9a:	d112      	bne.n	8001cc2 <HAL_RCC_OscConfig+0x5e>
 8001c9c:	4b8c      	ldr	r3, [pc, #560]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001c9e:	685b      	ldr	r3, [r3, #4]
 8001ca0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001ca4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001ca8:	d10b      	bne.n	8001cc2 <HAL_RCC_OscConfig+0x5e>
 8001caa:	4b89      	ldr	r3, [pc, #548]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001cac:	681b      	ldr	r3, [r3, #0]
 8001cae:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001cb2:	2b00      	cmp	r3, #0
 8001cb4:	d06c      	beq.n	8001d90 <HAL_RCC_OscConfig+0x12c>
 8001cb6:	687b      	ldr	r3, [r7, #4]
 8001cb8:	685b      	ldr	r3, [r3, #4]
 8001cba:	2b00      	cmp	r3, #0
 8001cbc:	d168      	bne.n	8001d90 <HAL_RCC_OscConfig+0x12c>
 8001cbe:	2301      	movs	r3, #1
 8001cc0:	e24c      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	685b      	ldr	r3, [r3, #4]
 8001cc6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001cca:	d106      	bne.n	8001cda <HAL_RCC_OscConfig+0x76>
 8001ccc:	4b80      	ldr	r3, [pc, #512]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001cce:	681b      	ldr	r3, [r3, #0]
 8001cd0:	4a7f      	ldr	r2, [pc, #508]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001cd2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001cd6:	6013      	str	r3, [r2, #0]
 8001cd8:	e02e      	b.n	8001d38 <HAL_RCC_OscConfig+0xd4>
 8001cda:	687b      	ldr	r3, [r7, #4]
 8001cdc:	685b      	ldr	r3, [r3, #4]
 8001cde:	2b00      	cmp	r3, #0
 8001ce0:	d10c      	bne.n	8001cfc <HAL_RCC_OscConfig+0x98>
 8001ce2:	4b7b      	ldr	r3, [pc, #492]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001ce4:	681b      	ldr	r3, [r3, #0]
 8001ce6:	4a7a      	ldr	r2, [pc, #488]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001ce8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001cec:	6013      	str	r3, [r2, #0]
 8001cee:	4b78      	ldr	r3, [pc, #480]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001cf0:	681b      	ldr	r3, [r3, #0]
 8001cf2:	4a77      	ldr	r2, [pc, #476]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001cf4:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001cf8:	6013      	str	r3, [r2, #0]
 8001cfa:	e01d      	b.n	8001d38 <HAL_RCC_OscConfig+0xd4>
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	685b      	ldr	r3, [r3, #4]
 8001d00:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8001d04:	d10c      	bne.n	8001d20 <HAL_RCC_OscConfig+0xbc>
 8001d06:	4b72      	ldr	r3, [pc, #456]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001d08:	681b      	ldr	r3, [r3, #0]
 8001d0a:	4a71      	ldr	r2, [pc, #452]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001d0c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001d10:	6013      	str	r3, [r2, #0]
 8001d12:	4b6f      	ldr	r3, [pc, #444]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001d14:	681b      	ldr	r3, [r3, #0]
 8001d16:	4a6e      	ldr	r2, [pc, #440]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001d18:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001d1c:	6013      	str	r3, [r2, #0]
 8001d1e:	e00b      	b.n	8001d38 <HAL_RCC_OscConfig+0xd4>
 8001d20:	4b6b      	ldr	r3, [pc, #428]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001d22:	681b      	ldr	r3, [r3, #0]
 8001d24:	4a6a      	ldr	r2, [pc, #424]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001d26:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001d2a:	6013      	str	r3, [r2, #0]
 8001d2c:	4b68      	ldr	r3, [pc, #416]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001d2e:	681b      	ldr	r3, [r3, #0]
 8001d30:	4a67      	ldr	r2, [pc, #412]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001d32:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001d36:	6013      	str	r3, [r2, #0]
 8001d38:	687b      	ldr	r3, [r7, #4]
 8001d3a:	685b      	ldr	r3, [r3, #4]
 8001d3c:	2b00      	cmp	r3, #0
 8001d3e:	d013      	beq.n	8001d68 <HAL_RCC_OscConfig+0x104>
 8001d40:	f7ff fcb4 	bl	80016ac <HAL_GetTick>
 8001d44:	6138      	str	r0, [r7, #16]
 8001d46:	e008      	b.n	8001d5a <HAL_RCC_OscConfig+0xf6>
 8001d48:	f7ff fcb0 	bl	80016ac <HAL_GetTick>
 8001d4c:	4602      	mov	r2, r0
 8001d4e:	693b      	ldr	r3, [r7, #16]
 8001d50:	1ad3      	subs	r3, r2, r3
 8001d52:	2b64      	cmp	r3, #100	@ 0x64
 8001d54:	d901      	bls.n	8001d5a <HAL_RCC_OscConfig+0xf6>
 8001d56:	2303      	movs	r3, #3
 8001d58:	e200      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 8001d5a:	4b5d      	ldr	r3, [pc, #372]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001d5c:	681b      	ldr	r3, [r3, #0]
 8001d5e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001d62:	2b00      	cmp	r3, #0
 8001d64:	d0f0      	beq.n	8001d48 <HAL_RCC_OscConfig+0xe4>
 8001d66:	e014      	b.n	8001d92 <HAL_RCC_OscConfig+0x12e>
 8001d68:	f7ff fca0 	bl	80016ac <HAL_GetTick>
 8001d6c:	6138      	str	r0, [r7, #16]
 8001d6e:	e008      	b.n	8001d82 <HAL_RCC_OscConfig+0x11e>
 8001d70:	f7ff fc9c 	bl	80016ac <HAL_GetTick>
 8001d74:	4602      	mov	r2, r0
 8001d76:	693b      	ldr	r3, [r7, #16]
 8001d78:	1ad3      	subs	r3, r2, r3
 8001d7a:	2b64      	cmp	r3, #100	@ 0x64
 8001d7c:	d901      	bls.n	8001d82 <HAL_RCC_OscConfig+0x11e>
 8001d7e:	2303      	movs	r3, #3
 8001d80:	e1ec      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 8001d82:	4b53      	ldr	r3, [pc, #332]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001d84:	681b      	ldr	r3, [r3, #0]
 8001d86:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001d8a:	2b00      	cmp	r3, #0
 8001d8c:	d1f0      	bne.n	8001d70 <HAL_RCC_OscConfig+0x10c>
 8001d8e:	e000      	b.n	8001d92 <HAL_RCC_OscConfig+0x12e>
 8001d90:	bf00      	nop
 8001d92:	687b      	ldr	r3, [r7, #4]
 8001d94:	681b      	ldr	r3, [r3, #0]
 8001d96:	f003 0302 	and.w	r3, r3, #2
 8001d9a:	2b00      	cmp	r3, #0
 8001d9c:	d063      	beq.n	8001e66 <HAL_RCC_OscConfig+0x202>
 8001d9e:	4b4c      	ldr	r3, [pc, #304]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001da0:	685b      	ldr	r3, [r3, #4]
 8001da2:	f003 030c 	and.w	r3, r3, #12
 8001da6:	2b00      	cmp	r3, #0
 8001da8:	d00b      	beq.n	8001dc2 <HAL_RCC_OscConfig+0x15e>
 8001daa:	4b49      	ldr	r3, [pc, #292]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001dac:	685b      	ldr	r3, [r3, #4]
 8001dae:	f003 030c 	and.w	r3, r3, #12
 8001db2:	2b08      	cmp	r3, #8
 8001db4:	d11c      	bne.n	8001df0 <HAL_RCC_OscConfig+0x18c>
 8001db6:	4b46      	ldr	r3, [pc, #280]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001db8:	685b      	ldr	r3, [r3, #4]
 8001dba:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001dbe:	2b00      	cmp	r3, #0
 8001dc0:	d116      	bne.n	8001df0 <HAL_RCC_OscConfig+0x18c>
 8001dc2:	4b43      	ldr	r3, [pc, #268]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001dc4:	681b      	ldr	r3, [r3, #0]
 8001dc6:	f003 0302 	and.w	r3, r3, #2
 8001dca:	2b00      	cmp	r3, #0
 8001dcc:	d005      	beq.n	8001dda <HAL_RCC_OscConfig+0x176>
 8001dce:	687b      	ldr	r3, [r7, #4]
 8001dd0:	691b      	ldr	r3, [r3, #16]
 8001dd2:	2b01      	cmp	r3, #1
 8001dd4:	d001      	beq.n	8001dda <HAL_RCC_OscConfig+0x176>
 8001dd6:	2301      	movs	r3, #1
 8001dd8:	e1c0      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 8001dda:	4b3d      	ldr	r3, [pc, #244]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001ddc:	681b      	ldr	r3, [r3, #0]
 8001dde:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001de2:	687b      	ldr	r3, [r7, #4]
 8001de4:	695b      	ldr	r3, [r3, #20]
 8001de6:	00db      	lsls	r3, r3, #3
 8001de8:	4939      	ldr	r1, [pc, #228]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001dea:	4313      	orrs	r3, r2
 8001dec:	600b      	str	r3, [r1, #0]
 8001dee:	e03a      	b.n	8001e66 <HAL_RCC_OscConfig+0x202>
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	691b      	ldr	r3, [r3, #16]
 8001df4:	2b00      	cmp	r3, #0
 8001df6:	d020      	beq.n	8001e3a <HAL_RCC_OscConfig+0x1d6>
 8001df8:	4b36      	ldr	r3, [pc, #216]	@ (8001ed4 <HAL_RCC_OscConfig+0x270>)
 8001dfa:	2201      	movs	r2, #1
 8001dfc:	601a      	str	r2, [r3, #0]
 8001dfe:	f7ff fc55 	bl	80016ac <HAL_GetTick>
 8001e02:	6138      	str	r0, [r7, #16]
 8001e04:	e008      	b.n	8001e18 <HAL_RCC_OscConfig+0x1b4>
 8001e06:	f7ff fc51 	bl	80016ac <HAL_GetTick>
 8001e0a:	4602      	mov	r2, r0
 8001e0c:	693b      	ldr	r3, [r7, #16]
 8001e0e:	1ad3      	subs	r3, r2, r3
 8001e10:	2b02      	cmp	r3, #2
 8001e12:	d901      	bls.n	8001e18 <HAL_RCC_OscConfig+0x1b4>
 8001e14:	2303      	movs	r3, #3
 8001e16:	e1a1      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 8001e18:	4b2d      	ldr	r3, [pc, #180]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001e1a:	681b      	ldr	r3, [r3, #0]
 8001e1c:	f003 0302 	and.w	r3, r3, #2
 8001e20:	2b00      	cmp	r3, #0
 8001e22:	d0f0      	beq.n	8001e06 <HAL_RCC_OscConfig+0x1a2>
 8001e24:	4b2a      	ldr	r3, [pc, #168]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001e26:	681b      	ldr	r3, [r3, #0]
 8001e28:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001e2c:	687b      	ldr	r3, [r7, #4]
 8001e2e:	695b      	ldr	r3, [r3, #20]
 8001e30:	00db      	lsls	r3, r3, #3
 8001e32:	4927      	ldr	r1, [pc, #156]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001e34:	4313      	orrs	r3, r2
 8001e36:	600b      	str	r3, [r1, #0]
 8001e38:	e015      	b.n	8001e66 <HAL_RCC_OscConfig+0x202>
 8001e3a:	4b26      	ldr	r3, [pc, #152]	@ (8001ed4 <HAL_RCC_OscConfig+0x270>)
 8001e3c:	2200      	movs	r2, #0
 8001e3e:	601a      	str	r2, [r3, #0]
 8001e40:	f7ff fc34 	bl	80016ac <HAL_GetTick>
 8001e44:	6138      	str	r0, [r7, #16]
 8001e46:	e008      	b.n	8001e5a <HAL_RCC_OscConfig+0x1f6>
 8001e48:	f7ff fc30 	bl	80016ac <HAL_GetTick>
 8001e4c:	4602      	mov	r2, r0
 8001e4e:	693b      	ldr	r3, [r7, #16]
 8001e50:	1ad3      	subs	r3, r2, r3
 8001e52:	2b02      	cmp	r3, #2
 8001e54:	d901      	bls.n	8001e5a <HAL_RCC_OscConfig+0x1f6>
 8001e56:	2303      	movs	r3, #3
 8001e58:	e180      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 8001e5a:	4b1d      	ldr	r3, [pc, #116]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001e5c:	681b      	ldr	r3, [r3, #0]
 8001e5e:	f003 0302 	and.w	r3, r3, #2
 8001e62:	2b00      	cmp	r3, #0
 8001e64:	d1f0      	bne.n	8001e48 <HAL_RCC_OscConfig+0x1e4>
 8001e66:	687b      	ldr	r3, [r7, #4]
 8001e68:	681b      	ldr	r3, [r3, #0]
 8001e6a:	f003 0308 	and.w	r3, r3, #8
 8001e6e:	2b00      	cmp	r3, #0
 8001e70:	d03a      	beq.n	8001ee8 <HAL_RCC_OscConfig+0x284>
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	699b      	ldr	r3, [r3, #24]
 8001e76:	2b00      	cmp	r3, #0
 8001e78:	d019      	beq.n	8001eae <HAL_RCC_OscConfig+0x24a>
 8001e7a:	4b17      	ldr	r3, [pc, #92]	@ (8001ed8 <HAL_RCC_OscConfig+0x274>)
 8001e7c:	2201      	movs	r2, #1
 8001e7e:	601a      	str	r2, [r3, #0]
 8001e80:	f7ff fc14 	bl	80016ac <HAL_GetTick>
 8001e84:	6138      	str	r0, [r7, #16]
 8001e86:	e008      	b.n	8001e9a <HAL_RCC_OscConfig+0x236>
 8001e88:	f7ff fc10 	bl	80016ac <HAL_GetTick>
 8001e8c:	4602      	mov	r2, r0
 8001e8e:	693b      	ldr	r3, [r7, #16]
 8001e90:	1ad3      	subs	r3, r2, r3
 8001e92:	2b02      	cmp	r3, #2
 8001e94:	d901      	bls.n	8001e9a <HAL_RCC_OscConfig+0x236>
 8001e96:	2303      	movs	r3, #3
 8001e98:	e160      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 8001e9a:	4b0d      	ldr	r3, [pc, #52]	@ (8001ed0 <HAL_RCC_OscConfig+0x26c>)
 8001e9c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001e9e:	f003 0302 	and.w	r3, r3, #2
 8001ea2:	2b00      	cmp	r3, #0
 8001ea4:	d0f0      	beq.n	8001e88 <HAL_RCC_OscConfig+0x224>
 8001ea6:	2001      	movs	r0, #1
 8001ea8:	f000 fa9c 	bl	80023e4 <RCC_Delay>
 8001eac:	e01c      	b.n	8001ee8 <HAL_RCC_OscConfig+0x284>
 8001eae:	4b0a      	ldr	r3, [pc, #40]	@ (8001ed8 <HAL_RCC_OscConfig+0x274>)
 8001eb0:	2200      	movs	r2, #0
 8001eb2:	601a      	str	r2, [r3, #0]
 8001eb4:	f7ff fbfa 	bl	80016ac <HAL_GetTick>
 8001eb8:	6138      	str	r0, [r7, #16]
 8001eba:	e00f      	b.n	8001edc <HAL_RCC_OscConfig+0x278>
 8001ebc:	f7ff fbf6 	bl	80016ac <HAL_GetTick>
 8001ec0:	4602      	mov	r2, r0
 8001ec2:	693b      	ldr	r3, [r7, #16]
 8001ec4:	1ad3      	subs	r3, r2, r3
 8001ec6:	2b02      	cmp	r3, #2
 8001ec8:	d908      	bls.n	8001edc <HAL_RCC_OscConfig+0x278>
 8001eca:	2303      	movs	r3, #3
 8001ecc:	e146      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 8001ece:	bf00      	nop
 8001ed0:	40021000 	.word	0x40021000
 8001ed4:	42420000 	.word	0x42420000
 8001ed8:	42420480 	.word	0x42420480
 8001edc:	4b92      	ldr	r3, [pc, #584]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001ede:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001ee0:	f003 0302 	and.w	r3, r3, #2
 8001ee4:	2b00      	cmp	r3, #0
 8001ee6:	d1e9      	bne.n	8001ebc <HAL_RCC_OscConfig+0x258>
 8001ee8:	687b      	ldr	r3, [r7, #4]
 8001eea:	681b      	ldr	r3, [r3, #0]
 8001eec:	f003 0304 	and.w	r3, r3, #4
 8001ef0:	2b00      	cmp	r3, #0
 8001ef2:	f000 80a6 	beq.w	8002042 <HAL_RCC_OscConfig+0x3de>
 8001ef6:	2300      	movs	r3, #0
 8001ef8:	75fb      	strb	r3, [r7, #23]
 8001efa:	4b8b      	ldr	r3, [pc, #556]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001efc:	69db      	ldr	r3, [r3, #28]
 8001efe:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001f02:	2b00      	cmp	r3, #0
 8001f04:	d10d      	bne.n	8001f22 <HAL_RCC_OscConfig+0x2be>
 8001f06:	4b88      	ldr	r3, [pc, #544]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001f08:	69db      	ldr	r3, [r3, #28]
 8001f0a:	4a87      	ldr	r2, [pc, #540]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001f0c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001f10:	61d3      	str	r3, [r2, #28]
 8001f12:	4b85      	ldr	r3, [pc, #532]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001f14:	69db      	ldr	r3, [r3, #28]
 8001f16:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001f1a:	60bb      	str	r3, [r7, #8]
 8001f1c:	68bb      	ldr	r3, [r7, #8]
 8001f1e:	2301      	movs	r3, #1
 8001f20:	75fb      	strb	r3, [r7, #23]
 8001f22:	4b82      	ldr	r3, [pc, #520]	@ (800212c <HAL_RCC_OscConfig+0x4c8>)
 8001f24:	681b      	ldr	r3, [r3, #0]
 8001f26:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001f2a:	2b00      	cmp	r3, #0
 8001f2c:	d118      	bne.n	8001f60 <HAL_RCC_OscConfig+0x2fc>
 8001f2e:	4b7f      	ldr	r3, [pc, #508]	@ (800212c <HAL_RCC_OscConfig+0x4c8>)
 8001f30:	681b      	ldr	r3, [r3, #0]
 8001f32:	4a7e      	ldr	r2, [pc, #504]	@ (800212c <HAL_RCC_OscConfig+0x4c8>)
 8001f34:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001f38:	6013      	str	r3, [r2, #0]
 8001f3a:	f7ff fbb7 	bl	80016ac <HAL_GetTick>
 8001f3e:	6138      	str	r0, [r7, #16]
 8001f40:	e008      	b.n	8001f54 <HAL_RCC_OscConfig+0x2f0>
 8001f42:	f7ff fbb3 	bl	80016ac <HAL_GetTick>
 8001f46:	4602      	mov	r2, r0
 8001f48:	693b      	ldr	r3, [r7, #16]
 8001f4a:	1ad3      	subs	r3, r2, r3
 8001f4c:	2b64      	cmp	r3, #100	@ 0x64
 8001f4e:	d901      	bls.n	8001f54 <HAL_RCC_OscConfig+0x2f0>
 8001f50:	2303      	movs	r3, #3
 8001f52:	e103      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 8001f54:	4b75      	ldr	r3, [pc, #468]	@ (800212c <HAL_RCC_OscConfig+0x4c8>)
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001f5c:	2b00      	cmp	r3, #0
 8001f5e:	d0f0      	beq.n	8001f42 <HAL_RCC_OscConfig+0x2de>
 8001f60:	687b      	ldr	r3, [r7, #4]
 8001f62:	68db      	ldr	r3, [r3, #12]
 8001f64:	2b01      	cmp	r3, #1
 8001f66:	d106      	bne.n	8001f76 <HAL_RCC_OscConfig+0x312>
 8001f68:	4b6f      	ldr	r3, [pc, #444]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001f6a:	6a1b      	ldr	r3, [r3, #32]
 8001f6c:	4a6e      	ldr	r2, [pc, #440]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001f6e:	f043 0301 	orr.w	r3, r3, #1
 8001f72:	6213      	str	r3, [r2, #32]
 8001f74:	e02d      	b.n	8001fd2 <HAL_RCC_OscConfig+0x36e>
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	68db      	ldr	r3, [r3, #12]
 8001f7a:	2b00      	cmp	r3, #0
 8001f7c:	d10c      	bne.n	8001f98 <HAL_RCC_OscConfig+0x334>
 8001f7e:	4b6a      	ldr	r3, [pc, #424]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001f80:	6a1b      	ldr	r3, [r3, #32]
 8001f82:	4a69      	ldr	r2, [pc, #420]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001f84:	f023 0301 	bic.w	r3, r3, #1
 8001f88:	6213      	str	r3, [r2, #32]
 8001f8a:	4b67      	ldr	r3, [pc, #412]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001f8c:	6a1b      	ldr	r3, [r3, #32]
 8001f8e:	4a66      	ldr	r2, [pc, #408]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001f90:	f023 0304 	bic.w	r3, r3, #4
 8001f94:	6213      	str	r3, [r2, #32]
 8001f96:	e01c      	b.n	8001fd2 <HAL_RCC_OscConfig+0x36e>
 8001f98:	687b      	ldr	r3, [r7, #4]
 8001f9a:	68db      	ldr	r3, [r3, #12]
 8001f9c:	2b05      	cmp	r3, #5
 8001f9e:	d10c      	bne.n	8001fba <HAL_RCC_OscConfig+0x356>
 8001fa0:	4b61      	ldr	r3, [pc, #388]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001fa2:	6a1b      	ldr	r3, [r3, #32]
 8001fa4:	4a60      	ldr	r2, [pc, #384]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001fa6:	f043 0304 	orr.w	r3, r3, #4
 8001faa:	6213      	str	r3, [r2, #32]
 8001fac:	4b5e      	ldr	r3, [pc, #376]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001fae:	6a1b      	ldr	r3, [r3, #32]
 8001fb0:	4a5d      	ldr	r2, [pc, #372]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001fb2:	f043 0301 	orr.w	r3, r3, #1
 8001fb6:	6213      	str	r3, [r2, #32]
 8001fb8:	e00b      	b.n	8001fd2 <HAL_RCC_OscConfig+0x36e>
 8001fba:	4b5b      	ldr	r3, [pc, #364]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001fbc:	6a1b      	ldr	r3, [r3, #32]
 8001fbe:	4a5a      	ldr	r2, [pc, #360]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001fc0:	f023 0301 	bic.w	r3, r3, #1
 8001fc4:	6213      	str	r3, [r2, #32]
 8001fc6:	4b58      	ldr	r3, [pc, #352]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001fc8:	6a1b      	ldr	r3, [r3, #32]
 8001fca:	4a57      	ldr	r2, [pc, #348]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001fcc:	f023 0304 	bic.w	r3, r3, #4
 8001fd0:	6213      	str	r3, [r2, #32]
 8001fd2:	687b      	ldr	r3, [r7, #4]
 8001fd4:	68db      	ldr	r3, [r3, #12]
 8001fd6:	2b00      	cmp	r3, #0
 8001fd8:	d015      	beq.n	8002006 <HAL_RCC_OscConfig+0x3a2>
 8001fda:	f7ff fb67 	bl	80016ac <HAL_GetTick>
 8001fde:	6138      	str	r0, [r7, #16]
 8001fe0:	e00a      	b.n	8001ff8 <HAL_RCC_OscConfig+0x394>
 8001fe2:	f7ff fb63 	bl	80016ac <HAL_GetTick>
 8001fe6:	4602      	mov	r2, r0
 8001fe8:	693b      	ldr	r3, [r7, #16]
 8001fea:	1ad3      	subs	r3, r2, r3
 8001fec:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001ff0:	4293      	cmp	r3, r2
 8001ff2:	d901      	bls.n	8001ff8 <HAL_RCC_OscConfig+0x394>
 8001ff4:	2303      	movs	r3, #3
 8001ff6:	e0b1      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 8001ff8:	4b4b      	ldr	r3, [pc, #300]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8001ffa:	6a1b      	ldr	r3, [r3, #32]
 8001ffc:	f003 0302 	and.w	r3, r3, #2
 8002000:	2b00      	cmp	r3, #0
 8002002:	d0ee      	beq.n	8001fe2 <HAL_RCC_OscConfig+0x37e>
 8002004:	e014      	b.n	8002030 <HAL_RCC_OscConfig+0x3cc>
 8002006:	f7ff fb51 	bl	80016ac <HAL_GetTick>
 800200a:	6138      	str	r0, [r7, #16]
 800200c:	e00a      	b.n	8002024 <HAL_RCC_OscConfig+0x3c0>
 800200e:	f7ff fb4d 	bl	80016ac <HAL_GetTick>
 8002012:	4602      	mov	r2, r0
 8002014:	693b      	ldr	r3, [r7, #16]
 8002016:	1ad3      	subs	r3, r2, r3
 8002018:	f241 3288 	movw	r2, #5000	@ 0x1388
 800201c:	4293      	cmp	r3, r2
 800201e:	d901      	bls.n	8002024 <HAL_RCC_OscConfig+0x3c0>
 8002020:	2303      	movs	r3, #3
 8002022:	e09b      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 8002024:	4b40      	ldr	r3, [pc, #256]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8002026:	6a1b      	ldr	r3, [r3, #32]
 8002028:	f003 0302 	and.w	r3, r3, #2
 800202c:	2b00      	cmp	r3, #0
 800202e:	d1ee      	bne.n	800200e <HAL_RCC_OscConfig+0x3aa>
 8002030:	7dfb      	ldrb	r3, [r7, #23]
 8002032:	2b01      	cmp	r3, #1
 8002034:	d105      	bne.n	8002042 <HAL_RCC_OscConfig+0x3de>
 8002036:	4b3c      	ldr	r3, [pc, #240]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8002038:	69db      	ldr	r3, [r3, #28]
 800203a:	4a3b      	ldr	r2, [pc, #236]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 800203c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002040:	61d3      	str	r3, [r2, #28]
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	69db      	ldr	r3, [r3, #28]
 8002046:	2b00      	cmp	r3, #0
 8002048:	f000 8087 	beq.w	800215a <HAL_RCC_OscConfig+0x4f6>
 800204c:	4b36      	ldr	r3, [pc, #216]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 800204e:	685b      	ldr	r3, [r3, #4]
 8002050:	f003 030c 	and.w	r3, r3, #12
 8002054:	2b08      	cmp	r3, #8
 8002056:	d061      	beq.n	800211c <HAL_RCC_OscConfig+0x4b8>
 8002058:	687b      	ldr	r3, [r7, #4]
 800205a:	69db      	ldr	r3, [r3, #28]
 800205c:	2b02      	cmp	r3, #2
 800205e:	d146      	bne.n	80020ee <HAL_RCC_OscConfig+0x48a>
 8002060:	4b33      	ldr	r3, [pc, #204]	@ (8002130 <HAL_RCC_OscConfig+0x4cc>)
 8002062:	2200      	movs	r2, #0
 8002064:	601a      	str	r2, [r3, #0]
 8002066:	f7ff fb21 	bl	80016ac <HAL_GetTick>
 800206a:	6138      	str	r0, [r7, #16]
 800206c:	e008      	b.n	8002080 <HAL_RCC_OscConfig+0x41c>
 800206e:	f7ff fb1d 	bl	80016ac <HAL_GetTick>
 8002072:	4602      	mov	r2, r0
 8002074:	693b      	ldr	r3, [r7, #16]
 8002076:	1ad3      	subs	r3, r2, r3
 8002078:	2b02      	cmp	r3, #2
 800207a:	d901      	bls.n	8002080 <HAL_RCC_OscConfig+0x41c>
 800207c:	2303      	movs	r3, #3
 800207e:	e06d      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 8002080:	4b29      	ldr	r3, [pc, #164]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8002082:	681b      	ldr	r3, [r3, #0]
 8002084:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002088:	2b00      	cmp	r3, #0
 800208a:	d1f0      	bne.n	800206e <HAL_RCC_OscConfig+0x40a>
 800208c:	687b      	ldr	r3, [r7, #4]
 800208e:	6a1b      	ldr	r3, [r3, #32]
 8002090:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002094:	d108      	bne.n	80020a8 <HAL_RCC_OscConfig+0x444>
 8002096:	4b24      	ldr	r3, [pc, #144]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8002098:	685b      	ldr	r3, [r3, #4]
 800209a:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 800209e:	687b      	ldr	r3, [r7, #4]
 80020a0:	689b      	ldr	r3, [r3, #8]
 80020a2:	4921      	ldr	r1, [pc, #132]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 80020a4:	4313      	orrs	r3, r2
 80020a6:	604b      	str	r3, [r1, #4]
 80020a8:	4b1f      	ldr	r3, [pc, #124]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 80020aa:	685b      	ldr	r3, [r3, #4]
 80020ac:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	6a19      	ldr	r1, [r3, #32]
 80020b4:	687b      	ldr	r3, [r7, #4]
 80020b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80020b8:	430b      	orrs	r3, r1
 80020ba:	491b      	ldr	r1, [pc, #108]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 80020bc:	4313      	orrs	r3, r2
 80020be:	604b      	str	r3, [r1, #4]
 80020c0:	4b1b      	ldr	r3, [pc, #108]	@ (8002130 <HAL_RCC_OscConfig+0x4cc>)
 80020c2:	2201      	movs	r2, #1
 80020c4:	601a      	str	r2, [r3, #0]
 80020c6:	f7ff faf1 	bl	80016ac <HAL_GetTick>
 80020ca:	6138      	str	r0, [r7, #16]
 80020cc:	e008      	b.n	80020e0 <HAL_RCC_OscConfig+0x47c>
 80020ce:	f7ff faed 	bl	80016ac <HAL_GetTick>
 80020d2:	4602      	mov	r2, r0
 80020d4:	693b      	ldr	r3, [r7, #16]
 80020d6:	1ad3      	subs	r3, r2, r3
 80020d8:	2b02      	cmp	r3, #2
 80020da:	d901      	bls.n	80020e0 <HAL_RCC_OscConfig+0x47c>
 80020dc:	2303      	movs	r3, #3
 80020de:	e03d      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 80020e0:	4b11      	ldr	r3, [pc, #68]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 80020e2:	681b      	ldr	r3, [r3, #0]
 80020e4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80020e8:	2b00      	cmp	r3, #0
 80020ea:	d0f0      	beq.n	80020ce <HAL_RCC_OscConfig+0x46a>
 80020ec:	e035      	b.n	800215a <HAL_RCC_OscConfig+0x4f6>
 80020ee:	4b10      	ldr	r3, [pc, #64]	@ (8002130 <HAL_RCC_OscConfig+0x4cc>)
 80020f0:	2200      	movs	r2, #0
 80020f2:	601a      	str	r2, [r3, #0]
 80020f4:	f7ff fada 	bl	80016ac <HAL_GetTick>
 80020f8:	6138      	str	r0, [r7, #16]
 80020fa:	e008      	b.n	800210e <HAL_RCC_OscConfig+0x4aa>
 80020fc:	f7ff fad6 	bl	80016ac <HAL_GetTick>
 8002100:	4602      	mov	r2, r0
 8002102:	693b      	ldr	r3, [r7, #16]
 8002104:	1ad3      	subs	r3, r2, r3
 8002106:	2b02      	cmp	r3, #2
 8002108:	d901      	bls.n	800210e <HAL_RCC_OscConfig+0x4aa>
 800210a:	2303      	movs	r3, #3
 800210c:	e026      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 800210e:	4b06      	ldr	r3, [pc, #24]	@ (8002128 <HAL_RCC_OscConfig+0x4c4>)
 8002110:	681b      	ldr	r3, [r3, #0]
 8002112:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002116:	2b00      	cmp	r3, #0
 8002118:	d1f0      	bne.n	80020fc <HAL_RCC_OscConfig+0x498>
 800211a:	e01e      	b.n	800215a <HAL_RCC_OscConfig+0x4f6>
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	69db      	ldr	r3, [r3, #28]
 8002120:	2b01      	cmp	r3, #1
 8002122:	d107      	bne.n	8002134 <HAL_RCC_OscConfig+0x4d0>
 8002124:	2301      	movs	r3, #1
 8002126:	e019      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 8002128:	40021000 	.word	0x40021000
 800212c:	40007000 	.word	0x40007000
 8002130:	42420060 	.word	0x42420060
 8002134:	4b0b      	ldr	r3, [pc, #44]	@ (8002164 <HAL_RCC_OscConfig+0x500>)
 8002136:	685b      	ldr	r3, [r3, #4]
 8002138:	60fb      	str	r3, [r7, #12]
 800213a:	68fb      	ldr	r3, [r7, #12]
 800213c:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8002140:	687b      	ldr	r3, [r7, #4]
 8002142:	6a1b      	ldr	r3, [r3, #32]
 8002144:	429a      	cmp	r2, r3
 8002146:	d106      	bne.n	8002156 <HAL_RCC_OscConfig+0x4f2>
 8002148:	68fb      	ldr	r3, [r7, #12]
 800214a:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 800214e:	687b      	ldr	r3, [r7, #4]
 8002150:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002152:	429a      	cmp	r2, r3
 8002154:	d001      	beq.n	800215a <HAL_RCC_OscConfig+0x4f6>
 8002156:	2301      	movs	r3, #1
 8002158:	e000      	b.n	800215c <HAL_RCC_OscConfig+0x4f8>
 800215a:	2300      	movs	r3, #0
 800215c:	4618      	mov	r0, r3
 800215e:	3718      	adds	r7, #24
 8002160:	46bd      	mov	sp, r7
 8002162:	bd80      	pop	{r7, pc}
 8002164:	40021000 	.word	0x40021000

08002168 <HAL_RCC_ClockConfig>:
 8002168:	b580      	push	{r7, lr}
 800216a:	b084      	sub	sp, #16
 800216c:	af00      	add	r7, sp, #0
 800216e:	6078      	str	r0, [r7, #4]
 8002170:	6039      	str	r1, [r7, #0]
 8002172:	687b      	ldr	r3, [r7, #4]
 8002174:	2b00      	cmp	r3, #0
 8002176:	d101      	bne.n	800217c <HAL_RCC_ClockConfig+0x14>
 8002178:	2301      	movs	r3, #1
 800217a:	e0d0      	b.n	800231e <HAL_RCC_ClockConfig+0x1b6>
 800217c:	4b6a      	ldr	r3, [pc, #424]	@ (8002328 <HAL_RCC_ClockConfig+0x1c0>)
 800217e:	681b      	ldr	r3, [r3, #0]
 8002180:	f003 0307 	and.w	r3, r3, #7
 8002184:	683a      	ldr	r2, [r7, #0]
 8002186:	429a      	cmp	r2, r3
 8002188:	d910      	bls.n	80021ac <HAL_RCC_ClockConfig+0x44>
 800218a:	4b67      	ldr	r3, [pc, #412]	@ (8002328 <HAL_RCC_ClockConfig+0x1c0>)
 800218c:	681b      	ldr	r3, [r3, #0]
 800218e:	f023 0207 	bic.w	r2, r3, #7
 8002192:	4965      	ldr	r1, [pc, #404]	@ (8002328 <HAL_RCC_ClockConfig+0x1c0>)
 8002194:	683b      	ldr	r3, [r7, #0]
 8002196:	4313      	orrs	r3, r2
 8002198:	600b      	str	r3, [r1, #0]
 800219a:	4b63      	ldr	r3, [pc, #396]	@ (8002328 <HAL_RCC_ClockConfig+0x1c0>)
 800219c:	681b      	ldr	r3, [r3, #0]
 800219e:	f003 0307 	and.w	r3, r3, #7
 80021a2:	683a      	ldr	r2, [r7, #0]
 80021a4:	429a      	cmp	r2, r3
 80021a6:	d001      	beq.n	80021ac <HAL_RCC_ClockConfig+0x44>
 80021a8:	2301      	movs	r3, #1
 80021aa:	e0b8      	b.n	800231e <HAL_RCC_ClockConfig+0x1b6>
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	681b      	ldr	r3, [r3, #0]
 80021b0:	f003 0302 	and.w	r3, r3, #2
 80021b4:	2b00      	cmp	r3, #0
 80021b6:	d020      	beq.n	80021fa <HAL_RCC_ClockConfig+0x92>
 80021b8:	687b      	ldr	r3, [r7, #4]
 80021ba:	681b      	ldr	r3, [r3, #0]
 80021bc:	f003 0304 	and.w	r3, r3, #4
 80021c0:	2b00      	cmp	r3, #0
 80021c2:	d005      	beq.n	80021d0 <HAL_RCC_ClockConfig+0x68>
 80021c4:	4b59      	ldr	r3, [pc, #356]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 80021c6:	685b      	ldr	r3, [r3, #4]
 80021c8:	4a58      	ldr	r2, [pc, #352]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 80021ca:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80021ce:	6053      	str	r3, [r2, #4]
 80021d0:	687b      	ldr	r3, [r7, #4]
 80021d2:	681b      	ldr	r3, [r3, #0]
 80021d4:	f003 0308 	and.w	r3, r3, #8
 80021d8:	2b00      	cmp	r3, #0
 80021da:	d005      	beq.n	80021e8 <HAL_RCC_ClockConfig+0x80>
 80021dc:	4b53      	ldr	r3, [pc, #332]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 80021de:	685b      	ldr	r3, [r3, #4]
 80021e0:	4a52      	ldr	r2, [pc, #328]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 80021e2:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 80021e6:	6053      	str	r3, [r2, #4]
 80021e8:	4b50      	ldr	r3, [pc, #320]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 80021ea:	685b      	ldr	r3, [r3, #4]
 80021ec:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80021f0:	687b      	ldr	r3, [r7, #4]
 80021f2:	689b      	ldr	r3, [r3, #8]
 80021f4:	494d      	ldr	r1, [pc, #308]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 80021f6:	4313      	orrs	r3, r2
 80021f8:	604b      	str	r3, [r1, #4]
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	681b      	ldr	r3, [r3, #0]
 80021fe:	f003 0301 	and.w	r3, r3, #1
 8002202:	2b00      	cmp	r3, #0
 8002204:	d040      	beq.n	8002288 <HAL_RCC_ClockConfig+0x120>
 8002206:	687b      	ldr	r3, [r7, #4]
 8002208:	685b      	ldr	r3, [r3, #4]
 800220a:	2b01      	cmp	r3, #1
 800220c:	d107      	bne.n	800221e <HAL_RCC_ClockConfig+0xb6>
 800220e:	4b47      	ldr	r3, [pc, #284]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 8002210:	681b      	ldr	r3, [r3, #0]
 8002212:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002216:	2b00      	cmp	r3, #0
 8002218:	d115      	bne.n	8002246 <HAL_RCC_ClockConfig+0xde>
 800221a:	2301      	movs	r3, #1
 800221c:	e07f      	b.n	800231e <HAL_RCC_ClockConfig+0x1b6>
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	685b      	ldr	r3, [r3, #4]
 8002222:	2b02      	cmp	r3, #2
 8002224:	d107      	bne.n	8002236 <HAL_RCC_ClockConfig+0xce>
 8002226:	4b41      	ldr	r3, [pc, #260]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 8002228:	681b      	ldr	r3, [r3, #0]
 800222a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800222e:	2b00      	cmp	r3, #0
 8002230:	d109      	bne.n	8002246 <HAL_RCC_ClockConfig+0xde>
 8002232:	2301      	movs	r3, #1
 8002234:	e073      	b.n	800231e <HAL_RCC_ClockConfig+0x1b6>
 8002236:	4b3d      	ldr	r3, [pc, #244]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 8002238:	681b      	ldr	r3, [r3, #0]
 800223a:	f003 0302 	and.w	r3, r3, #2
 800223e:	2b00      	cmp	r3, #0
 8002240:	d101      	bne.n	8002246 <HAL_RCC_ClockConfig+0xde>
 8002242:	2301      	movs	r3, #1
 8002244:	e06b      	b.n	800231e <HAL_RCC_ClockConfig+0x1b6>
 8002246:	4b39      	ldr	r3, [pc, #228]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 8002248:	685b      	ldr	r3, [r3, #4]
 800224a:	f023 0203 	bic.w	r2, r3, #3
 800224e:	687b      	ldr	r3, [r7, #4]
 8002250:	685b      	ldr	r3, [r3, #4]
 8002252:	4936      	ldr	r1, [pc, #216]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 8002254:	4313      	orrs	r3, r2
 8002256:	604b      	str	r3, [r1, #4]
 8002258:	f7ff fa28 	bl	80016ac <HAL_GetTick>
 800225c:	60f8      	str	r0, [r7, #12]
 800225e:	e00a      	b.n	8002276 <HAL_RCC_ClockConfig+0x10e>
 8002260:	f7ff fa24 	bl	80016ac <HAL_GetTick>
 8002264:	4602      	mov	r2, r0
 8002266:	68fb      	ldr	r3, [r7, #12]
 8002268:	1ad3      	subs	r3, r2, r3
 800226a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800226e:	4293      	cmp	r3, r2
 8002270:	d901      	bls.n	8002276 <HAL_RCC_ClockConfig+0x10e>
 8002272:	2303      	movs	r3, #3
 8002274:	e053      	b.n	800231e <HAL_RCC_ClockConfig+0x1b6>
 8002276:	4b2d      	ldr	r3, [pc, #180]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 8002278:	685b      	ldr	r3, [r3, #4]
 800227a:	f003 020c 	and.w	r2, r3, #12
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	685b      	ldr	r3, [r3, #4]
 8002282:	009b      	lsls	r3, r3, #2
 8002284:	429a      	cmp	r2, r3
 8002286:	d1eb      	bne.n	8002260 <HAL_RCC_ClockConfig+0xf8>
 8002288:	4b27      	ldr	r3, [pc, #156]	@ (8002328 <HAL_RCC_ClockConfig+0x1c0>)
 800228a:	681b      	ldr	r3, [r3, #0]
 800228c:	f003 0307 	and.w	r3, r3, #7
 8002290:	683a      	ldr	r2, [r7, #0]
 8002292:	429a      	cmp	r2, r3
 8002294:	d210      	bcs.n	80022b8 <HAL_RCC_ClockConfig+0x150>
 8002296:	4b24      	ldr	r3, [pc, #144]	@ (8002328 <HAL_RCC_ClockConfig+0x1c0>)
 8002298:	681b      	ldr	r3, [r3, #0]
 800229a:	f023 0207 	bic.w	r2, r3, #7
 800229e:	4922      	ldr	r1, [pc, #136]	@ (8002328 <HAL_RCC_ClockConfig+0x1c0>)
 80022a0:	683b      	ldr	r3, [r7, #0]
 80022a2:	4313      	orrs	r3, r2
 80022a4:	600b      	str	r3, [r1, #0]
 80022a6:	4b20      	ldr	r3, [pc, #128]	@ (8002328 <HAL_RCC_ClockConfig+0x1c0>)
 80022a8:	681b      	ldr	r3, [r3, #0]
 80022aa:	f003 0307 	and.w	r3, r3, #7
 80022ae:	683a      	ldr	r2, [r7, #0]
 80022b0:	429a      	cmp	r2, r3
 80022b2:	d001      	beq.n	80022b8 <HAL_RCC_ClockConfig+0x150>
 80022b4:	2301      	movs	r3, #1
 80022b6:	e032      	b.n	800231e <HAL_RCC_ClockConfig+0x1b6>
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	681b      	ldr	r3, [r3, #0]
 80022bc:	f003 0304 	and.w	r3, r3, #4
 80022c0:	2b00      	cmp	r3, #0
 80022c2:	d008      	beq.n	80022d6 <HAL_RCC_ClockConfig+0x16e>
 80022c4:	4b19      	ldr	r3, [pc, #100]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 80022c6:	685b      	ldr	r3, [r3, #4]
 80022c8:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	68db      	ldr	r3, [r3, #12]
 80022d0:	4916      	ldr	r1, [pc, #88]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 80022d2:	4313      	orrs	r3, r2
 80022d4:	604b      	str	r3, [r1, #4]
 80022d6:	687b      	ldr	r3, [r7, #4]
 80022d8:	681b      	ldr	r3, [r3, #0]
 80022da:	f003 0308 	and.w	r3, r3, #8
 80022de:	2b00      	cmp	r3, #0
 80022e0:	d009      	beq.n	80022f6 <HAL_RCC_ClockConfig+0x18e>
 80022e2:	4b12      	ldr	r3, [pc, #72]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 80022e4:	685b      	ldr	r3, [r3, #4]
 80022e6:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	691b      	ldr	r3, [r3, #16]
 80022ee:	00db      	lsls	r3, r3, #3
 80022f0:	490e      	ldr	r1, [pc, #56]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 80022f2:	4313      	orrs	r3, r2
 80022f4:	604b      	str	r3, [r1, #4]
 80022f6:	f000 f821 	bl	800233c <HAL_RCC_GetSysClockFreq>
 80022fa:	4602      	mov	r2, r0
 80022fc:	4b0b      	ldr	r3, [pc, #44]	@ (800232c <HAL_RCC_ClockConfig+0x1c4>)
 80022fe:	685b      	ldr	r3, [r3, #4]
 8002300:	091b      	lsrs	r3, r3, #4
 8002302:	f003 030f 	and.w	r3, r3, #15
 8002306:	490a      	ldr	r1, [pc, #40]	@ (8002330 <HAL_RCC_ClockConfig+0x1c8>)
 8002308:	5ccb      	ldrb	r3, [r1, r3]
 800230a:	fa22 f303 	lsr.w	r3, r2, r3
 800230e:	4a09      	ldr	r2, [pc, #36]	@ (8002334 <HAL_RCC_ClockConfig+0x1cc>)
 8002310:	6013      	str	r3, [r2, #0]
 8002312:	4b09      	ldr	r3, [pc, #36]	@ (8002338 <HAL_RCC_ClockConfig+0x1d0>)
 8002314:	681b      	ldr	r3, [r3, #0]
 8002316:	4618      	mov	r0, r3
 8002318:	f7ff f986 	bl	8001628 <HAL_InitTick>
 800231c:	2300      	movs	r3, #0
 800231e:	4618      	mov	r0, r3
 8002320:	3710      	adds	r7, #16
 8002322:	46bd      	mov	sp, r7
 8002324:	bd80      	pop	{r7, pc}
 8002326:	bf00      	nop
 8002328:	40022000 	.word	0x40022000
 800232c:	40021000 	.word	0x40021000
 8002330:	08002c48 	.word	0x08002c48
 8002334:	2000004c 	.word	0x2000004c
 8002338:	20000050 	.word	0x20000050

0800233c <HAL_RCC_GetSysClockFreq>:
 800233c:	b480      	push	{r7}
 800233e:	b087      	sub	sp, #28
 8002340:	af00      	add	r7, sp, #0
 8002342:	2300      	movs	r3, #0
 8002344:	60fb      	str	r3, [r7, #12]
 8002346:	2300      	movs	r3, #0
 8002348:	60bb      	str	r3, [r7, #8]
 800234a:	2300      	movs	r3, #0
 800234c:	617b      	str	r3, [r7, #20]
 800234e:	2300      	movs	r3, #0
 8002350:	607b      	str	r3, [r7, #4]
 8002352:	2300      	movs	r3, #0
 8002354:	613b      	str	r3, [r7, #16]
 8002356:	4b1e      	ldr	r3, [pc, #120]	@ (80023d0 <HAL_RCC_GetSysClockFreq+0x94>)
 8002358:	685b      	ldr	r3, [r3, #4]
 800235a:	60fb      	str	r3, [r7, #12]
 800235c:	68fb      	ldr	r3, [r7, #12]
 800235e:	f003 030c 	and.w	r3, r3, #12
 8002362:	2b04      	cmp	r3, #4
 8002364:	d002      	beq.n	800236c <HAL_RCC_GetSysClockFreq+0x30>
 8002366:	2b08      	cmp	r3, #8
 8002368:	d003      	beq.n	8002372 <HAL_RCC_GetSysClockFreq+0x36>
 800236a:	e027      	b.n	80023bc <HAL_RCC_GetSysClockFreq+0x80>
 800236c:	4b19      	ldr	r3, [pc, #100]	@ (80023d4 <HAL_RCC_GetSysClockFreq+0x98>)
 800236e:	613b      	str	r3, [r7, #16]
 8002370:	e027      	b.n	80023c2 <HAL_RCC_GetSysClockFreq+0x86>
 8002372:	68fb      	ldr	r3, [r7, #12]
 8002374:	0c9b      	lsrs	r3, r3, #18
 8002376:	f003 030f 	and.w	r3, r3, #15
 800237a:	4a17      	ldr	r2, [pc, #92]	@ (80023d8 <HAL_RCC_GetSysClockFreq+0x9c>)
 800237c:	5cd3      	ldrb	r3, [r2, r3]
 800237e:	607b      	str	r3, [r7, #4]
 8002380:	68fb      	ldr	r3, [r7, #12]
 8002382:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002386:	2b00      	cmp	r3, #0
 8002388:	d010      	beq.n	80023ac <HAL_RCC_GetSysClockFreq+0x70>
 800238a:	4b11      	ldr	r3, [pc, #68]	@ (80023d0 <HAL_RCC_GetSysClockFreq+0x94>)
 800238c:	685b      	ldr	r3, [r3, #4]
 800238e:	0c5b      	lsrs	r3, r3, #17
 8002390:	f003 0301 	and.w	r3, r3, #1
 8002394:	4a11      	ldr	r2, [pc, #68]	@ (80023dc <HAL_RCC_GetSysClockFreq+0xa0>)
 8002396:	5cd3      	ldrb	r3, [r2, r3]
 8002398:	60bb      	str	r3, [r7, #8]
 800239a:	687b      	ldr	r3, [r7, #4]
 800239c:	4a0d      	ldr	r2, [pc, #52]	@ (80023d4 <HAL_RCC_GetSysClockFreq+0x98>)
 800239e:	fb03 f202 	mul.w	r2, r3, r2
 80023a2:	68bb      	ldr	r3, [r7, #8]
 80023a4:	fbb2 f3f3 	udiv	r3, r2, r3
 80023a8:	617b      	str	r3, [r7, #20]
 80023aa:	e004      	b.n	80023b6 <HAL_RCC_GetSysClockFreq+0x7a>
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	4a0c      	ldr	r2, [pc, #48]	@ (80023e0 <HAL_RCC_GetSysClockFreq+0xa4>)
 80023b0:	fb02 f303 	mul.w	r3, r2, r3
 80023b4:	617b      	str	r3, [r7, #20]
 80023b6:	697b      	ldr	r3, [r7, #20]
 80023b8:	613b      	str	r3, [r7, #16]
 80023ba:	e002      	b.n	80023c2 <HAL_RCC_GetSysClockFreq+0x86>
 80023bc:	4b05      	ldr	r3, [pc, #20]	@ (80023d4 <HAL_RCC_GetSysClockFreq+0x98>)
 80023be:	613b      	str	r3, [r7, #16]
 80023c0:	bf00      	nop
 80023c2:	693b      	ldr	r3, [r7, #16]
 80023c4:	4618      	mov	r0, r3
 80023c6:	371c      	adds	r7, #28
 80023c8:	46bd      	mov	sp, r7
 80023ca:	bc80      	pop	{r7}
 80023cc:	4770      	bx	lr
 80023ce:	bf00      	nop
 80023d0:	40021000 	.word	0x40021000
 80023d4:	007a1200 	.word	0x007a1200
 80023d8:	08002c58 	.word	0x08002c58
 80023dc:	08002c68 	.word	0x08002c68
 80023e0:	003d0900 	.word	0x003d0900

080023e4 <RCC_Delay>:
 80023e4:	b480      	push	{r7}
 80023e6:	b085      	sub	sp, #20
 80023e8:	af00      	add	r7, sp, #0
 80023ea:	6078      	str	r0, [r7, #4]
 80023ec:	4b0a      	ldr	r3, [pc, #40]	@ (8002418 <RCC_Delay+0x34>)
 80023ee:	681b      	ldr	r3, [r3, #0]
 80023f0:	4a0a      	ldr	r2, [pc, #40]	@ (800241c <RCC_Delay+0x38>)
 80023f2:	fba2 2303 	umull	r2, r3, r2, r3
 80023f6:	0a5b      	lsrs	r3, r3, #9
 80023f8:	687a      	ldr	r2, [r7, #4]
 80023fa:	fb02 f303 	mul.w	r3, r2, r3
 80023fe:	60fb      	str	r3, [r7, #12]
 8002400:	bf00      	nop
 8002402:	68fb      	ldr	r3, [r7, #12]
 8002404:	1e5a      	subs	r2, r3, #1
 8002406:	60fa      	str	r2, [r7, #12]
 8002408:	2b00      	cmp	r3, #0
 800240a:	d1f9      	bne.n	8002400 <RCC_Delay+0x1c>
 800240c:	bf00      	nop
 800240e:	bf00      	nop
 8002410:	3714      	adds	r7, #20
 8002412:	46bd      	mov	sp, r7
 8002414:	bc80      	pop	{r7}
 8002416:	4770      	bx	lr
 8002418:	2000004c 	.word	0x2000004c
 800241c:	10624dd3 	.word	0x10624dd3

08002420 <HAL_TIM_Base_Init>:
 8002420:	b580      	push	{r7, lr}
 8002422:	b082      	sub	sp, #8
 8002424:	af00      	add	r7, sp, #0
 8002426:	6078      	str	r0, [r7, #4]
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	2b00      	cmp	r3, #0
 800242c:	d101      	bne.n	8002432 <HAL_TIM_Base_Init+0x12>
 800242e:	2301      	movs	r3, #1
 8002430:	e041      	b.n	80024b6 <HAL_TIM_Base_Init+0x96>
 8002432:	687b      	ldr	r3, [r7, #4]
 8002434:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002438:	b2db      	uxtb	r3, r3
 800243a:	2b00      	cmp	r3, #0
 800243c:	d106      	bne.n	800244c <HAL_TIM_Base_Init+0x2c>
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	2200      	movs	r2, #0
 8002442:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002446:	6878      	ldr	r0, [r7, #4]
 8002448:	f7ff f852 	bl	80014f0 <HAL_TIM_Base_MspInit>
 800244c:	687b      	ldr	r3, [r7, #4]
 800244e:	2202      	movs	r2, #2
 8002450:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	681a      	ldr	r2, [r3, #0]
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	3304      	adds	r3, #4
 800245c:	4619      	mov	r1, r3
 800245e:	4610      	mov	r0, r2
 8002460:	f000 fa56 	bl	8002910 <TIM_Base_SetConfig>
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	2201      	movs	r2, #1
 8002468:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	2201      	movs	r2, #1
 8002470:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	2201      	movs	r2, #1
 8002478:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800247c:	687b      	ldr	r3, [r7, #4]
 800247e:	2201      	movs	r2, #1
 8002480:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002484:	687b      	ldr	r3, [r7, #4]
 8002486:	2201      	movs	r2, #1
 8002488:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	2201      	movs	r2, #1
 8002490:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002494:	687b      	ldr	r3, [r7, #4]
 8002496:	2201      	movs	r2, #1
 8002498:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	2201      	movs	r2, #1
 80024a0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	2201      	movs	r2, #1
 80024a8:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	2201      	movs	r2, #1
 80024b0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80024b4:	2300      	movs	r3, #0
 80024b6:	4618      	mov	r0, r3
 80024b8:	3708      	adds	r7, #8
 80024ba:	46bd      	mov	sp, r7
 80024bc:	bd80      	pop	{r7, pc}
	...

080024c0 <HAL_TIM_Base_Start_IT>:
 80024c0:	b480      	push	{r7}
 80024c2:	b085      	sub	sp, #20
 80024c4:	af00      	add	r7, sp, #0
 80024c6:	6078      	str	r0, [r7, #4]
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80024ce:	b2db      	uxtb	r3, r3
 80024d0:	2b01      	cmp	r3, #1
 80024d2:	d001      	beq.n	80024d8 <HAL_TIM_Base_Start_IT+0x18>
 80024d4:	2301      	movs	r3, #1
 80024d6:	e035      	b.n	8002544 <HAL_TIM_Base_Start_IT+0x84>
 80024d8:	687b      	ldr	r3, [r7, #4]
 80024da:	2202      	movs	r2, #2
 80024dc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	68da      	ldr	r2, [r3, #12]
 80024e6:	687b      	ldr	r3, [r7, #4]
 80024e8:	681b      	ldr	r3, [r3, #0]
 80024ea:	f042 0201 	orr.w	r2, r2, #1
 80024ee:	60da      	str	r2, [r3, #12]
 80024f0:	687b      	ldr	r3, [r7, #4]
 80024f2:	681b      	ldr	r3, [r3, #0]
 80024f4:	4a16      	ldr	r2, [pc, #88]	@ (8002550 <HAL_TIM_Base_Start_IT+0x90>)
 80024f6:	4293      	cmp	r3, r2
 80024f8:	d009      	beq.n	800250e <HAL_TIM_Base_Start_IT+0x4e>
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	681b      	ldr	r3, [r3, #0]
 80024fe:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002502:	d004      	beq.n	800250e <HAL_TIM_Base_Start_IT+0x4e>
 8002504:	687b      	ldr	r3, [r7, #4]
 8002506:	681b      	ldr	r3, [r3, #0]
 8002508:	4a12      	ldr	r2, [pc, #72]	@ (8002554 <HAL_TIM_Base_Start_IT+0x94>)
 800250a:	4293      	cmp	r3, r2
 800250c:	d111      	bne.n	8002532 <HAL_TIM_Base_Start_IT+0x72>
 800250e:	687b      	ldr	r3, [r7, #4]
 8002510:	681b      	ldr	r3, [r3, #0]
 8002512:	689b      	ldr	r3, [r3, #8]
 8002514:	f003 0307 	and.w	r3, r3, #7
 8002518:	60fb      	str	r3, [r7, #12]
 800251a:	68fb      	ldr	r3, [r7, #12]
 800251c:	2b06      	cmp	r3, #6
 800251e:	d010      	beq.n	8002542 <HAL_TIM_Base_Start_IT+0x82>
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	681b      	ldr	r3, [r3, #0]
 8002524:	681a      	ldr	r2, [r3, #0]
 8002526:	687b      	ldr	r3, [r7, #4]
 8002528:	681b      	ldr	r3, [r3, #0]
 800252a:	f042 0201 	orr.w	r2, r2, #1
 800252e:	601a      	str	r2, [r3, #0]
 8002530:	e007      	b.n	8002542 <HAL_TIM_Base_Start_IT+0x82>
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	681a      	ldr	r2, [r3, #0]
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	f042 0201 	orr.w	r2, r2, #1
 8002540:	601a      	str	r2, [r3, #0]
 8002542:	2300      	movs	r3, #0
 8002544:	4618      	mov	r0, r3
 8002546:	3714      	adds	r7, #20
 8002548:	46bd      	mov	sp, r7
 800254a:	bc80      	pop	{r7}
 800254c:	4770      	bx	lr
 800254e:	bf00      	nop
 8002550:	40012c00 	.word	0x40012c00
 8002554:	40000400 	.word	0x40000400

08002558 <HAL_TIM_IRQHandler>:
 8002558:	b580      	push	{r7, lr}
 800255a:	b084      	sub	sp, #16
 800255c:	af00      	add	r7, sp, #0
 800255e:	6078      	str	r0, [r7, #4]
 8002560:	687b      	ldr	r3, [r7, #4]
 8002562:	681b      	ldr	r3, [r3, #0]
 8002564:	68db      	ldr	r3, [r3, #12]
 8002566:	60fb      	str	r3, [r7, #12]
 8002568:	687b      	ldr	r3, [r7, #4]
 800256a:	681b      	ldr	r3, [r3, #0]
 800256c:	691b      	ldr	r3, [r3, #16]
 800256e:	60bb      	str	r3, [r7, #8]
 8002570:	68bb      	ldr	r3, [r7, #8]
 8002572:	f003 0302 	and.w	r3, r3, #2
 8002576:	2b00      	cmp	r3, #0
 8002578:	d020      	beq.n	80025bc <HAL_TIM_IRQHandler+0x64>
 800257a:	68fb      	ldr	r3, [r7, #12]
 800257c:	f003 0302 	and.w	r3, r3, #2
 8002580:	2b00      	cmp	r3, #0
 8002582:	d01b      	beq.n	80025bc <HAL_TIM_IRQHandler+0x64>
 8002584:	687b      	ldr	r3, [r7, #4]
 8002586:	681b      	ldr	r3, [r3, #0]
 8002588:	f06f 0202 	mvn.w	r2, #2
 800258c:	611a      	str	r2, [r3, #16]
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	2201      	movs	r2, #1
 8002592:	771a      	strb	r2, [r3, #28]
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	681b      	ldr	r3, [r3, #0]
 8002598:	699b      	ldr	r3, [r3, #24]
 800259a:	f003 0303 	and.w	r3, r3, #3
 800259e:	2b00      	cmp	r3, #0
 80025a0:	d003      	beq.n	80025aa <HAL_TIM_IRQHandler+0x52>
 80025a2:	6878      	ldr	r0, [r7, #4]
 80025a4:	f000 f998 	bl	80028d8 <HAL_TIM_IC_CaptureCallback>
 80025a8:	e005      	b.n	80025b6 <HAL_TIM_IRQHandler+0x5e>
 80025aa:	6878      	ldr	r0, [r7, #4]
 80025ac:	f000 f98b 	bl	80028c6 <HAL_TIM_OC_DelayElapsedCallback>
 80025b0:	6878      	ldr	r0, [r7, #4]
 80025b2:	f000 f99a 	bl	80028ea <HAL_TIM_PWM_PulseFinishedCallback>
 80025b6:	687b      	ldr	r3, [r7, #4]
 80025b8:	2200      	movs	r2, #0
 80025ba:	771a      	strb	r2, [r3, #28]
 80025bc:	68bb      	ldr	r3, [r7, #8]
 80025be:	f003 0304 	and.w	r3, r3, #4
 80025c2:	2b00      	cmp	r3, #0
 80025c4:	d020      	beq.n	8002608 <HAL_TIM_IRQHandler+0xb0>
 80025c6:	68fb      	ldr	r3, [r7, #12]
 80025c8:	f003 0304 	and.w	r3, r3, #4
 80025cc:	2b00      	cmp	r3, #0
 80025ce:	d01b      	beq.n	8002608 <HAL_TIM_IRQHandler+0xb0>
 80025d0:	687b      	ldr	r3, [r7, #4]
 80025d2:	681b      	ldr	r3, [r3, #0]
 80025d4:	f06f 0204 	mvn.w	r2, #4
 80025d8:	611a      	str	r2, [r3, #16]
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	2202      	movs	r2, #2
 80025de:	771a      	strb	r2, [r3, #28]
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	681b      	ldr	r3, [r3, #0]
 80025e4:	699b      	ldr	r3, [r3, #24]
 80025e6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80025ea:	2b00      	cmp	r3, #0
 80025ec:	d003      	beq.n	80025f6 <HAL_TIM_IRQHandler+0x9e>
 80025ee:	6878      	ldr	r0, [r7, #4]
 80025f0:	f000 f972 	bl	80028d8 <HAL_TIM_IC_CaptureCallback>
 80025f4:	e005      	b.n	8002602 <HAL_TIM_IRQHandler+0xaa>
 80025f6:	6878      	ldr	r0, [r7, #4]
 80025f8:	f000 f965 	bl	80028c6 <HAL_TIM_OC_DelayElapsedCallback>
 80025fc:	6878      	ldr	r0, [r7, #4]
 80025fe:	f000 f974 	bl	80028ea <HAL_TIM_PWM_PulseFinishedCallback>
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	2200      	movs	r2, #0
 8002606:	771a      	strb	r2, [r3, #28]
 8002608:	68bb      	ldr	r3, [r7, #8]
 800260a:	f003 0308 	and.w	r3, r3, #8
 800260e:	2b00      	cmp	r3, #0
 8002610:	d020      	beq.n	8002654 <HAL_TIM_IRQHandler+0xfc>
 8002612:	68fb      	ldr	r3, [r7, #12]
 8002614:	f003 0308 	and.w	r3, r3, #8
 8002618:	2b00      	cmp	r3, #0
 800261a:	d01b      	beq.n	8002654 <HAL_TIM_IRQHandler+0xfc>
 800261c:	687b      	ldr	r3, [r7, #4]
 800261e:	681b      	ldr	r3, [r3, #0]
 8002620:	f06f 0208 	mvn.w	r2, #8
 8002624:	611a      	str	r2, [r3, #16]
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	2204      	movs	r2, #4
 800262a:	771a      	strb	r2, [r3, #28]
 800262c:	687b      	ldr	r3, [r7, #4]
 800262e:	681b      	ldr	r3, [r3, #0]
 8002630:	69db      	ldr	r3, [r3, #28]
 8002632:	f003 0303 	and.w	r3, r3, #3
 8002636:	2b00      	cmp	r3, #0
 8002638:	d003      	beq.n	8002642 <HAL_TIM_IRQHandler+0xea>
 800263a:	6878      	ldr	r0, [r7, #4]
 800263c:	f000 f94c 	bl	80028d8 <HAL_TIM_IC_CaptureCallback>
 8002640:	e005      	b.n	800264e <HAL_TIM_IRQHandler+0xf6>
 8002642:	6878      	ldr	r0, [r7, #4]
 8002644:	f000 f93f 	bl	80028c6 <HAL_TIM_OC_DelayElapsedCallback>
 8002648:	6878      	ldr	r0, [r7, #4]
 800264a:	f000 f94e 	bl	80028ea <HAL_TIM_PWM_PulseFinishedCallback>
 800264e:	687b      	ldr	r3, [r7, #4]
 8002650:	2200      	movs	r2, #0
 8002652:	771a      	strb	r2, [r3, #28]
 8002654:	68bb      	ldr	r3, [r7, #8]
 8002656:	f003 0310 	and.w	r3, r3, #16
 800265a:	2b00      	cmp	r3, #0
 800265c:	d020      	beq.n	80026a0 <HAL_TIM_IRQHandler+0x148>
 800265e:	68fb      	ldr	r3, [r7, #12]
 8002660:	f003 0310 	and.w	r3, r3, #16
 8002664:	2b00      	cmp	r3, #0
 8002666:	d01b      	beq.n	80026a0 <HAL_TIM_IRQHandler+0x148>
 8002668:	687b      	ldr	r3, [r7, #4]
 800266a:	681b      	ldr	r3, [r3, #0]
 800266c:	f06f 0210 	mvn.w	r2, #16
 8002670:	611a      	str	r2, [r3, #16]
 8002672:	687b      	ldr	r3, [r7, #4]
 8002674:	2208      	movs	r2, #8
 8002676:	771a      	strb	r2, [r3, #28]
 8002678:	687b      	ldr	r3, [r7, #4]
 800267a:	681b      	ldr	r3, [r3, #0]
 800267c:	69db      	ldr	r3, [r3, #28]
 800267e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8002682:	2b00      	cmp	r3, #0
 8002684:	d003      	beq.n	800268e <HAL_TIM_IRQHandler+0x136>
 8002686:	6878      	ldr	r0, [r7, #4]
 8002688:	f000 f926 	bl	80028d8 <HAL_TIM_IC_CaptureCallback>
 800268c:	e005      	b.n	800269a <HAL_TIM_IRQHandler+0x142>
 800268e:	6878      	ldr	r0, [r7, #4]
 8002690:	f000 f919 	bl	80028c6 <HAL_TIM_OC_DelayElapsedCallback>
 8002694:	6878      	ldr	r0, [r7, #4]
 8002696:	f000 f928 	bl	80028ea <HAL_TIM_PWM_PulseFinishedCallback>
 800269a:	687b      	ldr	r3, [r7, #4]
 800269c:	2200      	movs	r2, #0
 800269e:	771a      	strb	r2, [r3, #28]
 80026a0:	68bb      	ldr	r3, [r7, #8]
 80026a2:	f003 0301 	and.w	r3, r3, #1
 80026a6:	2b00      	cmp	r3, #0
 80026a8:	d00c      	beq.n	80026c4 <HAL_TIM_IRQHandler+0x16c>
 80026aa:	68fb      	ldr	r3, [r7, #12]
 80026ac:	f003 0301 	and.w	r3, r3, #1
 80026b0:	2b00      	cmp	r3, #0
 80026b2:	d007      	beq.n	80026c4 <HAL_TIM_IRQHandler+0x16c>
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	681b      	ldr	r3, [r3, #0]
 80026b8:	f06f 0201 	mvn.w	r2, #1
 80026bc:	611a      	str	r2, [r3, #16]
 80026be:	6878      	ldr	r0, [r7, #4]
 80026c0:	f7fe fe5c 	bl	800137c <HAL_TIM_PeriodElapsedCallback>
 80026c4:	68bb      	ldr	r3, [r7, #8]
 80026c6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80026ca:	2b00      	cmp	r3, #0
 80026cc:	d00c      	beq.n	80026e8 <HAL_TIM_IRQHandler+0x190>
 80026ce:	68fb      	ldr	r3, [r7, #12]
 80026d0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80026d4:	2b00      	cmp	r3, #0
 80026d6:	d007      	beq.n	80026e8 <HAL_TIM_IRQHandler+0x190>
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80026e0:	611a      	str	r2, [r3, #16]
 80026e2:	6878      	ldr	r0, [r7, #4]
 80026e4:	f000 fa6f 	bl	8002bc6 <HAL_TIMEx_BreakCallback>
 80026e8:	68bb      	ldr	r3, [r7, #8]
 80026ea:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80026ee:	2b00      	cmp	r3, #0
 80026f0:	d00c      	beq.n	800270c <HAL_TIM_IRQHandler+0x1b4>
 80026f2:	68fb      	ldr	r3, [r7, #12]
 80026f4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80026f8:	2b00      	cmp	r3, #0
 80026fa:	d007      	beq.n	800270c <HAL_TIM_IRQHandler+0x1b4>
 80026fc:	687b      	ldr	r3, [r7, #4]
 80026fe:	681b      	ldr	r3, [r3, #0]
 8002700:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8002704:	611a      	str	r2, [r3, #16]
 8002706:	6878      	ldr	r0, [r7, #4]
 8002708:	f000 f8f8 	bl	80028fc <HAL_TIM_TriggerCallback>
 800270c:	68bb      	ldr	r3, [r7, #8]
 800270e:	f003 0320 	and.w	r3, r3, #32
 8002712:	2b00      	cmp	r3, #0
 8002714:	d00c      	beq.n	8002730 <HAL_TIM_IRQHandler+0x1d8>
 8002716:	68fb      	ldr	r3, [r7, #12]
 8002718:	f003 0320 	and.w	r3, r3, #32
 800271c:	2b00      	cmp	r3, #0
 800271e:	d007      	beq.n	8002730 <HAL_TIM_IRQHandler+0x1d8>
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	681b      	ldr	r3, [r3, #0]
 8002724:	f06f 0220 	mvn.w	r2, #32
 8002728:	611a      	str	r2, [r3, #16]
 800272a:	6878      	ldr	r0, [r7, #4]
 800272c:	f000 fa42 	bl	8002bb4 <HAL_TIMEx_CommutCallback>
 8002730:	bf00      	nop
 8002732:	3710      	adds	r7, #16
 8002734:	46bd      	mov	sp, r7
 8002736:	bd80      	pop	{r7, pc}

08002738 <HAL_TIM_ConfigClockSource>:
 8002738:	b580      	push	{r7, lr}
 800273a:	b084      	sub	sp, #16
 800273c:	af00      	add	r7, sp, #0
 800273e:	6078      	str	r0, [r7, #4]
 8002740:	6039      	str	r1, [r7, #0]
 8002742:	2300      	movs	r3, #0
 8002744:	73fb      	strb	r3, [r7, #15]
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800274c:	2b01      	cmp	r3, #1
 800274e:	d101      	bne.n	8002754 <HAL_TIM_ConfigClockSource+0x1c>
 8002750:	2302      	movs	r3, #2
 8002752:	e0b4      	b.n	80028be <HAL_TIM_ConfigClockSource+0x186>
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	2201      	movs	r2, #1
 8002758:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800275c:	687b      	ldr	r3, [r7, #4]
 800275e:	2202      	movs	r2, #2
 8002760:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	681b      	ldr	r3, [r3, #0]
 8002768:	689b      	ldr	r3, [r3, #8]
 800276a:	60bb      	str	r3, [r7, #8]
 800276c:	68bb      	ldr	r3, [r7, #8]
 800276e:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8002772:	60bb      	str	r3, [r7, #8]
 8002774:	68bb      	ldr	r3, [r7, #8]
 8002776:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800277a:	60bb      	str	r3, [r7, #8]
 800277c:	687b      	ldr	r3, [r7, #4]
 800277e:	681b      	ldr	r3, [r3, #0]
 8002780:	68ba      	ldr	r2, [r7, #8]
 8002782:	609a      	str	r2, [r3, #8]
 8002784:	683b      	ldr	r3, [r7, #0]
 8002786:	681b      	ldr	r3, [r3, #0]
 8002788:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800278c:	d03e      	beq.n	800280c <HAL_TIM_ConfigClockSource+0xd4>
 800278e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8002792:	f200 8087 	bhi.w	80028a4 <HAL_TIM_ConfigClockSource+0x16c>
 8002796:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800279a:	f000 8086 	beq.w	80028aa <HAL_TIM_ConfigClockSource+0x172>
 800279e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80027a2:	d87f      	bhi.n	80028a4 <HAL_TIM_ConfigClockSource+0x16c>
 80027a4:	2b70      	cmp	r3, #112	@ 0x70
 80027a6:	d01a      	beq.n	80027de <HAL_TIM_ConfigClockSource+0xa6>
 80027a8:	2b70      	cmp	r3, #112	@ 0x70
 80027aa:	d87b      	bhi.n	80028a4 <HAL_TIM_ConfigClockSource+0x16c>
 80027ac:	2b60      	cmp	r3, #96	@ 0x60
 80027ae:	d050      	beq.n	8002852 <HAL_TIM_ConfigClockSource+0x11a>
 80027b0:	2b60      	cmp	r3, #96	@ 0x60
 80027b2:	d877      	bhi.n	80028a4 <HAL_TIM_ConfigClockSource+0x16c>
 80027b4:	2b50      	cmp	r3, #80	@ 0x50
 80027b6:	d03c      	beq.n	8002832 <HAL_TIM_ConfigClockSource+0xfa>
 80027b8:	2b50      	cmp	r3, #80	@ 0x50
 80027ba:	d873      	bhi.n	80028a4 <HAL_TIM_ConfigClockSource+0x16c>
 80027bc:	2b40      	cmp	r3, #64	@ 0x40
 80027be:	d058      	beq.n	8002872 <HAL_TIM_ConfigClockSource+0x13a>
 80027c0:	2b40      	cmp	r3, #64	@ 0x40
 80027c2:	d86f      	bhi.n	80028a4 <HAL_TIM_ConfigClockSource+0x16c>
 80027c4:	2b30      	cmp	r3, #48	@ 0x30
 80027c6:	d064      	beq.n	8002892 <HAL_TIM_ConfigClockSource+0x15a>
 80027c8:	2b30      	cmp	r3, #48	@ 0x30
 80027ca:	d86b      	bhi.n	80028a4 <HAL_TIM_ConfigClockSource+0x16c>
 80027cc:	2b20      	cmp	r3, #32
 80027ce:	d060      	beq.n	8002892 <HAL_TIM_ConfigClockSource+0x15a>
 80027d0:	2b20      	cmp	r3, #32
 80027d2:	d867      	bhi.n	80028a4 <HAL_TIM_ConfigClockSource+0x16c>
 80027d4:	2b00      	cmp	r3, #0
 80027d6:	d05c      	beq.n	8002892 <HAL_TIM_ConfigClockSource+0x15a>
 80027d8:	2b10      	cmp	r3, #16
 80027da:	d05a      	beq.n	8002892 <HAL_TIM_ConfigClockSource+0x15a>
 80027dc:	e062      	b.n	80028a4 <HAL_TIM_ConfigClockSource+0x16c>
 80027de:	687b      	ldr	r3, [r7, #4]
 80027e0:	6818      	ldr	r0, [r3, #0]
 80027e2:	683b      	ldr	r3, [r7, #0]
 80027e4:	6899      	ldr	r1, [r3, #8]
 80027e6:	683b      	ldr	r3, [r7, #0]
 80027e8:	685a      	ldr	r2, [r3, #4]
 80027ea:	683b      	ldr	r3, [r7, #0]
 80027ec:	68db      	ldr	r3, [r3, #12]
 80027ee:	f000 f96a 	bl	8002ac6 <TIM_ETR_SetConfig>
 80027f2:	687b      	ldr	r3, [r7, #4]
 80027f4:	681b      	ldr	r3, [r3, #0]
 80027f6:	689b      	ldr	r3, [r3, #8]
 80027f8:	60bb      	str	r3, [r7, #8]
 80027fa:	68bb      	ldr	r3, [r7, #8]
 80027fc:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8002800:	60bb      	str	r3, [r7, #8]
 8002802:	687b      	ldr	r3, [r7, #4]
 8002804:	681b      	ldr	r3, [r3, #0]
 8002806:	68ba      	ldr	r2, [r7, #8]
 8002808:	609a      	str	r2, [r3, #8]
 800280a:	e04f      	b.n	80028ac <HAL_TIM_ConfigClockSource+0x174>
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	6818      	ldr	r0, [r3, #0]
 8002810:	683b      	ldr	r3, [r7, #0]
 8002812:	6899      	ldr	r1, [r3, #8]
 8002814:	683b      	ldr	r3, [r7, #0]
 8002816:	685a      	ldr	r2, [r3, #4]
 8002818:	683b      	ldr	r3, [r7, #0]
 800281a:	68db      	ldr	r3, [r3, #12]
 800281c:	f000 f953 	bl	8002ac6 <TIM_ETR_SetConfig>
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	681b      	ldr	r3, [r3, #0]
 8002824:	689a      	ldr	r2, [r3, #8]
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	681b      	ldr	r3, [r3, #0]
 800282a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800282e:	609a      	str	r2, [r3, #8]
 8002830:	e03c      	b.n	80028ac <HAL_TIM_ConfigClockSource+0x174>
 8002832:	687b      	ldr	r3, [r7, #4]
 8002834:	6818      	ldr	r0, [r3, #0]
 8002836:	683b      	ldr	r3, [r7, #0]
 8002838:	6859      	ldr	r1, [r3, #4]
 800283a:	683b      	ldr	r3, [r7, #0]
 800283c:	68db      	ldr	r3, [r3, #12]
 800283e:	461a      	mov	r2, r3
 8002840:	f000 f8ca 	bl	80029d8 <TIM_TI1_ConfigInputStage>
 8002844:	687b      	ldr	r3, [r7, #4]
 8002846:	681b      	ldr	r3, [r3, #0]
 8002848:	2150      	movs	r1, #80	@ 0x50
 800284a:	4618      	mov	r0, r3
 800284c:	f000 f921 	bl	8002a92 <TIM_ITRx_SetConfig>
 8002850:	e02c      	b.n	80028ac <HAL_TIM_ConfigClockSource+0x174>
 8002852:	687b      	ldr	r3, [r7, #4]
 8002854:	6818      	ldr	r0, [r3, #0]
 8002856:	683b      	ldr	r3, [r7, #0]
 8002858:	6859      	ldr	r1, [r3, #4]
 800285a:	683b      	ldr	r3, [r7, #0]
 800285c:	68db      	ldr	r3, [r3, #12]
 800285e:	461a      	mov	r2, r3
 8002860:	f000 f8e8 	bl	8002a34 <TIM_TI2_ConfigInputStage>
 8002864:	687b      	ldr	r3, [r7, #4]
 8002866:	681b      	ldr	r3, [r3, #0]
 8002868:	2160      	movs	r1, #96	@ 0x60
 800286a:	4618      	mov	r0, r3
 800286c:	f000 f911 	bl	8002a92 <TIM_ITRx_SetConfig>
 8002870:	e01c      	b.n	80028ac <HAL_TIM_ConfigClockSource+0x174>
 8002872:	687b      	ldr	r3, [r7, #4]
 8002874:	6818      	ldr	r0, [r3, #0]
 8002876:	683b      	ldr	r3, [r7, #0]
 8002878:	6859      	ldr	r1, [r3, #4]
 800287a:	683b      	ldr	r3, [r7, #0]
 800287c:	68db      	ldr	r3, [r3, #12]
 800287e:	461a      	mov	r2, r3
 8002880:	f000 f8aa 	bl	80029d8 <TIM_TI1_ConfigInputStage>
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	681b      	ldr	r3, [r3, #0]
 8002888:	2140      	movs	r1, #64	@ 0x40
 800288a:	4618      	mov	r0, r3
 800288c:	f000 f901 	bl	8002a92 <TIM_ITRx_SetConfig>
 8002890:	e00c      	b.n	80028ac <HAL_TIM_ConfigClockSource+0x174>
 8002892:	687b      	ldr	r3, [r7, #4]
 8002894:	681a      	ldr	r2, [r3, #0]
 8002896:	683b      	ldr	r3, [r7, #0]
 8002898:	681b      	ldr	r3, [r3, #0]
 800289a:	4619      	mov	r1, r3
 800289c:	4610      	mov	r0, r2
 800289e:	f000 f8f8 	bl	8002a92 <TIM_ITRx_SetConfig>
 80028a2:	e003      	b.n	80028ac <HAL_TIM_ConfigClockSource+0x174>
 80028a4:	2301      	movs	r3, #1
 80028a6:	73fb      	strb	r3, [r7, #15]
 80028a8:	e000      	b.n	80028ac <HAL_TIM_ConfigClockSource+0x174>
 80028aa:	bf00      	nop
 80028ac:	687b      	ldr	r3, [r7, #4]
 80028ae:	2201      	movs	r2, #1
 80028b0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	2200      	movs	r2, #0
 80028b8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80028bc:	7bfb      	ldrb	r3, [r7, #15]
 80028be:	4618      	mov	r0, r3
 80028c0:	3710      	adds	r7, #16
 80028c2:	46bd      	mov	sp, r7
 80028c4:	bd80      	pop	{r7, pc}

080028c6 <HAL_TIM_OC_DelayElapsedCallback>:
 80028c6:	b480      	push	{r7}
 80028c8:	b083      	sub	sp, #12
 80028ca:	af00      	add	r7, sp, #0
 80028cc:	6078      	str	r0, [r7, #4]
 80028ce:	bf00      	nop
 80028d0:	370c      	adds	r7, #12
 80028d2:	46bd      	mov	sp, r7
 80028d4:	bc80      	pop	{r7}
 80028d6:	4770      	bx	lr

080028d8 <HAL_TIM_IC_CaptureCallback>:
 80028d8:	b480      	push	{r7}
 80028da:	b083      	sub	sp, #12
 80028dc:	af00      	add	r7, sp, #0
 80028de:	6078      	str	r0, [r7, #4]
 80028e0:	bf00      	nop
 80028e2:	370c      	adds	r7, #12
 80028e4:	46bd      	mov	sp, r7
 80028e6:	bc80      	pop	{r7}
 80028e8:	4770      	bx	lr

080028ea <HAL_TIM_PWM_PulseFinishedCallback>:
 80028ea:	b480      	push	{r7}
 80028ec:	b083      	sub	sp, #12
 80028ee:	af00      	add	r7, sp, #0
 80028f0:	6078      	str	r0, [r7, #4]
 80028f2:	bf00      	nop
 80028f4:	370c      	adds	r7, #12
 80028f6:	46bd      	mov	sp, r7
 80028f8:	bc80      	pop	{r7}
 80028fa:	4770      	bx	lr

080028fc <HAL_TIM_TriggerCallback>:
 80028fc:	b480      	push	{r7}
 80028fe:	b083      	sub	sp, #12
 8002900:	af00      	add	r7, sp, #0
 8002902:	6078      	str	r0, [r7, #4]
 8002904:	bf00      	nop
 8002906:	370c      	adds	r7, #12
 8002908:	46bd      	mov	sp, r7
 800290a:	bc80      	pop	{r7}
 800290c:	4770      	bx	lr
	...

08002910 <TIM_Base_SetConfig>:
 8002910:	b480      	push	{r7}
 8002912:	b085      	sub	sp, #20
 8002914:	af00      	add	r7, sp, #0
 8002916:	6078      	str	r0, [r7, #4]
 8002918:	6039      	str	r1, [r7, #0]
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	681b      	ldr	r3, [r3, #0]
 800291e:	60fb      	str	r3, [r7, #12]
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	4a2b      	ldr	r2, [pc, #172]	@ (80029d0 <TIM_Base_SetConfig+0xc0>)
 8002924:	4293      	cmp	r3, r2
 8002926:	d007      	beq.n	8002938 <TIM_Base_SetConfig+0x28>
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800292e:	d003      	beq.n	8002938 <TIM_Base_SetConfig+0x28>
 8002930:	687b      	ldr	r3, [r7, #4]
 8002932:	4a28      	ldr	r2, [pc, #160]	@ (80029d4 <TIM_Base_SetConfig+0xc4>)
 8002934:	4293      	cmp	r3, r2
 8002936:	d108      	bne.n	800294a <TIM_Base_SetConfig+0x3a>
 8002938:	68fb      	ldr	r3, [r7, #12]
 800293a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800293e:	60fb      	str	r3, [r7, #12]
 8002940:	683b      	ldr	r3, [r7, #0]
 8002942:	685b      	ldr	r3, [r3, #4]
 8002944:	68fa      	ldr	r2, [r7, #12]
 8002946:	4313      	orrs	r3, r2
 8002948:	60fb      	str	r3, [r7, #12]
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	4a20      	ldr	r2, [pc, #128]	@ (80029d0 <TIM_Base_SetConfig+0xc0>)
 800294e:	4293      	cmp	r3, r2
 8002950:	d007      	beq.n	8002962 <TIM_Base_SetConfig+0x52>
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002958:	d003      	beq.n	8002962 <TIM_Base_SetConfig+0x52>
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	4a1d      	ldr	r2, [pc, #116]	@ (80029d4 <TIM_Base_SetConfig+0xc4>)
 800295e:	4293      	cmp	r3, r2
 8002960:	d108      	bne.n	8002974 <TIM_Base_SetConfig+0x64>
 8002962:	68fb      	ldr	r3, [r7, #12]
 8002964:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8002968:	60fb      	str	r3, [r7, #12]
 800296a:	683b      	ldr	r3, [r7, #0]
 800296c:	68db      	ldr	r3, [r3, #12]
 800296e:	68fa      	ldr	r2, [r7, #12]
 8002970:	4313      	orrs	r3, r2
 8002972:	60fb      	str	r3, [r7, #12]
 8002974:	68fb      	ldr	r3, [r7, #12]
 8002976:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800297a:	683b      	ldr	r3, [r7, #0]
 800297c:	695b      	ldr	r3, [r3, #20]
 800297e:	4313      	orrs	r3, r2
 8002980:	60fb      	str	r3, [r7, #12]
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	68fa      	ldr	r2, [r7, #12]
 8002986:	601a      	str	r2, [r3, #0]
 8002988:	683b      	ldr	r3, [r7, #0]
 800298a:	689a      	ldr	r2, [r3, #8]
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002990:	683b      	ldr	r3, [r7, #0]
 8002992:	681a      	ldr	r2, [r3, #0]
 8002994:	687b      	ldr	r3, [r7, #4]
 8002996:	629a      	str	r2, [r3, #40]	@ 0x28
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	4a0d      	ldr	r2, [pc, #52]	@ (80029d0 <TIM_Base_SetConfig+0xc0>)
 800299c:	4293      	cmp	r3, r2
 800299e:	d103      	bne.n	80029a8 <TIM_Base_SetConfig+0x98>
 80029a0:	683b      	ldr	r3, [r7, #0]
 80029a2:	691a      	ldr	r2, [r3, #16]
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	631a      	str	r2, [r3, #48]	@ 0x30
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	2201      	movs	r2, #1
 80029ac:	615a      	str	r2, [r3, #20]
 80029ae:	687b      	ldr	r3, [r7, #4]
 80029b0:	691b      	ldr	r3, [r3, #16]
 80029b2:	f003 0301 	and.w	r3, r3, #1
 80029b6:	2b00      	cmp	r3, #0
 80029b8:	d005      	beq.n	80029c6 <TIM_Base_SetConfig+0xb6>
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	691b      	ldr	r3, [r3, #16]
 80029be:	f023 0201 	bic.w	r2, r3, #1
 80029c2:	687b      	ldr	r3, [r7, #4]
 80029c4:	611a      	str	r2, [r3, #16]
 80029c6:	bf00      	nop
 80029c8:	3714      	adds	r7, #20
 80029ca:	46bd      	mov	sp, r7
 80029cc:	bc80      	pop	{r7}
 80029ce:	4770      	bx	lr
 80029d0:	40012c00 	.word	0x40012c00
 80029d4:	40000400 	.word	0x40000400

080029d8 <TIM_TI1_ConfigInputStage>:
 80029d8:	b480      	push	{r7}
 80029da:	b087      	sub	sp, #28
 80029dc:	af00      	add	r7, sp, #0
 80029de:	60f8      	str	r0, [r7, #12]
 80029e0:	60b9      	str	r1, [r7, #8]
 80029e2:	607a      	str	r2, [r7, #4]
 80029e4:	68fb      	ldr	r3, [r7, #12]
 80029e6:	6a1b      	ldr	r3, [r3, #32]
 80029e8:	617b      	str	r3, [r7, #20]
 80029ea:	68fb      	ldr	r3, [r7, #12]
 80029ec:	6a1b      	ldr	r3, [r3, #32]
 80029ee:	f023 0201 	bic.w	r2, r3, #1
 80029f2:	68fb      	ldr	r3, [r7, #12]
 80029f4:	621a      	str	r2, [r3, #32]
 80029f6:	68fb      	ldr	r3, [r7, #12]
 80029f8:	699b      	ldr	r3, [r3, #24]
 80029fa:	613b      	str	r3, [r7, #16]
 80029fc:	693b      	ldr	r3, [r7, #16]
 80029fe:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8002a02:	613b      	str	r3, [r7, #16]
 8002a04:	687b      	ldr	r3, [r7, #4]
 8002a06:	011b      	lsls	r3, r3, #4
 8002a08:	693a      	ldr	r2, [r7, #16]
 8002a0a:	4313      	orrs	r3, r2
 8002a0c:	613b      	str	r3, [r7, #16]
 8002a0e:	697b      	ldr	r3, [r7, #20]
 8002a10:	f023 030a 	bic.w	r3, r3, #10
 8002a14:	617b      	str	r3, [r7, #20]
 8002a16:	697a      	ldr	r2, [r7, #20]
 8002a18:	68bb      	ldr	r3, [r7, #8]
 8002a1a:	4313      	orrs	r3, r2
 8002a1c:	617b      	str	r3, [r7, #20]
 8002a1e:	68fb      	ldr	r3, [r7, #12]
 8002a20:	693a      	ldr	r2, [r7, #16]
 8002a22:	619a      	str	r2, [r3, #24]
 8002a24:	68fb      	ldr	r3, [r7, #12]
 8002a26:	697a      	ldr	r2, [r7, #20]
 8002a28:	621a      	str	r2, [r3, #32]
 8002a2a:	bf00      	nop
 8002a2c:	371c      	adds	r7, #28
 8002a2e:	46bd      	mov	sp, r7
 8002a30:	bc80      	pop	{r7}
 8002a32:	4770      	bx	lr

08002a34 <TIM_TI2_ConfigInputStage>:
 8002a34:	b480      	push	{r7}
 8002a36:	b087      	sub	sp, #28
 8002a38:	af00      	add	r7, sp, #0
 8002a3a:	60f8      	str	r0, [r7, #12]
 8002a3c:	60b9      	str	r1, [r7, #8]
 8002a3e:	607a      	str	r2, [r7, #4]
 8002a40:	68fb      	ldr	r3, [r7, #12]
 8002a42:	6a1b      	ldr	r3, [r3, #32]
 8002a44:	617b      	str	r3, [r7, #20]
 8002a46:	68fb      	ldr	r3, [r7, #12]
 8002a48:	6a1b      	ldr	r3, [r3, #32]
 8002a4a:	f023 0210 	bic.w	r2, r3, #16
 8002a4e:	68fb      	ldr	r3, [r7, #12]
 8002a50:	621a      	str	r2, [r3, #32]
 8002a52:	68fb      	ldr	r3, [r7, #12]
 8002a54:	699b      	ldr	r3, [r3, #24]
 8002a56:	613b      	str	r3, [r7, #16]
 8002a58:	693b      	ldr	r3, [r7, #16]
 8002a5a:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8002a5e:	613b      	str	r3, [r7, #16]
 8002a60:	687b      	ldr	r3, [r7, #4]
 8002a62:	031b      	lsls	r3, r3, #12
 8002a64:	693a      	ldr	r2, [r7, #16]
 8002a66:	4313      	orrs	r3, r2
 8002a68:	613b      	str	r3, [r7, #16]
 8002a6a:	697b      	ldr	r3, [r7, #20]
 8002a6c:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8002a70:	617b      	str	r3, [r7, #20]
 8002a72:	68bb      	ldr	r3, [r7, #8]
 8002a74:	011b      	lsls	r3, r3, #4
 8002a76:	697a      	ldr	r2, [r7, #20]
 8002a78:	4313      	orrs	r3, r2
 8002a7a:	617b      	str	r3, [r7, #20]
 8002a7c:	68fb      	ldr	r3, [r7, #12]
 8002a7e:	693a      	ldr	r2, [r7, #16]
 8002a80:	619a      	str	r2, [r3, #24]
 8002a82:	68fb      	ldr	r3, [r7, #12]
 8002a84:	697a      	ldr	r2, [r7, #20]
 8002a86:	621a      	str	r2, [r3, #32]
 8002a88:	bf00      	nop
 8002a8a:	371c      	adds	r7, #28
 8002a8c:	46bd      	mov	sp, r7
 8002a8e:	bc80      	pop	{r7}
 8002a90:	4770      	bx	lr

08002a92 <TIM_ITRx_SetConfig>:
 8002a92:	b480      	push	{r7}
 8002a94:	b085      	sub	sp, #20
 8002a96:	af00      	add	r7, sp, #0
 8002a98:	6078      	str	r0, [r7, #4]
 8002a9a:	6039      	str	r1, [r7, #0]
 8002a9c:	687b      	ldr	r3, [r7, #4]
 8002a9e:	689b      	ldr	r3, [r3, #8]
 8002aa0:	60fb      	str	r3, [r7, #12]
 8002aa2:	68fb      	ldr	r3, [r7, #12]
 8002aa4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002aa8:	60fb      	str	r3, [r7, #12]
 8002aaa:	683a      	ldr	r2, [r7, #0]
 8002aac:	68fb      	ldr	r3, [r7, #12]
 8002aae:	4313      	orrs	r3, r2
 8002ab0:	f043 0307 	orr.w	r3, r3, #7
 8002ab4:	60fb      	str	r3, [r7, #12]
 8002ab6:	687b      	ldr	r3, [r7, #4]
 8002ab8:	68fa      	ldr	r2, [r7, #12]
 8002aba:	609a      	str	r2, [r3, #8]
 8002abc:	bf00      	nop
 8002abe:	3714      	adds	r7, #20
 8002ac0:	46bd      	mov	sp, r7
 8002ac2:	bc80      	pop	{r7}
 8002ac4:	4770      	bx	lr

08002ac6 <TIM_ETR_SetConfig>:
 8002ac6:	b480      	push	{r7}
 8002ac8:	b087      	sub	sp, #28
 8002aca:	af00      	add	r7, sp, #0
 8002acc:	60f8      	str	r0, [r7, #12]
 8002ace:	60b9      	str	r1, [r7, #8]
 8002ad0:	607a      	str	r2, [r7, #4]
 8002ad2:	603b      	str	r3, [r7, #0]
 8002ad4:	68fb      	ldr	r3, [r7, #12]
 8002ad6:	689b      	ldr	r3, [r3, #8]
 8002ad8:	617b      	str	r3, [r7, #20]
 8002ada:	697b      	ldr	r3, [r7, #20]
 8002adc:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8002ae0:	617b      	str	r3, [r7, #20]
 8002ae2:	683b      	ldr	r3, [r7, #0]
 8002ae4:	021a      	lsls	r2, r3, #8
 8002ae6:	687b      	ldr	r3, [r7, #4]
 8002ae8:	431a      	orrs	r2, r3
 8002aea:	68bb      	ldr	r3, [r7, #8]
 8002aec:	4313      	orrs	r3, r2
 8002aee:	697a      	ldr	r2, [r7, #20]
 8002af0:	4313      	orrs	r3, r2
 8002af2:	617b      	str	r3, [r7, #20]
 8002af4:	68fb      	ldr	r3, [r7, #12]
 8002af6:	697a      	ldr	r2, [r7, #20]
 8002af8:	609a      	str	r2, [r3, #8]
 8002afa:	bf00      	nop
 8002afc:	371c      	adds	r7, #28
 8002afe:	46bd      	mov	sp, r7
 8002b00:	bc80      	pop	{r7}
 8002b02:	4770      	bx	lr

08002b04 <HAL_TIMEx_MasterConfigSynchronization>:
 8002b04:	b480      	push	{r7}
 8002b06:	b085      	sub	sp, #20
 8002b08:	af00      	add	r7, sp, #0
 8002b0a:	6078      	str	r0, [r7, #4]
 8002b0c:	6039      	str	r1, [r7, #0]
 8002b0e:	687b      	ldr	r3, [r7, #4]
 8002b10:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002b14:	2b01      	cmp	r3, #1
 8002b16:	d101      	bne.n	8002b1c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002b18:	2302      	movs	r3, #2
 8002b1a:	e041      	b.n	8002ba0 <HAL_TIMEx_MasterConfigSynchronization+0x9c>
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	2201      	movs	r2, #1
 8002b20:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	2202      	movs	r2, #2
 8002b28:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	681b      	ldr	r3, [r3, #0]
 8002b30:	685b      	ldr	r3, [r3, #4]
 8002b32:	60fb      	str	r3, [r7, #12]
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	681b      	ldr	r3, [r3, #0]
 8002b38:	689b      	ldr	r3, [r3, #8]
 8002b3a:	60bb      	str	r3, [r7, #8]
 8002b3c:	68fb      	ldr	r3, [r7, #12]
 8002b3e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8002b42:	60fb      	str	r3, [r7, #12]
 8002b44:	683b      	ldr	r3, [r7, #0]
 8002b46:	681b      	ldr	r3, [r3, #0]
 8002b48:	68fa      	ldr	r2, [r7, #12]
 8002b4a:	4313      	orrs	r3, r2
 8002b4c:	60fb      	str	r3, [r7, #12]
 8002b4e:	687b      	ldr	r3, [r7, #4]
 8002b50:	681b      	ldr	r3, [r3, #0]
 8002b52:	68fa      	ldr	r2, [r7, #12]
 8002b54:	605a      	str	r2, [r3, #4]
 8002b56:	687b      	ldr	r3, [r7, #4]
 8002b58:	681b      	ldr	r3, [r3, #0]
 8002b5a:	4a14      	ldr	r2, [pc, #80]	@ (8002bac <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
 8002b5c:	4293      	cmp	r3, r2
 8002b5e:	d009      	beq.n	8002b74 <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	681b      	ldr	r3, [r3, #0]
 8002b64:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002b68:	d004      	beq.n	8002b74 <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8002b6a:	687b      	ldr	r3, [r7, #4]
 8002b6c:	681b      	ldr	r3, [r3, #0]
 8002b6e:	4a10      	ldr	r2, [pc, #64]	@ (8002bb0 <HAL_TIMEx_MasterConfigSynchronization+0xac>)
 8002b70:	4293      	cmp	r3, r2
 8002b72:	d10c      	bne.n	8002b8e <HAL_TIMEx_MasterConfigSynchronization+0x8a>
 8002b74:	68bb      	ldr	r3, [r7, #8]
 8002b76:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002b7a:	60bb      	str	r3, [r7, #8]
 8002b7c:	683b      	ldr	r3, [r7, #0]
 8002b7e:	685b      	ldr	r3, [r3, #4]
 8002b80:	68ba      	ldr	r2, [r7, #8]
 8002b82:	4313      	orrs	r3, r2
 8002b84:	60bb      	str	r3, [r7, #8]
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	681b      	ldr	r3, [r3, #0]
 8002b8a:	68ba      	ldr	r2, [r7, #8]
 8002b8c:	609a      	str	r2, [r3, #8]
 8002b8e:	687b      	ldr	r3, [r7, #4]
 8002b90:	2201      	movs	r2, #1
 8002b92:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	2200      	movs	r2, #0
 8002b9a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b9e:	2300      	movs	r3, #0
 8002ba0:	4618      	mov	r0, r3
 8002ba2:	3714      	adds	r7, #20
 8002ba4:	46bd      	mov	sp, r7
 8002ba6:	bc80      	pop	{r7}
 8002ba8:	4770      	bx	lr
 8002baa:	bf00      	nop
 8002bac:	40012c00 	.word	0x40012c00
 8002bb0:	40000400 	.word	0x40000400

08002bb4 <HAL_TIMEx_CommutCallback>:
 8002bb4:	b480      	push	{r7}
 8002bb6:	b083      	sub	sp, #12
 8002bb8:	af00      	add	r7, sp, #0
 8002bba:	6078      	str	r0, [r7, #4]
 8002bbc:	bf00      	nop
 8002bbe:	370c      	adds	r7, #12
 8002bc0:	46bd      	mov	sp, r7
 8002bc2:	bc80      	pop	{r7}
 8002bc4:	4770      	bx	lr

08002bc6 <HAL_TIMEx_BreakCallback>:
 8002bc6:	b480      	push	{r7}
 8002bc8:	b083      	sub	sp, #12
 8002bca:	af00      	add	r7, sp, #0
 8002bcc:	6078      	str	r0, [r7, #4]
 8002bce:	bf00      	nop
 8002bd0:	370c      	adds	r7, #12
 8002bd2:	46bd      	mov	sp, r7
 8002bd4:	bc80      	pop	{r7}
 8002bd6:	4770      	bx	lr

08002bd8 <memset>:
 8002bd8:	4603      	mov	r3, r0
 8002bda:	4402      	add	r2, r0
 8002bdc:	4293      	cmp	r3, r2
 8002bde:	d100      	bne.n	8002be2 <memset+0xa>
 8002be0:	4770      	bx	lr
 8002be2:	f803 1b01 	strb.w	r1, [r3], #1
 8002be6:	e7f9      	b.n	8002bdc <memset+0x4>

08002be8 <__libc_init_array>:
 8002be8:	b570      	push	{r4, r5, r6, lr}
 8002bea:	2600      	movs	r6, #0
 8002bec:	4d0c      	ldr	r5, [pc, #48]	@ (8002c20 <__libc_init_array+0x38>)
 8002bee:	4c0d      	ldr	r4, [pc, #52]	@ (8002c24 <__libc_init_array+0x3c>)
 8002bf0:	1b64      	subs	r4, r4, r5
 8002bf2:	10a4      	asrs	r4, r4, #2
 8002bf4:	42a6      	cmp	r6, r4
 8002bf6:	d109      	bne.n	8002c0c <__libc_init_array+0x24>
 8002bf8:	f000 f81a 	bl	8002c30 <_init>
 8002bfc:	2600      	movs	r6, #0
 8002bfe:	4d0a      	ldr	r5, [pc, #40]	@ (8002c28 <__libc_init_array+0x40>)
 8002c00:	4c0a      	ldr	r4, [pc, #40]	@ (8002c2c <__libc_init_array+0x44>)
 8002c02:	1b64      	subs	r4, r4, r5
 8002c04:	10a4      	asrs	r4, r4, #2
 8002c06:	42a6      	cmp	r6, r4
 8002c08:	d105      	bne.n	8002c16 <__libc_init_array+0x2e>
 8002c0a:	bd70      	pop	{r4, r5, r6, pc}
 8002c0c:	f855 3b04 	ldr.w	r3, [r5], #4
 8002c10:	4798      	blx	r3
 8002c12:	3601      	adds	r6, #1
 8002c14:	e7ee      	b.n	8002bf4 <__libc_init_array+0xc>
 8002c16:	f855 3b04 	ldr.w	r3, [r5], #4
 8002c1a:	4798      	blx	r3
 8002c1c:	3601      	adds	r6, #1
 8002c1e:	e7f2      	b.n	8002c06 <__libc_init_array+0x1e>
 8002c20:	08002c6c 	.word	0x08002c6c
 8002c24:	08002c6c 	.word	0x08002c6c
 8002c28:	08002c6c 	.word	0x08002c6c
 8002c2c:	08002c70 	.word	0x08002c70

08002c30 <_init>:
 8002c30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c32:	bf00      	nop
 8002c34:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002c36:	bc08      	pop	{r3}
 8002c38:	469e      	mov	lr, r3
 8002c3a:	4770      	bx	lr

08002c3c <_fini>:
 8002c3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c3e:	bf00      	nop
 8002c40:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002c42:	bc08      	pop	{r3}
 8002c44:	469e      	mov	lr, r3
 8002c46:	4770      	bx	lr
